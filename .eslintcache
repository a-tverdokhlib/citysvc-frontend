[{"D:\\React\\1-25\\front\\src\\index.js":"1","D:\\React\\1-25\\front\\src\\serviceWorker.js":"2","D:\\React\\1-25\\front\\src\\App.js":"3","D:\\React\\1-25\\front\\src\\configs\\AppConfig.js":"4","D:\\React\\1-25\\front\\src\\views\\index.js":"5","D:\\React\\1-25\\front\\src\\redux\\store\\index.js":"6","D:\\React\\1-25\\front\\src\\configs\\EnvironmentConfig.js":"7","D:\\React\\1-25\\front\\src\\redux\\reducers\\index.js":"8","D:\\React\\1-25\\front\\src\\redux\\sagas\\index.js":"9","D:\\React\\1-25\\front\\src\\constants\\ThemeConstant.js":"10","D:\\React\\1-25\\front\\src\\hooks\\useBodyClass.js":"11","D:\\React\\1-25\\front\\src\\redux\\reducers\\User.js":"12","D:\\React\\1-25\\front\\src\\redux\\reducers\\Theme.js":"13","D:\\React\\1-25\\front\\src\\redux\\reducers\\Calendar.js":"14","D:\\React\\1-25\\front\\src\\redux\\reducers\\Auth.js":"15","D:\\React\\1-25\\front\\src\\redux\\reducers\\Booking.js":"16","D:\\React\\1-25\\front\\src\\redux\\reducers\\routeCreator.js":"17","D:\\React\\1-25\\front\\src\\redux\\reducers\\MyCalendar.js":"18","D:\\React\\1-25\\front\\src\\redux\\sagas\\User.js":"19","D:\\React\\1-25\\front\\src\\redux\\sagas\\Calendar.js":"20","D:\\React\\1-25\\front\\src\\redux\\sagas\\Booking.js":"21","D:\\React\\1-25\\front\\src\\redux\\sagas\\Auth.js":"22","D:\\React\\1-25\\front\\src\\redux\\sagas\\MyCalendar.js":"23","D:\\React\\1-25\\front\\src\\redux\\sagas\\RouteCreator.js":"24","D:\\React\\1-25\\front\\src\\redux\\cart\\reducers.js":"25","D:\\React\\1-25\\front\\src\\lang\\index.js":"26","D:\\React\\1-25\\front\\src\\layouts\\app-layout\\index.js":"27","D:\\React\\1-25\\front\\src\\layouts\\auth-layout\\index.js":"28","D:\\React\\1-25\\front\\src\\redux\\constants\\Theme.js":"29","D:\\React\\1-25\\front\\src\\redux\\constants\\User.js":"30","D:\\React\\1-25\\front\\src\\redux\\constants\\Calendar.js":"31","D:\\React\\1-25\\front\\src\\redux\\constants\\Booking.js":"32","D:\\React\\1-25\\front\\src\\redux\\constants\\MyCalendar.js":"33","D:\\React\\1-25\\front\\src\\redux\\constants\\routeCreator.js":"34","D:\\React\\1-25\\front\\src\\redux\\constants\\Auth.js":"35","D:\\React\\1-25\\front\\src\\redux\\actions\\User.js":"36","D:\\React\\1-25\\front\\src\\services\\MyCalendarService.js":"37","D:\\React\\1-25\\front\\src\\redux\\cart\\actions.js":"38","D:\\React\\1-25\\front\\src\\lang\\entries\\da_DK.js":"39","D:\\React\\1-25\\front\\src\\services\\UserService.js":"40","D:\\React\\1-25\\front\\src\\services\\StorageService.js":"41","D:\\React\\1-25\\front\\src\\services\\RouteCreator.js":"42","D:\\React\\1-25\\front\\src\\services\\BookingService.js":"43","D:\\React\\1-25\\front\\src\\redux\\actions\\index.js":"44","D:\\React\\1-25\\front\\src\\configs\\NavigationConfig.js":"45","D:\\React\\1-25\\front\\src\\auth\\FetchInterceptor.js":"46","D:\\React\\1-25\\front\\src\\components\\layout-components\\HeaderNav.js":"47","D:\\React\\1-25\\front\\src\\components\\layout-components\\PageHeader.js":"48","D:\\React\\1-25\\front\\src\\components\\layout-components\\Footer.js":"49","D:\\React\\1-25\\front\\src\\components\\layout-components\\SideNav.js":"50","D:\\React\\1-25\\front\\src\\components\\layout-components\\TopNav.js":"51","D:\\React\\1-25\\front\\src\\components\\layout-components\\MobileNav.js":"52","D:\\React\\1-25\\front\\src\\views\\auth-views\\index.js":"53","D:\\React\\1-25\\front\\src\\redux\\actions\\RouteCreator.js":"54","D:\\React\\1-25\\front\\src\\redux\\actions\\MyCalendar.js":"55","D:\\React\\1-25\\front\\src\\redux\\actions\\Booking.js":"56","D:\\React\\1-25\\front\\src\\components\\shared-components\\Loading\\index.js":"57","D:\\React\\1-25\\front\\src\\redux\\actions\\Theme.js":"58","D:\\React\\1-25\\front\\src\\utils\\index.js":"59","D:\\React\\1-25\\front\\src\\views\\app-views\\index.js":"60","D:\\React\\1-25\\front\\src\\components\\layout-components\\MenuContent.js":"61","D:\\React\\1-25\\front\\src\\components\\layout-components\\Logo.js":"62","D:\\React\\1-25\\front\\src\\components\\layout-components\\NavLanguage.js":"63","D:\\React\\1-25\\front\\src\\components\\layout-components\\NavProfile.js":"64","D:\\React\\1-25\\front\\src\\components\\layout-components\\NavNotification.js":"65","D:\\React\\1-25\\front\\src\\history.js":"66","D:\\React\\1-25\\front\\src\\components\\layout-components\\AppBreadcrumb.js":"67","D:\\React\\1-25\\front\\src\\components\\util-components\\IntlMessage\\index.js":"68","D:\\React\\1-25\\front\\src\\views\\auth-views\\authentication\\reset-password\\index.js":"69","D:\\React\\1-25\\front\\src\\views\\auth-views\\authentication\\verify-email\\index.js":"70","D:\\React\\1-25\\front\\src\\views\\auth-views\\authentication\\forgot-password\\index.js":"71","D:\\React\\1-25\\front\\src\\views\\auth-views\\errors\\error-page-2\\index.js":"72","D:\\React\\1-25\\front\\src\\views\\auth-views\\errors\\error-page-1\\index.js":"73","D:\\React\\1-25\\front\\src\\views\\auth-views\\authentication\\register-1\\index.js":"74","D:\\React\\1-25\\front\\src\\views\\auth-views\\authentication\\login\\index.js":"75","D:\\React\\1-25\\front\\src\\views\\app-views\\myRoute\\index.js":"76","D:\\React\\1-25\\front\\src\\views\\app-views\\settings\\index.js":"77","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\index.js":"78","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\index.js":"79","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\map\\index.js":"80","D:\\React\\1-25\\front\\src\\views\\app-views\\myCalendar\\index.js":"81","D:\\React\\1-25\\front\\src\\views\\app-views\\accounts\\index.js":"82","D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\index.js":"83","D:\\React\\1-25\\front\\src\\components\\shared-components\\Flex\\index.js":"84","D:\\React\\1-25\\front\\src\\components\\util-components\\Icon\\index.js":"85","D:\\React\\1-25\\front\\src\\redux\\actions\\Auth.js":"86","D:\\React\\1-25\\front\\src\\views\\auth-views\\components\\RegisterForm.js":"87","D:\\React\\1-25\\front\\src\\views\\app-views\\settings\\timeScheduler.js":"88","D:\\React\\1-25\\front\\src\\views\\app-views\\myCalendar\\scheduleList.js":"89","D:\\React\\1-25\\front\\src\\views\\app-views\\myCalendar\\bookingList.js":"90","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\map\\mapstyle.js":"91","D:\\React\\1-25\\front\\src\\constants\\Options.js":"92","D:\\React\\1-25\\front\\src\\views\\app-views\\accounts\\list\\UserView.js":"93","D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\analytic\\AnalyticDashboardData.js":"94","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\bookingView.js":"95","D:\\React\\1-25\\front\\src\\services\\JwtAuthService.js":"96","D:\\React\\1-25\\front\\src\\views\\auth-views\\authentication\\login-1\\index.js":"97","D:\\React\\1-25\\front\\src\\redux\\actions\\Calendar.js":"98","D:\\React\\1-25\\front\\src\\views\\app-views\\accounts\\list\\index.js":"99","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\index.js":"100","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\bookingShipping.js":"101","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\bookingPickupDate.js":"102","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\bookingPickup.js":"103","D:\\React\\1-25\\front\\src\\views\\auth-views\\components\\LoginForm.js":"104","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\index.js":"105","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\adminList.js":"106","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\clientList.js":"107","D:\\React\\1-25\\front\\src\\views\\app-views\\accounts\\list\\userSecurity.js":"108","D:\\React\\1-25\\front\\src\\views\\app-views\\accounts\\list\\userBooking.js":"109","D:\\React\\1-25\\front\\src\\views\\app-views\\accounts\\list\\userProfile.js":"110","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\rules.js":"111","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\googleMapLocation.js":"112","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\Calendar.js":"113","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\bookingDetails.js":"114","D:\\React\\1-25\\front\\src\\constants\\ChartConstant.js":"115","D:\\React\\1-25\\front\\src\\assets\\svg\\icon.js":"116","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\Schedule.js":"117","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\Today.js":"118","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\Day.js":"119","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\Month.js":"120","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\Week.js":"121","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\Year.js":"122","D:\\React\\1-25\\front\\src\\views\\app-views\\styled.js":"123","D:\\React\\1-25\\front\\src\\constants\\RulesContant.js":"124","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\page-headers\\page-headers.js":"125","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\buttons\\share-button\\share-button.js":"126","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\buttons\\calendar-button\\calendar-button.js":"127","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\buttons\\buttons.js":"128","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\buttons\\export-button\\export-button.js":"129","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\cards\\frame\\cards-frame.js":"130","D:\\React\\1-25\\front\\src\\constants\\ApiConstant.js":"131","D:\\React\\1-25\\front\\src\\components\\util-components\\CustomIcon\\index.js":"132","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\Style.js":"133","D:\\React\\1-25\\front\\src\\views\\app-views\\components\\navigation\\dropdown\\Item.js":"134","D:\\React\\1-25\\front\\src\\redux\\calendar\\actionCreator.js":"135","D:\\React\\1-25\\front\\src\\components\\shared-components\\EllipsisDropdown\\index.js":"136","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\AddNewEvent.js":"137","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\ProjectUpdate.js":"138","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\modals\\antd-modals.js":"139","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\dropdown\\dropdown.js":"140","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\cards\\frame\\style.js":"141","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\buttons\\styled.js":"142","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\page-headers\\style.js":"143","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\heading\\heading.js":"144","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\popup\\popup.js":"145","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\datePicker\\datePicker.js":"146","D:\\React\\1-25\\front\\src\\redux\\calendar\\actions.js":"147","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\dropdown\\dropdown-style.js":"148","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\modals\\styled.js":"149","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\UpdateEvent.js":"150","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\datePicker\\style.js":"151","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\popup\\style.js":"152","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\heading\\style.js":"153","D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\empty\\index.js":"154","D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\default\\index.js":"155","D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\default\\DefaultDashboardData.js":"156","D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\client\\index.js":"157","D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\client\\SalesDashboardData.js":"158","D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\analytic\\index.js":"159","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\clientCreate.js":"160","D:\\React\\1-25\\front\\src\\views\\app-views\\myRoute\\myRoute.js":"161","D:\\React\\1-25\\front\\src\\views\\app-views\\myRoute\\list.js":"162","D:\\React\\1-25\\front\\src\\components\\layout-components\\PageHeaderAlt.js":"163","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\step1.js":"164","D:\\React\\1-25\\front\\src\\views\\app-views\\myRoute\\bookingList.js":"165","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\step2.js":"166","D:\\React\\1-25\\front\\src\\views\\app-views\\myRoute\\createDirection.js":"167","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\step3.js":"168","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\step4.js":"169","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\step5.js":"170","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\step6.js":"171","D:\\React\\1-25\\front\\src\\lang\\entries\\ja_JP.js":"172","D:\\React\\1-25\\front\\src\\lang\\entries\\fr_FR.js":"173","D:\\React\\1-25\\front\\src\\lang\\entries\\zh_CN.js":"174","D:\\React\\1-25\\front\\src\\lang\\entries\\en_US.js":"175","D:\\React\\1-25\\front\\src\\services\\CalendarService.js":"176","D:\\React\\1-25\\front\\src\\components\\shared-components\\AvatarStatus\\index.js":"177","D:\\React\\1-25\\front\\src\\views\\app-views\\myRoute\\destinations.js":"178","D:\\React\\1-25\\front\\src\\views\\app-views\\myRoute\\directions.js":"179","D:\\React\\1-25\\front\\src\\components\\shared-components\\ChartWidget\\index.js":"180","D:\\React\\1-25\\front\\src\\components\\shared-components\\DonutChartWidget\\index.js":"181","D:\\React\\1-25\\front\\src\\components\\shared-components\\RegiondataWidget\\index.js":"182","D:\\React\\1-25\\front\\src\\services\\FirebaseService.js":"183","D:\\React\\1-25\\front\\src\\auth\\FirebaseAuth.js":"184","D:\\React\\1-25\\front\\src\\configs\\FirebaseConfig.js":"185"},{"size":464,"mtime":1637145168000,"results":"186","hashOfConfig":"187"},{"size":5086,"mtime":1637145168000,"results":"188","hashOfConfig":"187"},{"size":964,"mtime":1637145168000,"results":"189","hashOfConfig":"187"},{"size":812,"mtime":1642915507855,"results":"190","hashOfConfig":"187"},{"size":2147,"mtime":1638235062000,"results":"191","hashOfConfig":"187"},{"size":841,"mtime":1638235062000,"results":"192","hashOfConfig":"187"},{"size":683,"mtime":1643136362592,"results":"193","hashOfConfig":"187"},{"size":534,"mtime":1641799448803,"results":"194","hashOfConfig":"187"},{"size":398,"mtime":1641857528793,"results":"195","hashOfConfig":"187"},{"size":2666,"mtime":1640064872000,"results":"196","hashOfConfig":"187"},{"size":553,"mtime":1637145168000,"results":"197","hashOfConfig":"187"},{"size":457,"mtime":1638235062000,"results":"198","hashOfConfig":"187"},{"size":1502,"mtime":1637145168000,"results":"199","hashOfConfig":"187"},{"size":3810,"mtime":1641340487974,"results":"200","hashOfConfig":"187"},{"size":1601,"mtime":1638235062000,"results":"201","hashOfConfig":"187"},{"size":5488,"mtime":1641966279462,"results":"202","hashOfConfig":"187"},{"size":3342,"mtime":1642306481740,"results":"203","hashOfConfig":"187"},{"size":1926,"mtime":1640064872000,"results":"204","hashOfConfig":"187"},{"size":605,"mtime":1638235062000,"results":"205","hashOfConfig":"187"},{"size":2137,"mtime":1638682258000,"results":"206","hashOfConfig":"187"},{"size":3040,"mtime":1641340258453,"results":"207","hashOfConfig":"187"},{"size":3325,"mtime":1638235062000,"results":"208","hashOfConfig":"187"},{"size":1593,"mtime":1640064872000,"results":"209","hashOfConfig":"187"},{"size":2512,"mtime":1642290901599,"results":"210","hashOfConfig":"187"},{"size":1517,"mtime":1638235062000,"results":"211","hashOfConfig":"187"},{"size":330,"mtime":1637145168000,"results":"212","hashOfConfig":"187"},{"size":3143,"mtime":1638235062000,"results":"213","hashOfConfig":"187"},{"size":568,"mtime":1637145168000,"results":"214","hashOfConfig":"187"},{"size":501,"mtime":1637145168000,"results":"215","hashOfConfig":"187"},{"size":80,"mtime":1637302048000,"results":"216","hashOfConfig":"187"},{"size":673,"mtime":1638677020000,"results":"217","hashOfConfig":"187"},{"size":1422,"mtime":1641964642864,"results":"218","hashOfConfig":"187"},{"size":607,"mtime":1640064872000,"results":"219","hashOfConfig":"187"},{"size":829,"mtime":1642306581095,"results":"220","hashOfConfig":"187"},{"size":768,"mtime":1638235062000,"results":"221","hashOfConfig":"187"},{"size":245,"mtime":1637302058000,"results":"222","hashOfConfig":"187"},{"size":1074,"mtime":1640064872000,"results":"223","hashOfConfig":"187"},{"size":1383,"mtime":1638235062000,"results":"224","hashOfConfig":"187"},{"size":212,"mtime":1637145168000,"results":"225","hashOfConfig":"187"},{"size":1605,"mtime":1640939432000,"results":"226","hashOfConfig":"187"},{"size":428,"mtime":1638235062000,"results":"227","hashOfConfig":"187"},{"size":2744,"mtime":1642291182561,"results":"228","hashOfConfig":"187"},{"size":2184,"mtime":1641252456513,"results":"229","hashOfConfig":"187"},{"size":170,"mtime":1641793626944,"results":"230","hashOfConfig":"187"},{"size":2222,"mtime":1643141112654,"results":"231","hashOfConfig":"187"},{"size":2659,"mtime":1641804063587,"results":"232","hashOfConfig":"187"},{"size":3124,"mtime":1642456502358,"results":"233","hashOfConfig":"187"},{"size":546,"mtime":1640959910000,"results":"234","hashOfConfig":"187"},{"size":589,"mtime":1637145168000,"results":"235","hashOfConfig":"187"},{"size":1036,"mtime":1637145168000,"results":"236","hashOfConfig":"187"},{"size":722,"mtime":1637145168000,"results":"237","hashOfConfig":"187"},{"size":1658,"mtime":1637145168000,"results":"238","hashOfConfig":"187"},{"size":1336,"mtime":1638235062000,"results":"239","hashOfConfig":"187"},{"size":2029,"mtime":1642306684447,"results":"240","hashOfConfig":"187"},{"size":1206,"mtime":1640064872000,"results":"241","hashOfConfig":"187"},{"size":3460,"mtime":1641964730204,"results":"242","hashOfConfig":"187"},{"size":570,"mtime":1637145168000,"results":"243","hashOfConfig":"187"},{"size":1307,"mtime":1637145168000,"results":"244","hashOfConfig":"187"},{"size":6332,"mtime":1637145168000,"results":"245","hashOfConfig":"187"},{"size":1490,"mtime":1643264754916,"results":"246","hashOfConfig":"187"},{"size":6591,"mtime":1638235062000,"results":"247","hashOfConfig":"187"},{"size":1655,"mtime":1637145168000,"results":"248","hashOfConfig":"187"},{"size":2282,"mtime":1637145168000,"results":"249","hashOfConfig":"187"},{"size":2512,"mtime":1642895529432,"results":"250","hashOfConfig":"187"},{"size":2986,"mtime":1637145168000,"results":"251","hashOfConfig":"187"},{"size":85,"mtime":1637145168000,"results":"252","hashOfConfig":"187"},{"size":1682,"mtime":1638235062000,"results":"253","hashOfConfig":"187"},{"size":216,"mtime":1637145168000,"results":"254","hashOfConfig":"187"},{"size":6346,"mtime":1641804183754,"results":"255","hashOfConfig":"187"},{"size":2910,"mtime":1641804172447,"results":"256","hashOfConfig":"187"},{"size":3751,"mtime":1641804278773,"results":"257","hashOfConfig":"187"},{"size":1528,"mtime":1637145170000,"results":"258","hashOfConfig":"187"},{"size":1876,"mtime":1637145170000,"results":"259","hashOfConfig":"187"},{"size":2210,"mtime":1642904537518,"results":"260","hashOfConfig":"187"},{"size":406,"mtime":1637145170000,"results":"261","hashOfConfig":"187"},{"size":646,"mtime":1642136141314,"results":"262","hashOfConfig":"187"},{"size":4738,"mtime":1641804612063,"results":"263","hashOfConfig":"187"},{"size":885,"mtime":1643265642203,"results":"264","hashOfConfig":"187"},{"size":653,"mtime":1643187353940,"results":"265","hashOfConfig":"187"},{"size":9109,"mtime":1642854360168,"results":"266","hashOfConfig":"187"},{"size":12049,"mtime":1642470248853,"results":"267","hashOfConfig":"187"},{"size":652,"mtime":1640905946000,"results":"268","hashOfConfig":"187"},{"size":811,"mtime":1643142564628,"results":"269","hashOfConfig":"187"},{"size":813,"mtime":1637145168000,"results":"270","hashOfConfig":"187"},{"size":250,"mtime":1637145168000,"results":"271","hashOfConfig":"187"},{"size":1777,"mtime":1638235062000,"results":"272","hashOfConfig":"187"},{"size":3784,"mtime":1642904463566,"results":"273","hashOfConfig":"187"},{"size":3680,"mtime":1641804460553,"results":"274","hashOfConfig":"187"},{"size":4724,"mtime":1640081962000,"results":"275","hashOfConfig":"187"},{"size":9036,"mtime":1642478856045,"results":"276","hashOfConfig":"187"},{"size":7650,"mtime":1639110996000,"results":"277","hashOfConfig":"187"},{"size":1225,"mtime":1642460926669,"results":"278","hashOfConfig":"187"},{"size":3079,"mtime":1642461672880,"results":"279","hashOfConfig":"187"},{"size":3197,"mtime":1637145170000,"results":"280","hashOfConfig":"187"},{"size":4207,"mtime":1642803257275,"results":"281","hashOfConfig":"187"},{"size":1478,"mtime":1638235062000,"results":"282","hashOfConfig":"187"},{"size":1388,"mtime":1642903534216,"results":"283","hashOfConfig":"187"},{"size":1393,"mtime":1638683668000,"results":"284","hashOfConfig":"187"},{"size":11204,"mtime":1642460193820,"results":"285","hashOfConfig":"187"},{"size":582,"mtime":1643187371822,"results":"286","hashOfConfig":"187"},{"size":3029,"mtime":1642803065927,"results":"287","hashOfConfig":"187"},{"size":5527,"mtime":1642802697700,"results":"288","hashOfConfig":"187"},{"size":3484,"mtime":1643143053691,"results":"289","hashOfConfig":"187"},{"size":4594,"mtime":1642915573911,"results":"290","hashOfConfig":"187"},{"size":345,"mtime":1640064872000,"results":"291","hashOfConfig":"187"},{"size":11355,"mtime":1643219823092,"results":"292","hashOfConfig":"187"},{"size":5911,"mtime":1642902996026,"results":"293","hashOfConfig":"187"},{"size":3560,"mtime":1642469358089,"results":"294","hashOfConfig":"187"},{"size":10480,"mtime":1643183307106,"results":"295","hashOfConfig":"187"},{"size":5964,"mtime":1642469250977,"results":"296","hashOfConfig":"187"},{"size":2318,"mtime":1643142899668,"results":"297","hashOfConfig":"187"},{"size":1177,"mtime":1642857170734,"results":"298","hashOfConfig":"187"},{"size":2859,"mtime":1640064872000,"results":"299","hashOfConfig":"187"},{"size":3106,"mtime":1643178211533,"results":"300","hashOfConfig":"187"},{"size":3679,"mtime":1638442932000,"results":"301","hashOfConfig":"187"},{"size":8795,"mtime":1637145168000,"results":"302","hashOfConfig":"187"},{"size":5877,"mtime":1640064872000,"results":"303","hashOfConfig":"187"},{"size":126,"mtime":1640064872000,"results":"304","hashOfConfig":"187"},{"size":7053,"mtime":1640064872000,"results":"305","hashOfConfig":"187"},{"size":7039,"mtime":1640064872000,"results":"306","hashOfConfig":"187"},{"size":13671,"mtime":1640064872000,"results":"307","hashOfConfig":"187"},{"size":4591,"mtime":1640064872000,"results":"308","hashOfConfig":"187"},{"size":49614,"mtime":1638235062000,"results":"309","hashOfConfig":"187"},{"size":1351,"mtime":1640939648000,"results":"310","hashOfConfig":"187"},{"size":1158,"mtime":1640064872000,"results":"311","hashOfConfig":"187"},{"size":1180,"mtime":1640064872000,"results":"312","hashOfConfig":"187"},{"size":626,"mtime":1640064872000,"results":"313","hashOfConfig":"187"},{"size":1944,"mtime":1640064872000,"results":"314","hashOfConfig":"187"},{"size":1173,"mtime":1640064872000,"results":"315","hashOfConfig":"187"},{"size":2273,"mtime":1640064872000,"results":"316","hashOfConfig":"187"},{"size":222,"mtime":1638861084000,"results":"317","hashOfConfig":"187"},{"size":207,"mtime":1637145168000,"results":"318","hashOfConfig":"187"},{"size":28821,"mtime":1640064872000,"results":"319","hashOfConfig":"187"},{"size":891,"mtime":1637145170000,"results":"320","hashOfConfig":"187"},{"size":5581,"mtime":1640064872000,"results":"321","hashOfConfig":"187"},{"size":626,"mtime":1637145168000,"results":"322","hashOfConfig":"187"},{"size":5490,"mtime":1640064872000,"results":"323","hashOfConfig":"187"},{"size":2715,"mtime":1640064872000,"results":"324","hashOfConfig":"187"},{"size":1464,"mtime":1640064872000,"results":"325","hashOfConfig":"187"},{"size":1196,"mtime":1640064872000,"results":"326","hashOfConfig":"187"},{"size":3656,"mtime":1640064872000,"results":"327","hashOfConfig":"187"},{"size":5229,"mtime":1640064872000,"results":"328","hashOfConfig":"187"},{"size":492,"mtime":1640064872000,"results":"329","hashOfConfig":"187"},{"size":678,"mtime":1640064872000,"results":"330","hashOfConfig":"187"},{"size":1250,"mtime":1640064872000,"results":"331","hashOfConfig":"187"},{"size":3336,"mtime":1640064872000,"results":"332","hashOfConfig":"187"},{"size":2082,"mtime":1640064872000,"results":"333","hashOfConfig":"187"},{"size":773,"mtime":1640064872000,"results":"334","hashOfConfig":"187"},{"size":564,"mtime":1640064872000,"results":"335","hashOfConfig":"187"},{"size":5916,"mtime":1640064872000,"results":"336","hashOfConfig":"187"},{"size":7213,"mtime":1640064872000,"results":"337","hashOfConfig":"187"},{"size":706,"mtime":1640064872000,"results":"338","hashOfConfig":"187"},{"size":631,"mtime":1640064872000,"results":"339","hashOfConfig":"187"},{"size":191,"mtime":1638235062000,"results":"340","hashOfConfig":"187"},{"size":3898,"mtime":1643142435754,"results":"341","hashOfConfig":"187"},{"size":1418,"mtime":1637145170000,"results":"342","hashOfConfig":"187"},{"size":2269,"mtime":1642895743704,"results":"343","hashOfConfig":"187"},{"size":2650,"mtime":1638235062000,"results":"344","hashOfConfig":"187"},{"size":7362,"mtime":1637145170000,"results":"345","hashOfConfig":"187"},{"size":11547,"mtime":1643218158614,"results":"346","hashOfConfig":"187"},{"size":8380,"mtime":1642767943290,"results":"347","hashOfConfig":"187"},{"size":13726,"mtime":1642485224796,"results":"348","hashOfConfig":"187"},{"size":1468,"mtime":1637145168000,"results":"349","hashOfConfig":"187"},{"size":1113,"mtime":1642855948366,"results":"350","hashOfConfig":"187"},{"size":9315,"mtime":1642488103088,"results":"351","hashOfConfig":"187"},{"size":2718,"mtime":1642856240421,"results":"352","hashOfConfig":"187"},{"size":7925,"mtime":1642487490541,"results":"353","hashOfConfig":"187"},{"size":5077,"mtime":1642856458534,"results":"354","hashOfConfig":"187"},{"size":2293,"mtime":1642856643361,"results":"355","hashOfConfig":"187"},{"size":3677,"mtime":1642856817853,"results":"356","hashOfConfig":"187"},{"size":621,"mtime":1643220346315,"results":"357","hashOfConfig":"187"},{"size":212,"mtime":1637145168000,"results":"358","hashOfConfig":"187"},{"size":212,"mtime":1637145168000,"results":"359","hashOfConfig":"187"},{"size":209,"mtime":1637145168000,"results":"360","hashOfConfig":"187"},{"size":212,"mtime":1637145168000,"results":"361","hashOfConfig":"187"},{"size":1015,"mtime":1638856342000,"results":"362","hashOfConfig":"187"},{"size":1080,"mtime":1637145168000,"results":"363","hashOfConfig":"187"},{"size":2666,"mtime":1642487945454,"results":"364","hashOfConfig":"187"},{"size":2997,"mtime":1642488473754,"results":"365","hashOfConfig":"187"},{"size":3313,"mtime":1637145168000,"results":"366","hashOfConfig":"187"},{"size":1258,"mtime":1637145168000,"results":"367","hashOfConfig":"187"},{"size":4245,"mtime":1637145168000,"results":"368","hashOfConfig":"187"},{"size":1037,"mtime":1637145168000,"results":"369","hashOfConfig":"187"},{"size":724,"mtime":1637145168000,"results":"370","hashOfConfig":"187"},{"size":399,"mtime":1637145168000,"results":"371","hashOfConfig":"187"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},"1300yzq",{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"374"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"374"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"374"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"374"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"374"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"374"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"374"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"374"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"374"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"374"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"374"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"374"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"374"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"374"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"374"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"512","messages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"516","usedDeprecatedRules":"374"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"374"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"374"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"554"},{"filePath":"555","messages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"374"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"554"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"554"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582","usedDeprecatedRules":"374"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"374"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"374"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"374"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"374"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"607","usedDeprecatedRules":"374"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"554"},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"374"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"374"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"374"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"630","messages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"554"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"639","messages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"554"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"554"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"554"},{"filePath":"654","messages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"656","messages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"554"},{"filePath":"665","messages":"666","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"683","messages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"685","messages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"691","messages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"695","messages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"697","messages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"701","messages":"702","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"554"},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"708","messages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"554"},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720","usedDeprecatedRules":"374"},{"filePath":"721","messages":"722","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723","usedDeprecatedRules":"374"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"374"},{"filePath":"729","messages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"731","messages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"735","messages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"737","usedDeprecatedRules":"374"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"374"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"743","messages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"745","messages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"374"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750","usedDeprecatedRules":"374"},{"filePath":"751","messages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"753","usedDeprecatedRules":"374"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"374"},{"filePath":"757","messages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"374"},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"764","messages":"765","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"766","messages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"770","messages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"772","messages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"774","messages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"776","messages":"777","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"778","messages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"780","usedDeprecatedRules":"374"},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"789","messages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},{"filePath":"791","messages":"792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"374"},"D:\\React\\1-25\\front\\src\\index.js",[],["793","794"],"D:\\React\\1-25\\front\\src\\serviceWorker.js",[],"D:\\React\\1-25\\front\\src\\App.js",[],"D:\\React\\1-25\\front\\src\\configs\\AppConfig.js",["795"],"import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE, DIR_LTR, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Booking Web App';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n/*\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light',\r\n\tdirection: DIR_LTR\r\n};\r\n*/\r\nexport const THEME_CONFIG = {\r\n\t\"navType\": NAV_TYPE_TOP,\r\n\t\"sideNavTheme\": SIDE_NAV_LIGHT,\r\n\t\"navCollapsed\": false,\r\n\t\"topNavColor\": \"#3e82f7\",\r\n\t\"headerNavColor\": \"\",\r\n\t\"locale\": \"da\",\r\n\t\"currentTheme\": \"light\",\r\n\t\"direction\": DIR_LTR\r\n}\r\n","D:\\React\\1-25\\front\\src\\views\\index.js",[],"D:\\React\\1-25\\front\\src\\redux\\store\\index.js",[],"D:\\React\\1-25\\front\\src\\configs\\EnvironmentConfig.js",[],"D:\\React\\1-25\\front\\src\\redux\\reducers\\index.js",[],"D:\\React\\1-25\\front\\src\\redux\\sagas\\index.js",[],"D:\\React\\1-25\\front\\src\\constants\\ThemeConstant.js",[],"D:\\React\\1-25\\front\\src\\hooks\\useBodyClass.js",[],"D:\\React\\1-25\\front\\src\\redux\\reducers\\User.js",[],"D:\\React\\1-25\\front\\src\\redux\\reducers\\Theme.js",[],"D:\\React\\1-25\\front\\src\\redux\\reducers\\Calendar.js",["796","797","798","799","800","801"],"import moment from \"moment\"\r\nimport {\r\n    CREATE_CALENDAR_DATE, HIDE_CALENDAR_MESSAGE, GET_CALENDAR_DATES, CALENDAR_SUCCESS, CALENDAR_ERROR,\r\n    GET_CALENDAR_DATES_ERROR, GET_CALENDAR_DATES_SUCCESS, CREATE_CALENDAR_HOUR, SELECT_DATE, DELETE_CALENDAR_HOUR\r\n} from \"../constants/Calendar\"\r\nconst initialState = {\r\n    date: {},\r\n    loading: false,\r\n    success: false,\r\n    message: \"\",\r\n    dates: undefined,\r\n    selectedDate: moment(),\r\n    availableDate: undefined\r\n}\r\n\r\nconst calendar = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_CALENDAR_DATES:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                data: action.data\r\n            }\r\n        case GET_CALENDAR_DATES_SUCCESS:\r\n            const availableDate = action.data.find(item => item.date == moment().format('YYYY-MM-DD'))\r\n            return {\r\n                ...state,\r\n                dates: action.data,\r\n                loading: false,\r\n                success: true,\r\n                availableDate\r\n            }\r\n        case GET_CALENDAR_DATES_ERROR:\r\n            return {\r\n                ...state,\r\n                dates: undefined,\r\n                loading: false,\r\n                success: false,\r\n                showMessage: true,\r\n                message: action.message\r\n            }\r\n        case CREATE_CALENDAR_DATE:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_CALENDAR_HOUR:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_CALENDAR_HOUR:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case CALENDAR_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                showMessage: true,\r\n                date: {},\r\n                message: action.message\r\n            }\r\n        case CALENDAR_SUCCESS:\r\n            if (action.data.type == \"hour\") {\r\n                state = updateDateHours(state, action.data);\r\n            }\r\n\r\n            else {\r\n                state = updateCalendarDates(state, action.data);\r\n                state.availableDate = action.data;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n\r\n            }\r\n        case HIDE_CALENDAR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                showMessage: false,\r\n            }\r\n        case SELECT_DATE:\r\n            return {\r\n                ...state,\r\n                selectedDate: action.selectedDate,\r\n                availableDate: action.availableDate\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nfunction updateCalendarDates(state, date) {\r\n    let found = false;\r\n    state.dates = state.dates.map(element => {\r\n\r\n        if (element.id == date.id) {\r\n            found = true;\r\n            return date;\r\n        }\r\n        else {\r\n            found = false\r\n            return element;\r\n        }\r\n\r\n    });\r\n    if (found == false)\r\n        state.dates.push(date);\r\n    return state;\r\n}\r\n\r\nfunction updateDateHours(state, data) {\r\n    state.dates = state.dates.map(item => {\r\n        if (item.id === data.dateId) {\r\n            const { from, to, id, _id } = data;\r\n            if (data.action == \"delete\") {\r\n                item.hours = item.hours.filter(hour => {\r\n                    return hour._id != id\r\n                })\r\n            }\r\n            else {\r\n                item.hours.push({\r\n                    from, to, _id\r\n                })\r\n            }\r\n        }\r\n        return item;\r\n    })\r\n    return state;\r\n\r\n}\r\nexport default calendar;","D:\\React\\1-25\\front\\src\\redux\\reducers\\Auth.js",[],"D:\\React\\1-25\\front\\src\\redux\\reducers\\Booking.js",["802","803","804","805","806"],"import {\r\n    GET_DBA_LISTING_DATA, HIDE_BOOKING_MESSAGE, BOOKINGS_SUCCESS, RESET_BOOKING_DATA,\r\n    GET_DBA_LISTING_DATA_SUCCESS, SHOW_BOOKING_MESSAGE, UPDATE_BOOKING, BOOKING_UPDATE_SUCCESS, ADD_BOOKING_ITEM, REMOVE_TAG_TO_BOOKING_ITEM,\r\n    GET_DBA_DATA_ERROR, SAVE_DELIVERY_DETAILS, SAVE_PICKUP_DETAILS, SAVE_NEW_BOOKING, BOOKING_ERROR, BOOKING_SUCCESS, GET_BOOKINGS, DELETE_BOOKING, BOOKING_DELETE_SUCCESS, SHOW_BOOKING_LIST_MESSAGE, HIDE_BOOKING_LIST_MESSAGE, REMOVE_BOOKING_ITEM, ADD_TAG_TO_BOOKING_ITEM\r\n} from \"../constants/Booking\";\r\nconst initialState = {\r\n    details: undefined,\r\n    images: [],\r\n    message: \"\",\r\n    url: \"\",\r\n    showMessage: false,\r\n    success: false,\r\n    loading: false,\r\n    deliveryDetails: undefined,\r\n    newBookingData: undefined\r\n}\r\nconst listInitialState = {\r\n    results: [],\r\n    loading: false,\r\n    success: false,\r\n    totalResults: 0,\r\n    showMessage: false,\r\n    message: \"\"\r\n\r\n}\r\nexport const bookingList = (state = listInitialState, action) => {\r\n    switch (action.type) {\r\n        case BOOKING_UPDATE_SUCCESS:\r\n            state.results = state.results.map(item => {\r\n                return item.id == action.data.id ? action.data : item;\r\n            })\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case BOOKING_DELETE_SUCCESS:\r\n            state.results = state.results.filter(item => {\r\n                return item.id != action.data\r\n            })\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case UPDATE_BOOKING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case DELETE_BOOKING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case GET_BOOKINGS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case BOOKINGS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                results: action.results,\r\n                limit: action.limit,\r\n                totalResults: action.totalResults,\r\n                loading: false,\r\n            }\r\n        case SHOW_BOOKING_LIST_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.message,\r\n                showMessage: true,\r\n\r\n            }\r\n        case HIDE_BOOKING_LIST_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: '',\r\n                showMessage: false,\r\n                loading: false,\r\n                success: false\r\n\r\n            }\r\n        case RESET_BOOKING_DATA:\r\n            return {\r\n                ...initialState\r\n            }\r\n        case ADD_TAG_TO_BOOKING_ITEM:\r\n            state.results = state.results.map(item => {\r\n                if (item.id === action.data.id) {\r\n                    const tag = action.data.tag;\r\n                    item = { ...item, ...tag };\r\n                }\r\n                return item;\r\n            })\r\n            return {\r\n                ...state,\r\n                totalResults: state.results.length\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst booking = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DBA_LISTING_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_DBA_DATA_ERROR:\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    details: undefined,\r\n                    images: [],\r\n                    url: \"\",\r\n                },\r\n                message: action.message,\r\n                loading: false,\r\n                success: false,\r\n                showMessage: true\r\n            }\r\n        case SHOW_BOOKING_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.message,\r\n                showMessage: true,\r\n\r\n            }\r\n        case HIDE_BOOKING_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: '',\r\n                showMessage: false,\r\n                loading: false,\r\n                success: false\r\n\r\n            }\r\n        case GET_DBA_LISTING_DATA:\r\n            return {\r\n                ...state,\r\n                url: action.url,\r\n                loading: true\r\n            }\r\n        case SAVE_DELIVERY_DETAILS:\r\n            return {\r\n                ...state,\r\n                deliveryDetails: action.details\r\n            }\r\n        case SAVE_PICKUP_DETAILS:\r\n            return {\r\n                ...state,\r\n                details: action.details\r\n            }\r\n        case SAVE_NEW_BOOKING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n\r\n            }\r\n        case BOOKING_ERROR:\r\n            return {\r\n                ...state,\r\n                message: action.message,\r\n                loading: false,\r\n                success: false,\r\n                showMessage: true\r\n            }\r\n        case BOOKING_SUCCESS:\r\n            return {\r\n                ...state,\r\n                message: action.message,\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        default: return {\r\n            ...state\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default booking;","D:\\React\\1-25\\front\\src\\redux\\reducers\\routeCreator.js",["807"],"import {\r\n    ADD_DESTINATION, DESTINATION_SUCCESS, GET_MY_LOCATION, GET_MY_LOCATION_ERROR, GET_MY_LOCATION_SUCCESS,\r\n    HIDE_MESSAGE, REMOVE_DESTINATION, SHOW_MESSAGE, DESTINATION_ERROR, ROUTE_DATA_ERROR, ROUTE_DATA_SUCCESS, DIRECTION_ERROR, DIRECTION_SUCCESS\r\n} from \"../constants/routeCreator\";\r\nconst initialState = {\r\n    success: false,\r\n    loading: false,\r\n    message: \"\",\r\n    myLocation: {},\r\n    isShowMessage: false,\r\n    destinations: [],\r\n    routeData: undefined,\r\n    directions: {}\r\n}\r\n\r\nexport const RouteCreator = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_MY_LOCATION:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_MY_LOCATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                myLocation: action.data\r\n            }\r\n        case GET_MY_LOCATION_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                message: action.data\r\n            }\r\n        case SHOW_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.data,\r\n                loading: false,\r\n                isShowMessage: true,\r\n            }\r\n        case HIDE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                isShowMessage: false,\r\n            }\r\n        case ADD_DESTINATION:\r\n\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n\r\n            }\r\n        case REMOVE_DESTINATION:\r\n            state.destinations = state.destinations.filter(item => {\r\n                return item.id != action.data\r\n            })\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case DESTINATION_SUCCESS:\r\n            // state.destinations.push(action.data);\r\n            state.destinations = action.data;\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case DESTINATION_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false\r\n            }\r\n        case ROUTE_DATA_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false\r\n            }\r\n        case ROUTE_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                routeData: action.data,\r\n                destinations: action.data.destination,\r\n                myLocation: action.data.myLocation ? action.data.myLocation : {}\r\n            }\r\n        case DIRECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                directions: {}\r\n            }\r\n        case DIRECTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                directions: action.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default RouteCreator;","D:\\React\\1-25\\front\\src\\redux\\reducers\\MyCalendar.js",["808","809","810","811"],"import {\r\n    MY_CALENDAR_ADD_BOOKING, GET_MY_CALENDAR_BOOKINGS_ERROR,\r\n    MY_CALENDAR_SUCCESS,\r\n    MY_CALENDAR_ERROR, GET_MY_CALENDAR_BOOKINGS_SUCCESS, GET_MY_CALENDAR_BOOKINGS, SHOW_MESSAGE\r\n} from \"../constants/MyCalendar\";\r\nimport { getBookings } from \"redux/actions\";\r\nconst initialState = {\r\n    success: false,\r\n    loading: false,\r\n    message: \"\",\r\n    showMessage: false,\r\n    myCalendarBookings: []\r\n}\r\n\r\nexport const myCalendar = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_MY_CALENDAR_BOOKINGS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                myCalendarBookings: action.data.results\r\n            }\r\n        case MY_CALENDAR_SUCCESS:\r\n            if (action.action == \"delete\") {\r\n                state.myCalendarBookings = state.myCalendarBookings.filter(item => item.id != action.data.id);\r\n            }\r\n            else\r\n                state.myCalendarBookings.push(action.data);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case MY_CALENDAR_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                message: action.message,\r\n                showMessage: true\r\n            }\r\n        case GET_MY_CALENDAR_BOOKINGS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case MY_CALENDAR_ADD_BOOKING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case SHOW_MESSAGE:\r\n            return {\r\n                ...state,\r\n                showMessage: action.showMessage,\r\n                success: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default myCalendar;","D:\\React\\1-25\\front\\src\\redux\\sagas\\User.js",["812","813"],"import { all, takeEvery, put, fork, call, takeLatest } from 'redux-saga/effects';\r\nimport { GET_USER } from '../constants/User';\r\nimport { getUser, userSuccess } from '../actions/User';\r\nimport UserService from 'services/UserService';\r\nexport function* fetchUser() {\r\n    yield takeLatest(GET_USER, function* (payload) {\r\n        try {\r\n            const user = yield call(UserService.me);\r\n            yield put(userSuccess(user))\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    })\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(fetchUser),\r\n    ]);\r\n}","D:\\React\\1-25\\front\\src\\redux\\sagas\\Calendar.js",["814","815","816"],"import { all, takeEvery, put, fork, call, takeLatest } from 'redux-saga/effects';\r\nimport { calendarError, calendarSuccess, ON, onGetDatesError, onGetDatesSuccess } from '../actions/Calendar';\r\nimport CalendarService from '../../services/CalendarService';\r\nimport { CREATE_CALENDAR_DATE, CREATE_CALENDAR_HOUR, DELETE_CALENDAR_HOUR, GET_CALENDAR_DATES } from '../constants/Calendar';\r\nimport { rest } from 'lodash';\r\nexport function* getCalendarDates() {\r\n    yield takeEvery(GET_CALENDAR_DATES, function* () {\r\n        try {\r\n            const data = yield call(CalendarService.getDates);\r\n            yield put(onGetDatesSuccess(data));\r\n        } catch (err) {\r\n            yield put(onGetDatesError(err.message));\r\n        }\r\n    });\r\n}\r\n\r\nexport function* createCalendarDate() {\r\n    yield takeEvery(CREATE_CALENDAR_DATE, function* ({ data: { date, available } }) {\r\n        try {\r\n            const res = yield call(CalendarService.createDate, { date, available });\r\n            yield put(calendarSuccess(res));\r\n        } catch (err) {\r\n            yield put(calendarError(err.message));\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport function* createCalendarHour() {\r\n    yield takeEvery(CREATE_CALENDAR_HOUR, function* (data) {\r\n        try {\r\n            const res = yield call(CalendarService.createHour, data);\r\n            res.type = \"hour\";\r\n            res.dateId = data.dateId;\r\n            yield put(calendarSuccess(res));\r\n        } catch (err) {\r\n            yield put(calendarError(err.message));\r\n        }\r\n    });\r\n\r\n}\r\nexport function* deleteCalendarHour() {\r\n    yield takeEvery(DELETE_CALENDAR_HOUR, function* (data) {\r\n        try {\r\n            const res = yield call(CalendarService.deleteHour, data);\r\n            res.type = \"hour\";\r\n            res.action = \"delete\";\r\n            yield put(calendarSuccess(res));\r\n        } catch (err) {\r\n            yield put(calendarError(err.message));\r\n        }\r\n    });\r\n}\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(createCalendarDate),\r\n        fork(getCalendarDates),\r\n        fork(createCalendarHour),\r\n        fork(deleteCalendarHour),\r\n    ]);\r\n}","D:\\React\\1-25\\front\\src\\redux\\sagas\\Booking.js",["817","818","819","820"],"import { all, takeEvery, put, fork, call, takeLatest } from 'redux-saga/effects';\r\nimport { DELETE_BOOKING, GET_BOOKINGS, GET_DBA_LISTING_DATA, GET_DBA_LISTING_DATA_SUCCESS, SAVE_NEW_BOOKING, UPDATE_BOOKING } from \"../constants/Booking\";\r\nimport { bookingsSuccess, getDBAListingDataSuccess, bookingUpdateSuccess, showBookingListMessage, showBookingMessage, getDBAListingDataError, bookingError, bookingSuccess, bookingsDeleteSuccess } from '../actions/Booking';\r\n\r\nimport BookingService from 'services/BookingService';\r\nexport function* getDBAListingData() {\r\n    yield takeEvery(GET_DBA_LISTING_DATA, function* ({ url }) {\r\n        try {\r\n            const data = yield call(BookingService.getDBAListingData, url);\r\n            yield put(getDBAListingDataSuccess(data));\r\n            yield put(showBookingMessage([\"URL succesfully scrapped.\"]));\r\n\r\n        } catch (err) {\r\n            yield put(getDBAListingDataError(err.message));\r\n        }\r\n    });\r\n}\r\n\r\nexport function* saveNewBooking() {\r\n    yield takeEvery(SAVE_NEW_BOOKING, function* (data) {\r\n        try {\r\n\r\n            const { details: pickup, deliveryDetails: shipping, url, images } = data;\r\n            const res = yield call(BookingService.add, {\r\n                shipping,\r\n                pickup, url,\r\n                images\r\n            });\r\n            yield put(bookingSuccess(res));\r\n            yield put(showBookingMessage([\"Booking saved.\"]));\r\n\r\n        } catch (err) {\r\n            yield put(bookingError(err.message));\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\nexport function* getBookings1() {\r\n    yield takeEvery(GET_BOOKINGS, function* (data) {\r\n        try {\r\n            const res = yield call(BookingService.getBookings, data.data);\r\n            yield put(bookingsSuccess(res));\r\n        } catch (err) {\r\n            console.log(err)\r\n            //yield put(bookingError(err.message));\r\n        }\r\n    });\r\n}\r\nexport function* updateBooking() {\r\n    yield takeEvery(UPDATE_BOOKING, function* (data) {\r\n        try {\r\n            const res = yield call(BookingService.updateBooking, data.data);\r\n            yield put(bookingUpdateSuccess(res));\r\n\r\n        } catch (err) {\r\n            yield put(bookingError(err.message));\r\n        }\r\n    });\r\n}\r\nexport function* deleteBooking() {\r\n    yield takeEvery(DELETE_BOOKING, function* (data) {\r\n        try {\r\n\r\n            const res = yield call(BookingService.deleteBooking, data.data.id);\r\n            yield put(bookingsDeleteSuccess(data.data.id));\r\n            yield put(showBookingListMessage(\"Booking deleted.\"));\r\n        } catch (err) {\r\n            if (err.message == 'Unauthorized')\r\n                yield put(showBookingListMessage('You cannot delete this booking anymore.'));\r\n            else\r\n                yield put(showBookingListMessage(err.message));\r\n        }\r\n    });\r\n}\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(getDBAListingData),\r\n        fork(saveNewBooking),\r\n        fork(updateBooking),\r\n        fork(getBookings1),\r\n        fork(deleteBooking)\r\n    ]);\r\n}\r\n","D:\\React\\1-25\\front\\src\\redux\\sagas\\Auth.js",["821"],"import { all, takeEvery, put, fork, call, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK,\r\n\tVERIFY_EMAIL\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\nimport JwtAuthService from 'services/JwtAuthService';\r\nimport StorageService from 'services/StorageService';\r\nexport function* verifyEmail() {\r\n\tyield takeEvery(VERIFY_EMAIL, function* ({ payload }) {\r\n\r\n\t\ttry {\r\n\t\t\tconst user = yield call(JwtAuthService.verifyEmail, payload);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\r\n\t\t\t\tStorageService.save(AUTH_TOKEN, user.tokens);\r\n\t\t\t\tyield put(authenticated(user.user));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err.message));\r\n\t\t}\r\n\t});\r\n}\r\nexport function* signInWithFBEmail() {\r\n\tyield takeEvery(SIGNIN, function* ({ payload }) {\r\n\r\n\t\ttry {\r\n\t\t\tconst user = yield call(JwtAuthService.login, payload);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\r\n\t\t\t\tStorageService.save(AUTH_TOKEN, user.tokens);\r\n\t\t\t\tyield put(authenticated(user.user));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err.message));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n\tyield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n\tyield takeEvery(SIGNUP, function* ({ payload }) {\r\n\t\ttry {\r\n\t\t\tdelete payload.confirm;\r\n\t\t\tconst user = yield call(JwtAuthService.signUp, payload);\r\n\t\t\tyield put(showAuthMessage(\"Registration Succesful\"));\r\n\t\t\tyield put(signUpSuccess(user.tokens))\r\n\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err.message));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n\tyield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n\tyield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n\t]);\r\n}\r\n","D:\\React\\1-25\\front\\src\\redux\\sagas\\MyCalendar.js",[],"D:\\React\\1-25\\front\\src\\redux\\sagas\\RouteCreator.js",["822","823","824","825","826","827","828","829"],"import { all, takeEvery, put, fork, call, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    ADD_DESTINATION, DESTINATION_SUCCESS, GET_MY_LOCATION, GET_MY_LOCATION_ERROR, GET_MY_LOCATION_SUCCESS,\r\n    HIDE_MESSAGE, REMOVE_DESTINATION, SHOW_MESSAGE, DESTINATION_ERROR, GET_ROUTE_DATA, UPDATE_ROUTE\r\n} from \"../constants/routeCreator\";\r\nimport { destinationError, destinationSuccess, showMessage, routeDataSuccess, routeDataError } from \"../actions/RouteCreator\";\r\nimport RouteCreatorService from \"services/RouteCreator\";\r\nexport function* addDestination() {\r\n    yield takeEvery(ADD_DESTINATION, function* ({ data }) {\r\n        try {\r\n\r\n            const res = yield call(RouteCreatorService.addDestination, data);\r\n            yield put(destinationSuccess(res));\r\n            yield put(showMessage(\"Destination added\"));\r\n\r\n        } catch (err) {\r\n            yield put(destinationError(err.message));\r\n            yield put(showMessage(err.message));\r\n        }\r\n    });\r\n}\r\nexport function* updateRoute() {\r\n    yield takeEvery(UPDATE_ROUTE, function* ({ id, data }) {\r\n        try {\r\n\r\n            const res = yield call(RouteCreatorService.updateRoute, id, data);\r\n            yield put(routeDataSuccess(res));\r\n            yield put(showMessage(\"Updated\"));\r\n\r\n        } catch (err) {\r\n            yield put(routeDataError(err.message));\r\n            yield put(showMessage(err.message));\r\n        }\r\n    });\r\n}\r\nexport function* getData() {\r\n    yield takeEvery(GET_ROUTE_DATA, function* ({ data }) {\r\n        try {\r\n\r\n            const res = yield call(RouteCreatorService.data, data);\r\n            yield put(routeDataSuccess(res));\r\n            //   yield put(showMessage(\"Destination added\"));\r\n\r\n        } catch (err) {\r\n            yield put(routeDataError(err.message));\r\n            yield put(showMessage(err.message));\r\n        }\r\n    });\r\n}\r\nexport function* removeDestination() {\r\n    yield takeEvery(REMOVE_DESTINATION, function* ({ data }) {\r\n        try {\r\n\r\n            const res = yield call(RouteCreatorService.removeDestination, data);\r\n            yield put(destinationSuccess(res));\r\n            yield put(showMessage(\"Destination removed\"));\r\n\r\n        } catch (err) {\r\n            yield put(destinationError(err.message));\r\n            yield put(showMessage(err.message));\r\n        }\r\n    });\r\n}\r\nexport default function* rootSaga() {\r\n    yield all([\r\n\r\n        fork(addDestination),\r\n        fork(removeDestination),\r\n        fork(updateRoute),\r\n        fork(getData)\r\n    ]);\r\n}","D:\\React\\1-25\\front\\src\\redux\\cart\\reducers.js",[],"D:\\React\\1-25\\front\\src\\lang\\index.js",[],"D:\\React\\1-25\\front\\src\\layouts\\app-layout\\index.js",["830","831"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig, { navigationConfigClient } from \"configs/NavigationConfig\";\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location, direction }) => {\r\n  const userData = useSelector(state => state.user.userData);\r\n  if (userData && userData.role == \"admin\") {\r\n    var navigation = navigationConfig;\r\n  }\r\n  else {\r\n    var navigation = navigationConfigClient;\r\n  }\r\n  const currentRouteInfo = utils.getRouteInfo(navigation, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = screens.length === 0 ? false : !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if (isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if (direction === DIR_LTR) {\r\n      return { paddingLeft: getLayoutGutter() }\r\n    }\r\n    if (direction === DIR_RTL) {\r\n      return { paddingRight: getLayoutGutter() }\r\n    }\r\n    return { paddingLeft: getLayoutGutter() }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile} />\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo} /> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo} /> : null}\r\n        <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } = theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","D:\\React\\1-25\\front\\src\\layouts\\auth-layout\\index.js",[],"D:\\React\\1-25\\front\\src\\redux\\constants\\Theme.js",[],"D:\\React\\1-25\\front\\src\\redux\\constants\\User.js",[],"D:\\React\\1-25\\front\\src\\redux\\constants\\Calendar.js",[],"D:\\React\\1-25\\front\\src\\redux\\constants\\Booking.js",[],"D:\\React\\1-25\\front\\src\\redux\\constants\\MyCalendar.js",[],"D:\\React\\1-25\\front\\src\\redux\\constants\\routeCreator.js",[],"D:\\React\\1-25\\front\\src\\redux\\constants\\Auth.js",[],"D:\\React\\1-25\\front\\src\\redux\\actions\\User.js",[],"D:\\React\\1-25\\front\\src\\services\\MyCalendarService.js",[],"D:\\React\\1-25\\front\\src\\redux\\cart\\actions.js",[],"D:\\React\\1-25\\front\\src\\lang\\entries\\da_DK.js",[],"D:\\React\\1-25\\front\\src\\services\\UserService.js",[],"D:\\React\\1-25\\front\\src\\services\\StorageService.js",[],"D:\\React\\1-25\\front\\src\\services\\RouteCreator.js",[],"D:\\React\\1-25\\front\\src\\services\\BookingService.js",[],"D:\\React\\1-25\\front\\src\\redux\\actions\\index.js",[],"D:\\React\\1-25\\front\\src\\configs\\NavigationConfig.js",["832","833","834"],"import {\r\n  DashboardOutlined,\r\n  EnvironmentOutlined, AppstoreOutlined, UserOutlined, BranchesOutlined, ScheduleOutlined, SettingOutlined, UnorderedListOutlined, CalendarOutlined\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\n\r\n\r\nconst adminMenu = [{\r\n  key: 'dashboards',\r\n  path: `${APP_PREFIX_PATH}/dashboards`,\r\n  title: 'sidenav.dashboard',\r\n  icon: AppstoreOutlined,\r\n  breadcrumb: true,\r\n  submenu: []\r\n},\r\n{\r\n  key: 'bookings',\r\n  path: `${APP_PREFIX_PATH}/bookings`,\r\n  title: 'sidenav.bookings',\r\n  icon: ScheduleOutlined,\r\n  breadcrumb: false,\r\n  submenu: [\r\n    {\r\n      key: 'bookings-list',\r\n      path: `${APP_PREFIX_PATH}/bookings-list`,\r\n      title: 'sidenav.bookings.list',\r\n      icon: UnorderedListOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'bookings-map',\r\n      path: `${APP_PREFIX_PATH}/bookings-map`,\r\n      title: 'sidenav.bookings.map',\r\n      icon: EnvironmentOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n  ]\r\n},\r\n{\r\n  key: 'myroute',\r\n  path: `${APP_PREFIX_PATH}/my-routes`,\r\n  title: 'sidenav.routeMaker',\r\n  icon: BranchesOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n},\r\n// {\r\n//   key: 'calendar',\r\n//   path: `${APP_PREFIX_PATH}/calendar`,\r\n//   title: 'sidenav.calendar',\r\n//   icon: CalendarOutlined,\r\n//   breadcrumb: true,\r\n//   submenu: []\r\n// },\r\n{\r\n  key: 'accounts',\r\n  path: `${APP_PREFIX_PATH}/accounts`,\r\n  title: 'sidenav.accounts',\r\n  icon: UserOutlined,\r\n  breadcrumb: true,\r\n  submenu: []\r\n},\r\n{\r\n  key: 'settings',\r\n  path: `${APP_PREFIX_PATH}/settings`,\r\n  title: 'sidenav.settings',\r\n  icon: SettingOutlined,\r\n  breadcrumb: true,\r\n  submenu: []\r\n}\r\n]\r\nconst clientMenu = [{\r\n  key: 'dashboards',\r\n  path: `${APP_PREFIX_PATH}/dashboards`,\r\n  title: 'sidenav.dashboard',\r\n  icon: AppstoreOutlined,\r\n  breadcrumb: true,\r\n  submenu: []\r\n},\r\n{\r\n  key: 'bookings',\r\n  path: `${APP_PREFIX_PATH}/bookings-list`,\r\n  title: 'sidenav.bookings',\r\n  icon: ScheduleOutlined,\r\n  breadcrumb: false,\r\n  submenu: [\r\n  ]\r\n},\r\n\r\n]\r\n\r\nconst navigationConfig = [\r\n  ...adminMenu\r\n]\r\n\r\nexport const navigationConfigClient = [...clientMenu];\r\nexport default navigationConfig;\r\n","D:\\React\\1-25\\front\\src\\auth\\FetchInterceptor.js",[],"D:\\React\\1-25\\front\\src\\components\\layout-components\\HeaderNav.js",["835","836","837","838"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavNotification from './NavNotification';\r\nimport NavProfile from './NavProfile';\r\nimport NavLanguage from './NavLanguage';\r\n\r\n\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme, direction } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchActive = () => {\r\n    setSearchActive(true)\r\n  }\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if (!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = () => {\r\n    if (!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff')\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if (isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if (navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{ backgroundColor: headerNavColor }}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode} />\r\n        <div className=\"nav\" style={{ width: `calc(100% - ${getNavWidth()})` }}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">\r\n              {\r\n                isNavTop && !isMobile ?\r\n                  null\r\n                  :\r\n                  <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => { onToggle() }}>\r\n                    {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                  </li>\r\n              }\r\n\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            {//<NavNotification />\r\n              <NavLanguage />\r\n            }\r\n            <NavProfile />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction } = theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction }\r\n};\r\n\r\nexport default connect(mapStateToProps, { toggleCollapsedNav, onMobileNavToggle })(HeaderNav);","D:\\React\\1-25\\front\\src\\components\\layout-components\\PageHeader.js",[],"D:\\React\\1-25\\front\\src\\components\\layout-components\\Footer.js",[],"D:\\React\\1-25\\front\\src\\components\\layout-components\\SideNav.js",[],"D:\\React\\1-25\\front\\src\\components\\layout-components\\TopNav.js",[],"D:\\React\\1-25\\front\\src\\components\\layout-components\\MobileNav.js",[],"D:\\React\\1-25\\front\\src\\views\\auth-views\\index.js",[],"D:\\React\\1-25\\front\\src\\redux\\actions\\RouteCreator.js",[],"D:\\React\\1-25\\front\\src\\redux\\actions\\MyCalendar.js",["839"],"import {\r\n    MY_CALENDAR_ADD_BOOKING, GET_MY_CALENDAR_BOOKINGS_ERROR,\r\n    MY_CALENDAR_SUCCESS,\r\n    MY_CALENDAR_ERROR, GET_MY_CALENDAR_BOOKINGS_SUCCESS, GET_MY_CALENDAR_BOOKINGS, SHOW_MESSAGE, MY_CALENDAR_DELETE_BOOKING\r\n} from \"../constants/MyCalendar\";\r\n\r\nexport const getMyCalendarBookings = (data) => {\r\n    return {\r\n        type: GET_MY_CALENDAR_BOOKINGS,\r\n        data\r\n    }\r\n};\r\nexport const getMyCalendarBookingsSuccess = (data) => {\r\n    return {\r\n        type: GET_MY_CALENDAR_BOOKINGS_SUCCESS,\r\n        data\r\n    }\r\n};\r\nexport const myCalendarAddBooking = (data) => {\r\n    return {\r\n        type: MY_CALENDAR_ADD_BOOKING,\r\n        data\r\n\r\n    }\r\n};\r\nexport const myCalendarDeleteBooking = (data) => {\r\n    return {\r\n        type: MY_CALENDAR_DELETE_BOOKING,\r\n        data\r\n\r\n    }\r\n};\r\nexport const myCalendarSuccess = (data, action) => {\r\n    return {\r\n        type: MY_CALENDAR_SUCCESS,\r\n        data,\r\n        action\r\n\r\n    }\r\n};\r\nexport const myCalendarError = (message) => {\r\n    return {\r\n        type: MY_CALENDAR_ERROR,\r\n        message\r\n\r\n    }\r\n};\r\nexport const myCalendarShowMessage = (showMessage) => {\r\n    return {\r\n        type: SHOW_MESSAGE,\r\n        showMessage\r\n\r\n    }\r\n};","D:\\React\\1-25\\front\\src\\redux\\actions\\Booking.js",[],"D:\\React\\1-25\\front\\src\\components\\shared-components\\Loading\\index.js",[],"D:\\React\\1-25\\front\\src\\redux\\actions\\Theme.js",[],"D:\\React\\1-25\\front\\src\\utils\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\index.js",[],"D:\\React\\1-25\\front\\src\\components\\layout-components\\MenuContent.js",["840","841","842","843"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig, { navigationConfigClient } from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport { useSelector } from \"react-redux\";\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n  const { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  const closeMobileNav = () => {\r\n    if (isMobile) {\r\n      onMobileNavToggle(false)\r\n    }\r\n  }\r\n  const userData = useSelector(state => state.user.userData);\r\n\r\n  if (userData && userData.role == \"admin\") {\r\n    var navigation = navigationConfig;\r\n  }\r\n  else {\r\n    var navigation = navigationConfigClient;\r\n  }\r\n\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigation.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  const userData = useSelector(state => state.user.userData);\r\n  if (userData && userData.role == \"admin\") {\r\n    var navigation = navigationConfig;\r\n  }\r\n  else {\r\n    var navigation = navigationConfigClient;\r\n  }\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigation.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","D:\\React\\1-25\\front\\src\\components\\layout-components\\Logo.js",[],"D:\\React\\1-25\\front\\src\\components\\layout-components\\NavLanguage.js",[],"D:\\React\\1-25\\front\\src\\components\\layout-components\\NavProfile.js",["844","845","846","847"],"import React, { } from \"react\";\r\nimport { Menu, Dropdown, Avatar } from \"antd\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n  EditOutlined,\r\n  SettingOutlined,\r\n  ShopOutlined,\r\n  QuestionCircleOutlined,\r\n  LogoutOutlined\r\n} from '@ant-design/icons';\r\nimport Icon from 'components/util-components/Icon';\r\nimport { signOut } from 'redux/actions/Auth';\r\nimport { useSelector } from \"react-redux\";\r\nimport user from \"redux/reducers/User\";\r\n\r\n\r\nexport const NavProfile = ({ intl, signOut }) => {\r\n  const userData = useSelector((state) => state.user.userData);\r\n  const menuItem = [\r\n\r\n\r\n    {\r\n      title: intl.formatMessage({ id: 'text.accountSettings' }),\r\n      icon: SettingOutlined,\r\n      path: \"/\"\r\n    },\r\n\r\n  ]\r\n  if (userData) {\r\n    var profileImg = userData.avatar || \"/img/avatars/avatar.png\";\r\n    var profileMenu = (\r\n      <div className=\"nav-profile nav-dropdown\">\r\n        <div className=\"nav-profile-header\">\r\n          <div className=\"d-flex\">\r\n            <Avatar size={45} src={profileImg} />\r\n            <div className=\"pl-3\">\r\n              <h4 className=\"mb-0\">{userData.name}</h4>\r\n              <span className=\"text-muted\">{userData.email}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"nav-profile-body\">\r\n          <Menu>\r\n            {menuItem.map((el, i) => {\r\n              return (\r\n                <Menu.Item key={i}>\r\n                  <Link to={\"/app/accounts/\" + userData.id}>\r\n                    <Icon className=\"mr-3\" type={el.icon} />\r\n                    <span className=\"font-weight-normal\">{el.title}</span>\r\n                  </Link>\r\n                </Menu.Item>\r\n              );\r\n            })}\r\n            <Menu.Item key={menuItem.length + 1} onClick={e => signOut()}>\r\n              <span>\r\n                <LogoutOutlined className=\"mr-3\" />\r\n                <span className=\"font-weight-normal\">{intl.formatMessage({ id: 'text.signOut' })}</span>\r\n              </span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <Dropdown placement=\"bottomRight\" overlay={profileMenu} trigger={[\"click\"]}>\r\n      <Menu className=\"d-flex align-item-center\" mode=\"horizontal\">\r\n        <Menu.Item key=\"profile\">\r\n          <Avatar src={profileImg} />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nexport default connect(null, { signOut })(injectIntl(NavProfile))\r\n","D:\\React\\1-25\\front\\src\\components\\layout-components\\NavNotification.js",[],"D:\\React\\1-25\\front\\src\\history.js",[],"D:\\React\\1-25\\front\\src\\components\\layout-components\\AppBreadcrumb.js",[],"D:\\React\\1-25\\front\\src\\components\\util-components\\IntlMessage\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\auth-views\\authentication\\reset-password\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\auth-views\\authentication\\verify-email\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\auth-views\\authentication\\forgot-password\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\auth-views\\errors\\error-page-2\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\auth-views\\errors\\error-page-1\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\auth-views\\authentication\\register-1\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\auth-views\\authentication\\login\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\myRoute\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\settings\\index.js",["848"],"import { useState, useEffect } from \"react\";\r\nimport {\r\n    Tabs, Calendar, Row, Col, Switch, Tooltip,\r\n    Empty,\r\n} from \"antd\";\r\nimport { connect } from 'react-redux';\r\nimport IntlMessage from \"components/util-components/IntlMessage\";\r\nimport { getCalendarDates, createCalendarDate, createCalendarHour, onSelectDate } from \"redux/actions/Calendar\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CREATE_CALENDAR_DATE } from \"../../../redux/constants/Calendar\";\r\nimport { COLOR_GREEN, COLOR_RED, } from 'constants/ThemeConstant';\r\nimport TimeScheduler from './timeScheduler';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nconst MainSettings = (props) => {\r\n    const { dates, getCalendarDates, onSelectDate, loading } = props;\r\n\r\n    const [state] = useState({\r\n        dates: dates\r\n    });\r\n\r\n    const dateCellRender = (value) => {\r\n        const date = dates.find(item => item.date === value.format('YYYY-MM-DD'));\r\n\r\n        return <CalendarCell date={value} available={date ? date.available : false} loading={loading} />\r\n    }\r\n    const onDateSelect = (selectedDate, e) => {\r\n        const availableDate = dates.find(item => item.date === selectedDate.format('YYYY-MM-DD'))\r\n        onSelectDate({ selectedDate, availableDate })\r\n    }\r\n    const onDateChange = (value, e) => {\r\n        console.log(value)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCalendarDates();\r\n    }, [state.dates]);\r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"1\" >\r\n                <TabPane tab={<IntlMessage id=\"button.calendar\" />} key=\"1\">\r\n\r\n                    <Row>\r\n                        <Col xs={24} md={14} >\r\n                            <div>\r\n                                {dates ?\r\n\r\n                                    <Calendar onChange={onDateChange} fullscreen={true} dateFullCellRender={dateCellRender} onSelect={onDateSelect} />\r\n                                    : <Empty />\r\n                                }\r\n\r\n                            </div>\r\n                        </Col><Col xs={24} md={10}>\r\n\r\n                            {\r\n                                dates ?\r\n                                    <div className=\"m-1 m-md-4 mt-2 mt-md-4 mt-lg-1 pt-2 \">\r\n                                        <TimeScheduler\r\n                                        />\r\n                                    </div>\r\n                                    : <Empty />\r\n                            /*dates ?\r\n                                <div className=\"m-1 m-md-4 mt-2 mt-md-4 mt-lg-1 pt-2 \">\r\n                                    <TimeScheduler selectedDate={state.selectedDate} date={\r\n                                        dates.find(item => item.date===state.selectedDate.format('YYYY-MM-DD'))\r\n                                    } />\r\n                                </div>\r\n                                : <Empty />\r\n                                */}</Col>\r\n                    </Row>\r\n\r\n                </TabPane>\r\n                <TabPane tab={<IntlMessage id=\"button.otherSettings\" />} key=\"2\">\r\n                    {<IntlMessage id=\"button.otherSettings\" />}\r\n                </TabPane>\r\n            </Tabs>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n/**\r\n * Calendar custom cell render Component\r\n */\r\nconst CalendarCell = ({ date, available = false, loading }) => {\r\n    const dispatch = useDispatch();\r\n    const [myLoading, setLoading] = useState(false);\r\n    const onChange = (value) => {\r\n        setLoading(true);\r\n        dispatch({ type: CREATE_CALENDAR_DATE, data: { available: value, date: date.format('YYYY-MM-DD') } });\r\n    }\r\n\r\n    return <div className=\"w-100 p-1\" >\r\n        <Tooltip placement=\"top\" title={available ? <IntlMessage id=\"button.available\" /> : <IntlMessage id=\"button.unAvailable\" />} arrowPointAtCenter={true}>\r\n            <div className=\"w-100 p-1\" style={{\r\n                backgroundColor: available ? COLOR_GREEN : COLOR_RED, borderRadius: \"5px\", border: \"1px solid #d1d4e3\",\r\n\r\n\r\n            }}> <div style={{ textAlign: \"center\", }}>\r\n                    {date.date()}\r\n                </div>\r\n                <div className=\"\" style={{ display: \"flex\", justifyContent: \"end\", alignItems: \"center\" }}>\r\n                    <Switch size=\"small\" checked={available} onChange={onChange} loading={loading ? myLoading : loading} />\r\n\r\n                </div></div> </Tooltip>\r\n\r\n\r\n    </div >\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = ({ calendar }, ownProps) => {\r\n    const { dates, date, selectedDate, loading } = calendar;\r\n    return {\r\n        dates, date, selectedDate, loading\r\n    }\r\n}\r\nconst mapActionsToProps = {\r\n    createCalendarDate, getCalendarDates, createCalendarHour, onSelectDate\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(MainSettings)","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\index.js",["849","850","851"],"D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\map\\index.js",["852","853","854","855"],"import { useState, useEffect } from \"react\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Link } from 'react-router-dom';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { ClockCircleOutlined, EnvironmentFilled, PlusOutlined } from '@ant-design/icons';\r\nimport { Tag, Tooltip, Input, Empty, Col, Row, Button, Select, Popover } from 'antd';\r\nimport { statusOptions } from \"../../../../constants/Options\";\r\nimport { connect } from \"react-redux\";\r\nimport { getBookings } from \"redux/actions/Booking\";\r\nimport { STATUS_COLORS } from \"constants/ThemeConstant\";\r\nimport mapStyle from './mapstyle';\r\nimport { injectIntl } from \"react-intl\";\r\nconst { Search } = Input;\r\n\r\nconst CustomMarker = ({ data }) => {\r\n    const ItemHeader = ({ name, address, ownerName }) => (\r\n        <div>\r\n\r\n            <span className=\"text-muted\">{ownerName}</span><br />\r\n            <span className=\"text-muted\">{address}</span>\r\n        </div>\r\n    )\r\n    const ItemInfo = ({ pickupDate, status, address, name, statusColor, selectedHour }) => (\r\n        <>\r\n\r\n            <Flex alignItems=\"center\" justifyContent=\"between\">\r\n\r\n                <div className=\"mr-3 mt-3\">\r\n                    <Tooltip title=\"Pickup Date\">\r\n                        <ClockCircleOutlined className=\"text-muted font-size-md text-primary\" />\r\n                        <span className=\"ml-1 text-muted\">{pickupDate}  </span>\r\n                        <span className=\"ml-1 text-muted\">{selectedHour.from} - {selectedHour.to}</span>\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <Tag className={STATUS_COLORS[\"COLOR_\" + status]} >\r\n\r\n                        <span className={\"ml-2 font-weight-semibold \"}>{status}</span>\r\n                    </Tag>\r\n                </div>\r\n            </Flex>\r\n        </>\r\n    )\r\n    const createInfoWindowContent = (data) => {\r\n        return <>\r\n            <Flex alignItems=\"center\" justifyContent=\"start\">\r\n                <img style={{ width: \"80px\", maxHeight: \"80px\", marginRight: \"10px\", borderRadius: \"10px\" }} src={data.images.length > 0 ? data.images[0] : \"\"} />\r\n                <div style={{ flexGrow: 1, padding: \"5px\" }}><Flex alignItems=\"center\" justifyContent=\"between\">\r\n\r\n                    <ItemHeader name={data.pickup.title} ownerName={data.pickup.name} address={data.pickup.location} />\r\n\r\n                </Flex>\r\n                </div>\r\n            </Flex>\r\n            <div className=\"mt-2\">\r\n                <ItemInfo\r\n                    pickupDate={data.pickup.pickupDate}\r\n                    selectedHour={data.pickup.selectedHour}\r\n                    status={data.status || \"Recieved\"}\r\n                    statusColor={data.statusColor || \"bg-warning\"}\r\n\r\n                />\r\n            </div>\r\n        </>\r\n\r\n    }\r\n    return <Popover content={createInfoWindowContent(data)} title={data.title}>\r\n        <div style={{ position: \"relative\", marginLeft: \"-20px\", marginTop: \"-40px\" }}>\r\n            <Button block type=\"text\"  ><div className={STATUS_COLORS[\"COLOR_\" + data.status]} style={{ display: \"flex \", alignItems: \"center\", justifyContent: \"space-around\", fontSize: \"28px\" }} ><EnvironmentFilled /></div></Button>\r\n        </div>\r\n    </Popover>\r\n\r\n}\r\nconst updateMap = ({ map, maps }, results) => {\r\n    if (map) {\r\n        let bounds = new maps.LatLngBounds();\r\n        results.forEach(item => {\r\n\r\n            map.setOptions({\r\n                styles: mapStyle\r\n            })\r\n            bounds.extend({ lat: item.latitude, lng: item.longitude });\r\n        });\r\n        map.fitBounds(bounds);\r\n    }\r\n}\r\nconst BookingMap = ({ intl, loading, results, success, getBookings }) => {\r\n    const [gMap, setGmap] = useState({});\r\n    const [query, setQuery] = useState({});\r\n    if (results.length > 0)\r\n        results = results.map(item => {\r\n            item = { ...item, ...item.pickup };\r\n            return item;\r\n        });\r\n    useEffect(async () => {\r\n        getBookings(query);\r\n\r\n    }, [query]);\r\n    updateMap(gMap, results);\r\n    const markers = results.map((item, index) => {\r\n        return <CustomMarker data={item} lat={item.latitude} lng={item.longitude} key={index} />\r\n    })\r\n\r\n\r\n    const loadMap = (map, maps) => {\r\n        setGmap({ map, maps });\r\n        let bounds = new maps.LatLngBounds();\r\n        results.forEach(item => {\r\n            /*  let content = 's';\r\n  \r\n              let marker = new maps.Marker({\r\n                  position: { lat: item.latitude, lng: item.longitude },\r\n                  map,\r\n                  draggable: false\r\n              });\r\n              \r\n              const infowindow = new maps.InfoWindow({\r\n                  content: content// createInfoWindowContent(item),\r\n              });\r\n            marker.addListener(\"click\", () => {\r\n                  infowindow.open({\r\n                      anchor: marker,\r\n                      map,\r\n                      shouldFocus: false,\r\n                  });\r\n              });*/\r\n            map.setOptions({\r\n                styles: mapStyle\r\n            })\r\n            bounds.extend({ lat: item.latitude, lng: item.longitude });\r\n        })\r\n\r\n        map.fitBounds(bounds);\r\n    };\r\n    const tagRender = (props) => {\r\n        const { label, value, closable, onClose } = props;\r\n        const onPreventMouseDown = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        };\r\n        return (\r\n            <Tag\r\n                className={STATUS_COLORS[\"COLOR_\" + value]}\r\n                onMouseDown={onPreventMouseDown}\r\n                closable={closable}\r\n                onClose={onClose}\r\n                style={{ marginRight: 3 }}\r\n            >\r\n                {label}\r\n            </Tag>\r\n        );\r\n    }\r\n    const onChangeFilter = (value) => {\r\n        setQuery({ ...query, filterByStatus: value });\r\n    }\r\n    const onChangeSort = (value) => {\r\n        setQuery({ ...query, sortBy: value });\r\n\r\n    }\r\n    const onChangeSearch = (value) => {\r\n        setQuery({ ...query, keyword: value });\r\n    }\r\n    statusOptions.map(item => {\r\n        item.label = intl.formatMessage({ id: 'text.' + item.value })\r\n        return item;\r\n    })\r\n    return (<div>\r\n        <Flex justifyContent=\"between\" alignItems=\"center\" className=\"py-4\">\r\n            <h2>{intl.formatMessage({ id: 'text.bookings' })}</h2>\r\n            <div>\r\n                <Link to={\"./bookings-create\"}>\r\n                    <Button type=\"primary\" className=\"ml-2\">\r\n                        <PlusOutlined />\r\n                        <span>{intl.formatMessage({ id: 'text.new' })}</span>\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        </Flex>\r\n        <Row justify=\"space-between\">\r\n            <Col>\r\n                <div className=\"p-2\">\r\n                    <Row align=\"middle \">\r\n                        <Col>\r\n                            <span>{intl.formatMessage({ id: 'text.filterBy' })}:</span>\r\n                        </Col>\r\n                        <Col>\r\n                            <Select className=\"ml-2\"\r\n                                mode=\"multiple\"\r\n                                showArrow\r\n                                tagRender={tagRender}\r\n                                onChange={onChangeFilter}\r\n                                placeholder={intl.formatMessage({ id: 'text.selectStatus' })}\r\n                                style={{ width: '100%', minWidth: '150px' }}\r\n                                options={statusOptions}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <span className=\"pl-4 pr-3\">- {intl.formatMessage({ id: 'text.and' })} -</span>\r\n                        </Col>\r\n                        <Col>\r\n                            <Search loading={loading} onSearch={onChangeSearch} size=\"middle\" placeholder={intl.formatMessage({ id: 'text.inputZipCode' })} style={{ width: \"170px\" }} />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n\r\n        </Row>\r\n        {results.length > 0 ?\r\n            <div style={{ height: '500px', width: '100%' }}>\r\n\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: \"AIzaSyBYHbKZtVrRwnBoYhEamqgMQWhVDtNLTrg\" }}\r\n                    defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\r\n                    defaultZoom={1}\r\n                    yesIWantToUseGoogleMapApiInternals\r\n                    onGoogleApiLoaded={({ map, maps }) => loadMap(map, maps)}\r\n                    defaultOptions={{ mapId: \"12f7b45ccae6f788\" }}\r\n                >\r\n                    {markers}\r\n                </GoogleMapReact>\r\n            </div> : <Empty />\r\n        }\r\n    </div>);\r\n\r\n}\r\n\r\nconst mapStateToProps = ({ bookingList }) => {\r\n    const { results, loading, success } = bookingList;\r\n    return {\r\n        results, loading, success\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getBookings\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(injectIntl(BookingMap));\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\myCalendar\\index.js",["856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport FullCalendar from '@fullcalendar/react' // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport momentPlugin, { toMoment, toMomentDuration } from '@fullcalendar/moment'\r\nimport interactionPlugin from '@fullcalendar/interaction'; // for selectable\r\nimport { Card, Drawer, Tag, Row, Col, Modal, Alert, Image, Button, Tooltip } from 'antd';\r\nimport BookingList from '../myCalendar/bookingList';\r\nimport bookingList from '../myCalendar/bookingList';\r\nimport { getMyCalendarBookings, myCalendarShowMessage, myCalendarDeleteBooking } from 'redux/actions';\r\nimport { motion } from 'framer-motion';\r\nimport { STATUS_COLORS, STATUS_COLORS_BACKGROUND, STATUS_COLORS_FONT, STATUS_COLORS_BORDER } from 'constants/ThemeConstant';\r\nimport moment from 'moment';\r\nimport { DeleteOutlined, DeleteTwoTone } from '@ant-design/icons';\r\nimport ScheduleList from './scheduleList';\r\nimport { injectIntl } from 'react-intl'\r\n\r\nexport const MyCalendar = ({ results, intl, loading, success, message, showMessage, getMyCalendarBookings, myCalendarShowMessage }) => {\r\n    const [calendarView, setCalendarView] = useState({});\r\n    const [dateStart, setDateStart] = useState('');\r\n    var setCalendarViewCalled = false;\r\n    const [bookListModal, setBookListModal] = useState(\r\n        {\r\n            show: false,\r\n            title: \"\",\r\n            selectedTimeFrame: {}\r\n        });\r\n    const [bookModal, setBookModal] = useState(\r\n        {\r\n            show: false,\r\n            title: \"\",\r\n            pickupDetails: {},\r\n            pickupImages: [],\r\n            pickupStart: \"\",\r\n            pickupEnd: \"\",\r\n            status: \"\",\r\n            title: \"\",\r\n            id: \"\"\r\n        });\r\n    const [query, setQuery] = useState({});\r\n    const onSelect = (value) => {\r\n        const momStart = toMoment(value.startStr, value.view.calendar);\r\n        const momEnd = toMoment(value.end, value.view.calendar);\r\n        const title = momStart.format(\"MM/DD/YYYY\") == momEnd.format(\"MM/DD/YYYY\") ? momStart.format(\"MM/DD/YYYY h:mm a\") + \" - \" + momEnd.format(\"h:mm a\") : momStart.format(\"MM/DD/YYYY h:mm a\") + \" - \" + momEnd.format(\"MM/DD/YYYY h:mm a\")\r\n        setBookListModal({\r\n            show: true, title, selectedTimeFrame: {\r\n                start: value.startStr, end: value.endStr\r\n            }\r\n        });\r\n    }\r\n    const onBookingClick = (info) => {\r\n        const momStart = toMoment(info.event.startStr, info.view.calendar);\r\n        const momEnd = toMoment(info.event.endStr, info.view.calendar);\r\n        const title = momStart.format(\"MM/DD/YYYY\") == momEnd.format(\"MM/DD/YYYY\") ? momStart.format(\"MM/DD/YYYY h:mm a\") + \" - \" + momEnd.format(\"h:mm a\") : momStart.format(\"MM/DD/YYYY h:mm a\") + \" - \" + momEnd.format(\"MM/DD/YYYY h:mm a\")\r\n\r\n        setBookModal({\r\n            show: true,\r\n            pickupDetails: info.event.extendedProps.pickup,\r\n            pickupImages: info.event.extendedProps.images,\r\n            pickupStart: info.event.startStr,\r\n            pickupEnd: info.event.endStr,\r\n            status: info.event.extendedProps.status,\r\n            title,\r\n            id: info.event.id\r\n        });\r\n    }\r\n    const bookDrawerOnClose = () => {\r\n        setBookListModal({ show: false, title: \"\", selectedTimeFrame: {} });\r\n    }\r\n    const bookModalOnClose = () => {\r\n        setBookModal({\r\n            show: false,\r\n            title: \"\",\r\n            pickupDetails: {},\r\n            pickupImages: [],\r\n            pickupStart: \"\",\r\n            pickupEnd: \"\",\r\n            status: \"\",\r\n            title: \"\",\r\n            id: \"\"\r\n        });\r\n    }\r\n\r\n    /* const calendarViewDidMount = (view) => {\r\n         setCalendarViewCalled = true;\r\n         setCalendarView(view.view);\r\n     }\r\n \r\n     const onDatesSet = (temp) => {\r\n         if (setCalendarViewCalled === false) {\r\n             setDateStart(temp.start);\r\n         }\r\n     }*/\r\n    results = results.map((item) => {\r\n\r\n        item.backgroundColor = STATUS_COLORS_BACKGROUND[\"COLOR_\" + item.bookingId.status];\r\n        item.borderColor = STATUS_COLORS_BORDER[\"COLOR_\" + item.bookingId.status];\r\n        item.textColor = STATUS_COLORS_FONT[\"COLOR_\" + item.bookingId.status];\r\n        item.extendedProps = item.bookingId;\r\n        if (item.bookingId.pickup) {\r\n\r\n            item.title = item.bookingId.pickup.title;\r\n        }\r\n\r\n        return item;\r\n    })\r\n\r\n    useEffect(async () => {\r\n        getMyCalendarBookings(query);\r\n    }, [query])\r\n\r\n    useEffect(() => {\r\n        if (showMessage)\r\n            setTimeout(() => {\r\n                myCalendarShowMessage(false);\r\n            }, 4000);\r\n    }, [showMessage]);\r\n    useEffect(async () => {\r\n        if (success) {\r\n            setBookModal({\r\n                show: false,\r\n                title: \"\",\r\n                pickupDetails: {},\r\n                pickupImages: [],\r\n                pickupStart: \"\",\r\n                pickupEnd: \"\",\r\n                status: \"\",\r\n                title: \"\",\r\n                id: \"\"\r\n            });\r\n        }\r\n    }, [success]);\r\n    return (\r\n        <Card>\r\n            {showMessage ?\r\n                <motion.div\r\n                    initial={{ opacity: 0, marginBottom: 0 }}\r\n                    animate={{\r\n                        opacity: showMessage ? 1 : 0,\r\n                        marginBottom: showMessage ? 20 : 0\r\n                    }}>\r\n                    <Alert type={success ? \"success\" : \"error\"} showIcon message={message}></Alert>\r\n                </motion.div>\r\n                : \"\"}\r\n\r\n            <div style={{ position: \"relative\", overflow: \"hidden\" }}>\r\n                <FullCalendar\r\n                    events={results}\r\n                    plugins={[interactionPlugin, momentPlugin, dayGridPlugin, timeGridPlugin, listPlugin]}\r\n                    initialView=\"timeGridWeek\"\r\n                    headerToolbar={{\r\n                        left: 'prev,next today',\r\n                        center: 'title',\r\n                        right: 'timeGridDay,timeGridWeek,dayGridMonth,listDay,listWeek,listMonth'\r\n                    }}\r\n\r\n                    allDaySlot={false}\r\n                    nowIndicator={true}\r\n                    selectable={true}\r\n                    slotMinTime={\"05:00:00\"}\r\n                    slotMaxTime={\"24:00:00\"}\r\n                    slotDuration={\"00:30:00\"}\r\n                    //viewDidMount={calendarViewDidMount}\r\n                    /* eventContent={(arg) => {\r\n \r\n                         return <div style={{ backgroundColor: \"#f00\" }} >{arg.timeText}ss</div>\r\n                     }\r\n \r\n                     }*/\r\n                    // slotLabelInterval={\"00:30\"}\r\n                    // stickyHeaderDates={true}\r\n                    eventClick={onBookingClick}\r\n                    buttonText={{\r\n                        today: intl.formatMessage({ id: 'text.today' }),\r\n                        month: intl.formatMessage({ id: 'text.month' }),\r\n                        week: intl.formatMessage({ id: 'text.week' }),\r\n                        day: intl.formatMessage({ id: 'text.day' }),\r\n                        listDay: intl.formatMessage({ id: 'text.listDay' }),\r\n                        listWeek: intl.formatMessage({ id: 'text.listWeek' }),\r\n                        listMonth: intl.formatMessage({ id: 'text.listMonth' }),\r\n\r\n                    }}\r\n                    //scrollTime={\"07:00:00\"}\r\n                    select={onSelect}\r\n\r\n                //datesSet={onDatesSet}\r\n\r\n                />\r\n\r\n                <Modal\r\n                    title={intl.formatMessage({ id: 'text.addBookingFor' }) + \": \" + bookListModal.title}\r\n                    centered\r\n                    visible={bookListModal.show}\r\n                    footer={null}\r\n                    onCancel={bookDrawerOnClose}\r\n                    className=\"w-100 \"\r\n                    // wrapClassName=\"w-50\"\r\n                    style={{ maxWidth: \"800px\" }}\r\n                    maskClosable={false}\r\n                >\r\n                    <BookingList selectedTimeFrame={bookListModal.selectedTimeFrame} />\r\n                </Modal>\r\n                <Modal\r\n                    title={intl.formatMessage({ id: 'text.scheduledOn' }) + \" : \" + bookModal.title}\r\n                    centered\r\n                    visible={bookModal.show}\r\n                    footer={null}\r\n                    onCancel={bookModalOnClose}\r\n                    className=\"w-100 \"\r\n                    // wrapClassName=\"w-50\"\r\n                    style={{ maxWidth: \"500px\" }}\r\n                    maskClosable={false}\r\n                >\r\n                    <PickupDetailsConnected details={bookModal.pickupDetails}\r\n                        images={bookModal.pickupImages}\r\n                        pickupStart={bookModal.pickupStart}\r\n                        pickupEnd={bookModal.pickupEnd}\r\n                        status={bookModal.status}\r\n                        scheduleId={bookModal.id}\r\n                    />\r\n                </Modal>\r\n\r\n            </div>\r\n\r\n        </Card>\r\n    )\r\n}\r\nconst PickupDetails = ({ details, images, status, scheduleId, loading, myCalendarDeleteBooking, intl }) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const onBookingRemove = () => {\r\n        myCalendarDeleteBooking(scheduleId);\r\n    }\r\n    return <Card className=\"p-0 \"  >\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>\r\n                <h6>\r\n                    {intl.formatMessage({ id: 'text.pickupInformtion' })}\r\n                </h6>\r\n\r\n                <article >\r\n\r\n                    <div >\r\n                        <h5>{details.name}</h5>\r\n                        <h5>{intl.formatMessage({ id: 'text.item' })} : {details.title}</h5>\r\n                        <h5>{intl.formatMessage({ id: 'text.pickupDate' })} : {details.pickupDate} {moment(details.selectedHour, [\"HH\"]).format(\"h:mm A\")}</h5>\r\n                        <p>\r\n                            {details.location}\r\n                        </p>\r\n                    </div>\r\n\r\n                </article>\r\n            </div>\r\n            <Image\r\n                preview={{ visible: false }}\r\n                width={100}\r\n                src={images[0]}\r\n                onClick={() => setVisible(true)}\r\n            />\r\n\r\n            <div style={{ display: 'none' }}>\r\n                <Image.PreviewGroup preview={{ visible, onVisibleChange: vis => setVisible(vis) }}>\r\n\r\n                    {\r\n                        images.map((item, index) => {\r\n                            return <Image width={150} src={item} key={index} />\r\n                        })\r\n                    }\r\n                </Image.PreviewGroup>\r\n            </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n            <Tag className={STATUS_COLORS[\"COLOR_\" + status]}>\r\n                <span className=\"ml-2 font-weight-semibold\">{intl.formatMessage({ id: 'text.' + status })}</span>\r\n            </Tag>\r\n            <Tooltip placement=\"left\" title={intl.formatMessage({ id: 'text.removeFromCalendar' })}>\r\n                <Button loading={loading} onClick={onBookingRemove} size={\"small\"} className={\"ant-tag-red\"} ><DeleteOutlined></DeleteOutlined></Button>\r\n            </Tooltip>\r\n        </div>\r\n    </Card>\r\n}\r\nconst mapStateToProps = ({ myCalendar }) => {\r\n\r\n    const { myCalendarBookings: results, loading, success, message, showMessage } = myCalendar;\r\n    return {\r\n        results, loading, success, message, showMessage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getMyCalendarBookings, myCalendarShowMessage\r\n}\r\nconst PickupDetailsConnected = connect(mapStateToProps, { myCalendarDeleteBooking })(injectIntl(PickupDetails));\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(MyCalendar))\r\n",["878","879"],"D:\\React\\1-25\\front\\src\\views\\app-views\\accounts\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\index.js",["880","881"],"import React, { lazy, Suspense } from \"react\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { useSelector } from \"react-redux\";\r\nconst Dashboards = ({ match }) => {\r\n  const userData = useSelector(state => state.user.userData);\r\n  let index = \"empty\";\r\n  if (userData && userData.role == \"client\")\r\n    index = \"client\";\r\n  else if (userData && userData.role == \"admin\")\r\n    index = \"default\";\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\" />}>\r\n      <Switch>\r\n        <Route path={`${match.url}/${index}`} component={lazy(() => import(`./${index}`))} />\r\n        <Redirect from={`${match.url}`} to={`${match.url}/${index}`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n};\r\n\r\nexport default Dashboards;\r\n\r\n\r\n\r\n","D:\\React\\1-25\\front\\src\\components\\shared-components\\Flex\\index.js",[],"D:\\React\\1-25\\front\\src\\components\\util-components\\Icon\\index.js",[],"D:\\React\\1-25\\front\\src\\redux\\actions\\Auth.js",[],"D:\\React\\1-25\\front\\src\\views\\auth-views\\components\\RegisterForm.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\settings\\timeScheduler.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\myCalendar\\scheduleList.js",["882","883","884","885","886","887","888"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Badge, Tooltip, Button, Row, Col } from 'antd'\r\nimport { DeleteOutlined, DeleteTwoTone, CalendarOutlined } from '@ant-design/icons';\r\nimport \"./style.css\";\r\nimport { STATUS_COLORS, STATUS_COLORS_BACKGROUND, STATUS_COLORS_FONT, STATUS_COLORS_BORDER } from 'constants/ThemeConstant';\r\nimport { toMoment, toMomentDuration } from '@fullcalendar/moment'\r\nimport moment from 'moment';\r\nimport calendar from '../calendar';\r\n\r\n\r\nconst mapToWeekViewList = (schedules, start, end, calendar) => {\r\n    var mapped = [];\r\n    const dates = {};\r\n    schedules = schedules.filter(item => {\r\n        var compareDate = moment(toMoment(item.start, calendar), \"DD/MM/YYYY\");\r\n        var startDate = moment(start, \"DD/MM/YYYY\");\r\n        var endDate = moment(end, \"DD/MM/YYYY\");\r\n        dates[moment(item.start).format(\"DD/MM/YYYY\")] = {};\r\n        return compareDate.isBetween(startDate, endDate);\r\n    });\r\n    Object.keys(dates).forEach(date => {\r\n        var filtered = schedules.filter(item => {\r\n            return moment(item.start).format(\"DD/MM/YYYY\") === date;\r\n        })\r\n\r\n        filtered = filtered.map(item => {\r\n            const { location, name, phone, pickupdate, selectedHour, title } = item.bookingId.pickup;\r\n            const map = {\r\n                title,\r\n                bullet: \"cyan\",\r\n                time: moment(item.start).format(\"HH:mm a\") + \" - \" + moment(item.end).format(\"HH:mm a\"),\r\n                name, phone, pickupdate,\r\n                status: item.bookingId.status,\r\n                location\r\n            }\r\n            return map;\r\n        })\r\n\r\n        mapped.push({\r\n            date,\r\n            event: filtered\r\n        })\r\n    });\r\n    mapped = mapped.filter(item => item.event.length > 0);\r\n    return mapped;\r\n}\r\nexport const ScheduleList = ({ schedules = [], calendarView }) => {\r\n    const { type, activeStart, activeEnd, calendar } = calendarView;\r\n    const onDelete = (id) => {\r\n\r\n    }\r\n\r\n    if (type) {\r\n        const momStart = toMoment(activeStart, calendar);\r\n        const momEnd = toMoment(activeEnd, calendar);\r\n        schedules = mapToWeekViewList(schedules, momStart, momEnd, calendar);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"p-2 pr-4\">\r\n            <h5>Schedules List</h5>\r\n            {\r\n                schedules.map(list => (\r\n                    <div key={list.date} className=\"calendar-list\" >\r\n                        <h5 className=\"text-gray-light\">\r\n                            <CalendarOutlined />\r\n                            <span className=\"ml-2\">{list.date}</span>\r\n                        </h5>\r\n                        {\r\n                            list.event.map((eventItem, i) => (\r\n                                <Row align=\"middle\" key={`${eventItem.title}-${i}`} className={\"calendar-list-item\"}\r\n                                    style={{\r\n                                        backgroundColor: STATUS_COLORS_BACKGROUND[\"COLOR_\" + eventItem.status]\r\n                                    }}\r\n                                >\r\n                                    <Col flex=\"auto\" >\r\n                                        <Row>\r\n                                            <Col flex=\"10px\">\r\n                                                <Badge color={STATUS_COLORS_FONT[\"COLOR_\" + eventItem.status]} />\r\n\r\n                                            </Col>\r\n                                            <Col flex=\"auto\">\r\n\r\n                                                <div className=\"text-truncate\" style={{ maxWidth: \"180px\" }}>{eventItem.title}</div>\r\n                                                <div className=\"font-size-sm\">{eventItem.location}</div>\r\n                                                <div className=\"text-muted\" >{eventItem.time}</div>\r\n\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                    </Col>\r\n                                    <Col flex=\"20px\">\r\n                                        <Tooltip placement=\"left\" title=\"Remove from calendar\">\r\n                                            <Button size={\"small\"} className={\"ant-tag-red p-2\"} ><DeleteOutlined></DeleteOutlined></Button>\r\n                                        </Tooltip>\r\n                                    </Col>\r\n                                </Row>\r\n                            ))\r\n                        }\r\n                    </div >\r\n                ))\r\n            }\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScheduleList)\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\myCalendar\\bookingList.js",["889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912"],"import { connect } from 'react-redux';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { myCalendarAddBooking } from 'redux/actions/MyCalendar';\r\nimport { getBookings, myCalendarShowMessage, showBookingMessage } from 'redux/actions';\r\nimport moment from \"moment\";\r\nimport { LoadingOutlined, CheckCircleTwoTone, PlusOutlined } from '@ant-design/icons';\r\nimport { Table, Tag, Space, Tooltip, Empty, Card, Col, Row, Input, Image, Button, Radio, Select, Alert } from 'antd';\r\nimport BookingService from 'services/BookingService';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { statusOptions, sortOptions } from \"constants/Options\";\r\nimport { STATUS_COLORS } from 'constants/ThemeConstant';\r\nimport { motion } from \"framer-motion\"\r\nimport { injectIntl } from 'react-intl'\r\n\r\n\r\n\r\nconst ActionColumnRender = ({ intl, myCalendarLoading, myCalendarSuccess, text, record, myCalendarAddBooking, selectedTimeFrame }) => {\r\n\r\n    const onAdd = () => {\r\n        myCalendarAddBooking({\r\n            bookingId: record.id,\r\n            start: selectedTimeFrame.start,\r\n            end: selectedTimeFrame.end,\r\n        })\r\n    }\r\n\r\n    return <Button onClick={onAdd} size=\"small\" type=\"primary\" loading={myCalendarLoading}>{intl.formatMessage({ id: 'text.add' })}</Button>\r\n\r\n}\r\n\r\n\r\nconst BookingList = ({ intl, results, getBookings, selectedTimeFrame, myCalendarMessage, myCalendarSuccess, myCalendarShowMessage, showMessage }) => {\r\n    const bookingTableColumns = [\r\n        {\r\n            title: intl.formatMessage({ id: 'text.add' }),\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: intl.formatMessage({ id: 'text.add' }),\r\n            dataIndex: 'title',\r\n\r\n        },\r\n        {\r\n            title: intl.formatMessage({ id: 'text.add' }),\r\n            dataIndex: 'location',\r\n        },\r\n        {\r\n            title: intl.formatMessage({ id: 'text.add' }),\r\n            dataIndex: 'status',\r\n            render: (text, record) => {\r\n                return <Tag\r\n                    className={STATUS_COLORS[\"COLOR_\" + text]} size={\"small\"}\r\n                >\r\n                    {intl.formatMessage({ id: 'text.' + text })}\r\n                </Tag>\r\n            }\r\n\r\n        },\r\n        {\r\n            title: intl.formatMessage({ id: 'text.add' }),\r\n            dataIndex: '',\r\n            key: 'x',\r\n            render: (text, record) => {\r\n                return <ActionColumnRenderConnected text={text} record={record} selectedTimeFrame={selectedTimeFrame} />\r\n            }\r\n\r\n        },\r\n    ]\r\n    const [query, setQuery] = useState({ sortBy: \"Submitted\", sortType: \"Desc\", filterByStatus: [\"Submitted\"] });\r\n    const [tableState, setTableState] = useState({\r\n        data: [],\r\n        pagination: {\r\n            current: 1,\r\n            pageSize: 100,\r\n        },\r\n        loading: false,\r\n\r\n    });\r\n    if (results.length > 0)\r\n        results = results.map(item => {\r\n            item = { ...item, ...item.pickup };\r\n            return item;\r\n        });\r\n    useEffect(async () => {\r\n        getBookings(query);\r\n    }, [query]);\r\n\r\n    useEffect(async () => {\r\n        if (myCalendarSuccess) {\r\n            getBookings(query);\r\n            myCalendarShowMessage(false);\r\n        }\r\n    }, [myCalendarSuccess]);\r\n    useEffect(() => {\r\n        if (showMessage)\r\n            setTimeout(() => {\r\n                myCalendarShowMessage(false);\r\n            }, 2000);\r\n    }, [showMessage]);\r\n\r\n\r\n    const tagRender = (props) => {\r\n        const { label, value, closable, onClose } = props;\r\n        const onPreventMouseDown = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        };\r\n        return (\r\n            <Tag\r\n                className={STATUS_COLORS[\"COLOR_\" + value]}\r\n                onMouseDown={onPreventMouseDown}\r\n                closable={closable}\r\n                onClose={onClose}\r\n                style={{ marginRight: 3 }}\r\n                size={\"small\"}\r\n            >\r\n                {intl.formatMessage({ id: 'text.' + value })}\r\n            </Tag>\r\n        );\r\n    }\r\n\r\n    const onChangeSort = (value) => {\r\n        setQuery({ ...query, sortBy: value });\r\n\r\n    }\r\n    const onChangeSearch = (value) => {\r\n        setQuery({ ...query, keyword: value });\r\n    }\r\n    const onChangeFilter = (value) => {\r\n        setQuery({ ...query, filterByStatus: value });\r\n    }\r\n    const onChangeSortType = (value) => {\r\n        setQuery({ ...query, sortType: value });\r\n    }\r\n    statusOptions.map(item => {\r\n        item.label = intl.formatMessage({ id: 'text.' + item.value })\r\n        return item;\r\n    })\r\n    return (<>\r\n        {showMessage ?\r\n            <motion.div\r\n                initial={{ opacity: 0, marginBottom: 0 }}\r\n                animate={{\r\n                    opacity: showMessage ? 1 : 0,\r\n                    marginBottom: showMessage ? 20 : 0\r\n                }}>\r\n                <Alert type={myCalendarSuccess ? \"success\" : \"error\"} showIcon message={myCalendarMessage}></Alert>\r\n            </motion.div>\r\n            : \"\"}\r\n        <Row justify=\"space-between\">\r\n            <Col>\r\n                <div className=\"p-2\">\r\n                    <Row align=\"middle \">\r\n                        <Col>\r\n                            <h5>{intl.formatMessage({ id: 'text.filterBy' })}:</h5>\r\n                        </Col>\r\n                        <Col>\r\n                            <Select className=\"ml-2\"\r\n                                mode=\"multiple\"\r\n                                showArrow\r\n                                size={\"small\"}\r\n                                tagRender={tagRender}\r\n                                onChange={onChangeFilter}\r\n                                placeholder={intl.formatMessage({ id: 'text.selectStatus' })}\r\n                                style={{ width: '100%', minWidth: '150px' }}\r\n                                options={statusOptions}\r\n                                value={query.filterByStatus}\r\n                            />\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n\r\n        </Row>\r\n        <Table\r\n            columns={bookingTableColumns}\r\n            rowKey={record => record.id}\r\n            dataSource={results}\r\n            size={\"small\"}\r\n            showHeader={false}\r\n\r\n            pagination={tableState.pagination}\r\n            expandable={{\r\n                expandedRowRender: record => <BookingDetails booking={record} />,\r\n                rowExpandable: record => record.name !== 'Not Expandable',\r\n            }}\r\n        />\r\n    </>);\r\n}\r\n\r\nconst BookingDetails = ({ booking }) => {\r\n    const { pickup, shipping, images } = booking;\r\n    return <PickupDetails details={pickup} images={images} />\r\n\r\n}\r\n\r\nconst PickupDetails = injectIntl(({ intl, details, images }) => {\r\n    const [visible, setVisible] = useState(false);\r\n    return <Card className=\"p-1 \"  >\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>\r\n                <h6>\r\n                    {intl.formatMessage({ id: 'text.pickupInformtion' })}\r\n                </h6>\r\n\r\n                <article >\r\n\r\n                    <div >\r\n                        <h5>{details.name}</h5>\r\n                        <h5>{intl.formatMessage({ id: 'text.item' })} : {details.title}</h5>\r\n                        <h5>{intl.formatMessage({ id: 'text.pickupDate' })} : {details.pickupDate} {moment(details.selectedHour, [\"HH\"]).format(\"h:mm A\")}</h5>\r\n                        <p>\r\n                            {details.location}\r\n                        </p>\r\n                    </div>\r\n                </article>\r\n            </div>\r\n            <Image\r\n                preview={{ visible: false }}\r\n                width={100}\r\n                src={images[0]}\r\n                onClick={() => setVisible(true)}\r\n            />\r\n            <div style={{ display: 'none' }}>\r\n                <Image.PreviewGroup preview={{ visible, onVisibleChange: vis => setVisible(vis) }}>\r\n\r\n                    {\r\n                        images.map((item, index) => {\r\n                            return <Image width={150} src={item} key={index} />\r\n                        })\r\n                    }\r\n                </Image.PreviewGroup>\r\n            </div>\r\n        </div>\r\n    </Card>\r\n})\r\n\r\nconst mapStateToProps = ({ bookingList, myCalendar }) => {\r\n    const { results, loading, success } = bookingList;\r\n    const { results: myCalendarResults, loading: myCalendarLoading, success: myCalendarSuccess, message: myCalendarMessage, showMessage } = myCalendar;\r\n    return {\r\n        results, loading, success, myCalendarResults, myCalendarLoading, myCalendarSuccess, myCalendarMessage, showMessage\r\n    }\r\n}\r\n\r\nconst ActionColumnRenderConnected = connect(mapStateToProps, { myCalendarAddBooking })(injectIntl(ActionColumnRender));\r\nexport default connect(mapStateToProps, { getBookings, myCalendarShowMessage })(injectIntl(BookingList));\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\map\\mapstyle.js",[],"D:\\React\\1-25\\front\\src\\constants\\Options.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\accounts\\list\\UserView.js",["913","914","915","916","917","918","919"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n\tAvatar, Drawer, Divider, Card, Tabs,\r\n\tAlert\r\n} from 'antd';\r\nimport UserProfile from './userProfile';\r\nimport UserBooking from './userBooking';\r\nimport UserSecurity from './userSecurity';\r\nimport UserService from 'services/UserService';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport { motion } from 'framer-motion';\r\nimport IntlMessage from \"components/util-components/IntlMessage\";\r\nimport { injectIntl } from 'react-intl'\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nexport const UserView = ({ match, intl }) => {\r\n\tconst [userData, setUserData] = useState({});\r\n\tconst userId = match.params.id;\r\n\tconst [state, setState] = useState({\r\n\t\tloading: false, message: \"\", showMessage: false, error: false\r\n\t});\r\n\tconst hideMessage = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetState({ ...state, showMessage: false, error: false, message: \"\" });\r\n\t\t}, 2000);\r\n\t}\r\n\tconst showMessage = (message) => {\r\n\t\tsetState({ ...state, showMessage: true, error: true, message: message });\r\n\t}\r\n\tuseEffect(async () => {\r\n\t\ttry {\r\n\t\t\tconst data = await UserService.getData(userId);\r\n\t\t\tsetUserData(data);\r\n\t\t} catch (err) {\r\n\t\t\tshowMessage(err.message);\r\n\t\t\thideMessage();\r\n\t\t}\r\n\r\n\t}, []);\r\n\r\n\tuseEffect(async () => {\r\n\t\tif (state.showMessage)\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetState({ showMessage: false, message: \"\", error: false });\r\n\t\t\t}, 4000);\r\n\t})\r\n\r\n\tconst onUpdate = async (values) => {\r\n\t\ttry {\r\n\t\t\tsetState({\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t});\r\n\r\n\t\t\tconst res = await UserService.update(userId, values);\r\n\t\t\tsetState({\r\n\t\t\t\t...state,\r\n\t\t\t\terror: false,\r\n\t\t\t\tmessage: \"Success\",\r\n\t\t\t\tloading: false,\r\n\t\t\t\tshowMessage: true\r\n\t\t\t});\r\n\t\t\tsetUserData(res);\r\n\r\n\t\t} catch (err) {\r\n\t\t\tsetState({\r\n\t\t\t\t...state,\r\n\t\t\t\terror: true,\r\n\t\t\t\tmessage: err.message,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tshowMessage: true\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<> <PageHeader title={userData.name} display={true} trans={false} />\r\n\t\t\t{\r\n\t\t\t\tstate.showMessage ? <motion.div\r\n\t\t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }}\r\n\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\topacity: state.showMessage ? 1 : 0,\r\n\t\t\t\t\t\tmarginBottom: state.showMessage ? 20 : 0\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<Alert type={state.error ? \"error\" : \"success\"} showIcon message={state.message}></Alert>\r\n\t\t\t\t</motion.div> : \"\"\r\n\t\t\t}\r\n\t\t\t<Card>\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\">\r\n\t\t\t\t\t<TabPane tab={intl.formatMessage({ id: 'text.bookings' })} key=\"1\">\r\n\t\t\t\t\t\t<UserBooking userId={userId}></UserBooking>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab={intl.formatMessage({ id: 'text.profile' })} key=\"2\"><UserProfile userId={userId} onUpdate={onUpdate} userData={userData}></UserProfile>\r\n\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab={intl.formatMessage({ id: 'text.security' })} key=\"3\">\r\n\t\t\t\t\t\t<UserSecurity userId={userId} onUpdate={onUpdate}></UserSecurity>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(UserView))\r\n\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\analytic\\AnalyticDashboardData.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\bookingView.js",["920","921","922","923","924","925","926","927"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    Avatar, Drawer, Divider, Card, Tabs,\r\n    Alert\r\n} from 'antd'; import PageHeader from 'components/layout-components/PageHeader';\r\nimport { motion } from 'framer-motion';\r\nimport BookingService from 'services/BookingService';\r\nimport BookingPickup from './bookingPickup';\r\nimport BookingPickupDate from './bookingPickupDate';\r\nimport BookingShipping from './bookingShipping';\r\nimport { injectIntl } from 'react-intl';\r\nconst { TabPane } = Tabs;\r\n\r\nexport const BookingView = ({ intl, match }) => {\r\n    const [bookingData, setBookingData] = useState({ pickup: {}, shipping: {} });\r\n    const [state, setState] = useState({\r\n        loading: false, message: \"\", showMessage: false, error: false\r\n    });\r\n    const bookingId = match.params.id;\r\n    const hideMessage = () => {\r\n        setTimeout(() => {\r\n            setState({ ...state, showMessage: false, error: false, message: \"\" });\r\n        }, 4000);\r\n    }\r\n    const showMessage = (message) => {\r\n        setState({ ...state, showMessage: true, error: true, message: message });\r\n    }\r\n    useEffect(async () => {\r\n        try {\r\n            const data = await BookingService.getData(bookingId);\r\n            setBookingData(data);\r\n        } catch (err) {\r\n            showMessage(err.message);\r\n            hideMessage();\r\n        }\r\n\r\n    }, []);\r\n    useEffect(async () => {\r\n        if (state.showMessage)\r\n            setTimeout(() => {\r\n                setState({ showMessage: false, message: \"\", error: false });\r\n            }, 4000);\r\n    })\r\n    const onUpdate = async (values, type) => {\r\n        try {\r\n            setState({\r\n                ...state,\r\n                loading: true,\r\n            });\r\n            if (type == \"pickup\") {\r\n                const res = await BookingService.updatePickup(bookingId, values);\r\n                setBookingData(res);\r\n            }\r\n            else if (type == \"shipping\") {\r\n                const res = await BookingService.updateShipping(bookingId, values);\r\n                setBookingData(res);\r\n            }\r\n            setState({\r\n                ...state,\r\n                error: false,\r\n                message: \"Success\",\r\n                loading: false,\r\n                showMessage: true\r\n            });\r\n\r\n\r\n        } catch (err) {\r\n            setState({\r\n                ...state,\r\n                error: true,\r\n                message: err.message,\r\n                loading: false,\r\n                showMessage: true\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <> <PageHeader title={bookingData.pickup.name} display={true} trans={false} />\r\n            {\r\n                state.showMessage ? <motion.div\r\n                    initial={{ opacity: 0, marginBottom: 0 }}\r\n                    animate={{\r\n                        opacity: state.showMessage ? 1 : 0,\r\n                        marginBottom: state.showMessage ? 20 : 0\r\n                    }}>\r\n                    <Alert type={state.error ? \"error\" : \"success\"} showIcon message={state.message}></Alert>\r\n                </motion.div> : \"\"\r\n            }\r\n            <Card>\r\n                <Tabs defaultActiveKey=\"1\">\r\n                    <TabPane tab={intl.formatMessage({ id: 'text.pickupInformtion' })} key=\"1\">\r\n                        <BookingPickup bookingData={bookingData} loading={state.loading} onUpdate={onUpdate} />\r\n                    </TabPane>\r\n                    <TabPane tab={intl.formatMessage({ id: 'text.pickupDate' })} key=\"2\">\r\n                        <BookingPickupDate pickupData={bookingData.pickup} loading={state.loading} onUpdate={onUpdate} />\r\n                    </TabPane>\r\n\r\n                    <TabPane tab={intl.formatMessage({ id: 'text.shippingInformtion' })} key=\"3\">\r\n                        <BookingShipping bookingData={bookingData} loading={state.loading} onUpdate={onUpdate} />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(BookingView))\r\n","D:\\React\\1-25\\front\\src\\services\\JwtAuthService.js",[],"D:\\React\\1-25\\front\\src\\views\\auth-views\\authentication\\login-1\\index.js",[],"D:\\React\\1-25\\front\\src\\redux\\actions\\Calendar.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\accounts\\list\\index.js",["928","929","930","931","932","933","934"],"import React, { Component } from 'react'\r\nimport { Table, Tag, Tooltip, Button, Input, Modal, Alert, Row, Col, Select } from 'antd';\r\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport IntlMessage from \"components/util-components/IntlMessage\";\r\nimport { injectIntl } from 'react-intl'\r\nimport UserService from 'services/UserService';\r\nimport { motion } from \"framer-motion\"\r\nimport { Link } from 'react-router-dom';\r\nimport { UserFilterOptions, UserSortOptions } from \"../../../../constants/Options\";\r\nimport { STATUS_COLORS } from 'constants/ThemeConstant';\r\n\r\nconst { Search } = Input;\r\n\r\n\r\nexport class UserList extends Component {\r\n\r\n    state = {\r\n        users: [],\r\n        userProfileVisible: false,\r\n        submitConfirmVisible: false,\r\n        selectedUser: null,\r\n        loading: false,\r\n        showMessage: false,\r\n        message: \"\",\r\n        pagination: {\r\n            current: 1,\r\n            pageSize: 10,\r\n        },\r\n        query: {\r\n            sortBy: \"name\",\r\n            sortType: \"asc\",\r\n\r\n        }\r\n    }\r\n\r\n    deleteUser = userId => {\r\n        const user = this.state.users.find(item => item.id == userId)\r\n        this.setState({ submitConfirmVisible: true, selectedUser: user, error: false, message: \"\" });\r\n\r\n    }\r\n\r\n    showUserProfile = userInfo => {\r\n        this.setState({\r\n            userProfileVisible: true,\r\n            selectedUser: userInfo\r\n        });\r\n    };\r\n\r\n    closeUserProfile = () => {\r\n        this.setState({\r\n            userProfileVisible: false,\r\n            selectedUser: null\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const data = await UserService.list(this.state.query);\r\n        this.setState({\r\n            users: data.results\r\n        })\r\n    }\r\n\r\n    async onSubmitConfirm(type) {\r\n        if (type == \"ok\") {\r\n            this.setState({ submitConfirmVisible: false, loading: true });\r\n            try {\r\n                const result = await UserService.delete(this.state.selectedUser.id);\r\n                this.setState({\r\n                    users: this.state.users.filter(item => item.id !== this.state.selectedUser.id),\r\n                });\r\n                this.setState({ error: false, message: \"Deleted\", showMessage: true });\r\n            } catch (err) {\r\n                this.setState({ error: true, message: err.message, showMessage: true });\r\n            }\r\n            this.setState({ loading: false });\r\n            if (this.state.showMessage)\r\n                setTimeout(() => {\r\n                    this.setState({ showMessage: false });\r\n                }, 4000);\r\n        }\r\n        else\r\n            this.setState({ submitConfirmVisible: false });\r\n    }\r\n    tagRender = (props) => {\r\n        const { label, value, closable, onClose } = props;\r\n        const onPreventMouseDown = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        };\r\n        return (\r\n            <Tag\r\n                className={STATUS_COLORS[\"COLOR_\" + value]}\r\n                onMouseDown={onPreventMouseDown}\r\n                closable={closable}\r\n                onClose={onClose}\r\n                style={{ marginRight: 3 }}\r\n            >\r\n                {label}\r\n            </Tag>\r\n        );\r\n    }\r\n    onChangeSort = async (value) => {\r\n        const data = await UserService.list({ ...this.state.query, sortBy: value });\r\n        this.setState({\r\n            users: data.results,\r\n            query: { sortBy: value }\r\n        })\r\n    }\r\n    onChangeSearch = async (value) => {\r\n        const data = await UserService.list({ ...this.state.query, keyword: value });\r\n        this.setState({\r\n            users: data.results,\r\n            query: { keyword: value }\r\n        })\r\n\r\n    }\r\n    onChangeFilter = async (value) => {\r\n        const data = await UserService.list({ ...this.state.query, filterByStatus: value });\r\n        this.setState({\r\n            users: data.results,\r\n            query: { filterByStatus: value }\r\n        })\r\n\r\n    }\r\n    onChangeSortType = async (value) => {\r\n        const data = await UserService.list({ ...this.state.query, sortType: value });\r\n        this.setState({\r\n            users: data.results,\r\n            query: { sortType: value }\r\n        })\r\n\r\n    }\r\n    UserFilterOptions = UserFilterOptions.map(item => {\r\n        item.label = this.props.intl.formatMessage({ id: 'text.' + item.value })\r\n        return item;\r\n    })\r\n    UserSortOptions = UserSortOptions.map(item => {\r\n        item.label = this.props.intl.formatMessage({ id: 'text.' + item.value })\r\n        return item;\r\n    })\r\n    render() {\r\n        const { loading, users, userProfileVisible, selectedUser, pagination, submitConfirmVisible, error, message, showMessage } = this.state;\r\n        const tableColumns = [\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.user' }),\r\n                dataIndex: 'name',\r\n\r\n\r\n            },\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.email' }),\r\n                dataIndex: 'email',\r\n\r\n\r\n            },\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.role' }),\r\n                dataIndex: 'role',\r\n\r\n            },\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.lastLogin' }),\r\n                dataIndex: 'lastLogin',\r\n                render: date => (\r\n                    <span>{moment(date).format(\"MM/DD/YYYY\")} </span>\r\n                ),\r\n\r\n            },\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.status' }),\r\n                dataIndex: 'status',\r\n                render: status => (\r\n                    <Tag className=\"text-capitalize\" color={status === 'Active' ? 'cyan' : 'red'}>{status}</Tag>\r\n                ),\r\n\r\n            },\r\n            {\r\n                title: '',\r\n                dataIndex: 'actions',\r\n                render: (_, elm) => (\r\n                    <div className=\"text-right d-flex justify-content-end\">\r\n                        <Tooltip title={this.props.intl.formatMessage({ id: 'text.view' })}>\r\n                            <Link to={`./accounts/${elm.id}`}>\r\n                                <Button type=\"link\" className=\"mr-2\" icon={<EyeOutlined />} size=\"small\" />\r\n                            </Link>\r\n                        </Tooltip>\r\n                        <Tooltip title={this.props.intl.formatMessage({ id: 'text.delete' })}>\r\n                            <Button type=\"link\" danger icon={<DeleteOutlined />} onClick={() => { this.deleteUser(elm.id) }} size=\"small\" />\r\n                        </Tooltip>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <>\r\n                {showMessage ?\r\n                    <motion.div\r\n                        initial={{ opacity: 0, marginBottom: 0 }}\r\n                        animate={{\r\n                            opacity: showMessage ? 1 : 0,\r\n                            marginBottom: showMessage ? 20 : 0\r\n                        }}>\r\n                        <Alert type={error == false ? \"success\" : \"error\"} showIcon message={message}></Alert>\r\n                    </motion.div>\r\n                    : \"\"}\r\n                <Row justify=\"space-between\">\r\n                    <Col>\r\n                        <div className=\"p-2\">\r\n                            <Row align=\"middle \">\r\n                                <Col>\r\n                                    <span><IntlMessage id=\"text.filterBy\" /></span>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"ml-2\"\r\n                                        mode=\"multiple\"\r\n                                        showArrow\r\n                                        size=\"small\"\r\n                                        tagRender={this.tagRender}\r\n                                        onChange={this.onChangeFilter}\r\n                                        placeholder={this.props.intl.formatMessage({ id: 'text.selectRoleOrStatus' })}\r\n                                        style={{ width: '100%', minWidth: '150px' }}\r\n                                        options={UserFilterOptions}\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <span className=\"pl-4 pr-3\">- <IntlMessage id=\"text.and\" /> -</span>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Search size=\"small\" loading={loading} onSearch={this.onChangeSearch} size=\"small\" placeholder={this.props.intl.formatMessage({ id: 'text.inputName' })} style={{ width: \"170px\" }} />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"p-2\">\r\n                            <Row align=\"middle \">\r\n                                <Col>\r\n                                    <span><IntlMessage id=\"text.sortBy\" /></span>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"ml-2\"\r\n                                        size=\"small\"\r\n                                        showArrow\r\n                                        onChange={this.onChangeSort}\r\n                                        defaultValue=\"name\"\r\n                                        style={{ width: '100%', minWidth: '150px' }}\r\n                                        options={UserSortOptions}\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"ml-3\"\r\n                                        showArrow\r\n                                        size=\"small\"\r\n                                        onChange={this.onChangeSortType}\r\n                                        defaultValue=\"desc\"\r\n                                        style={{ width: '80px' }}\r\n                                        options={[{ label: \"Desc\", value: \"desc\" }, { label: \"Asc\", value: \"asc\" }]}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Table columns={tableColumns} dataSource={users} rowKey='id'\r\n                    pagination={pagination} size=\"small\"\r\n\r\n                />\r\n\r\n\r\n\r\n                <Modal\r\n                    title=\"User\"\r\n                    visible={submitConfirmVisible}\r\n                    onOk={() => { this.onSubmitConfirm(\"ok\") }}\r\n                    onCancel={() => { this.onSubmitConfirm(\"cancel\") }}\r\n                    okText=\"Delete\"\r\n                    cancelText=\"Cancel\"\r\n                >\r\n                    <p><IntlMessage id=\"text.delete\" />?</p>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default injectIntl(UserList)\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\index.js",["935","936","937","938","939"],"D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\bookingShipping.js",["940","941","942"],"import React, { useState } from 'react'\r\nimport {\r\n    Form, Input,\r\n    Image, Tabs, Col, Row, Button\r\n} from 'antd';\r\nimport GoogleMapLocation from '../create/googleMapLocation';\r\nimport { rulesDelivery } from '../create/rules';\r\nimport { injectIntl } from 'react-intl';\r\nconst layout = {\r\n    labelCol: { span: 24 },\r\n    wrapperCol: { span: 24 },\r\n};\r\nconst BookingShipping = ({ intl, loading, bookingData, onUpdate }) => {\r\n    const [details, setDetails] = useState({});\r\n    const formFields = [];\r\n    Object.keys(bookingData.shipping).forEach(item => {\r\n        formFields.push({\r\n            name: [item],\r\n            value: bookingData.shipping[item]\r\n        })\r\n    });\r\n    const onFormFinish = (values) => {\r\n        onUpdate({ ...details, ...values }, 'shipping');\r\n\r\n    }\r\n    const onMarkerDragEnd = (location) => {\r\n        setDetails({ latitude: location.lat(), longitude: location.lng() });\r\n    }\r\n\r\n    return (\r\n        <> <Row justify=\"space-around\">\r\n\r\n            <Col sm={24} xs={24} md={12} lg={8}>\r\n                <Form layout=\"horizontal\" onFinish={onFormFinish} name=\"pickupDetails\" fields={formFields}>\r\n                    <Form.Item name=\"name\" label={intl.formatMessage({ id: 'text.name' })} rules={rulesDelivery.name}>\r\n                        <Input placeholder={intl.formatMessage({ id: 'text.name' })} className=\" m-0\" />\r\n                    </Form.Item>\r\n                    <Row>\r\n                        <Col sm={16}>\r\n                            <Form.Item name=\"location\" label={intl.formatMessage({ id: 'text.location' })} rules={rulesDelivery.location} >\r\n                                <Input placeholder={intl.formatMessage({ id: 'text.address' })} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col sm={8}><Form.Item name=\"zip\" className=\"pl-1\" label={intl.formatMessage({ id: 'text.zip' })} rules={rulesDelivery.zip} >\r\n                            <Input placeholder={intl.formatMessage({ id: 'text.zip' })} />\r\n                        </Form.Item></Col>\r\n                    </Row>\r\n                    {\r\n                        bookingData.pickup ?\r\n                            <GoogleMapLocation longitude={bookingData.pickup.longitude} latitude={bookingData.pickup.latitude} onMarkerDragEnd={onMarkerDragEnd} />\r\n                            : \"\"\r\n                    }\r\n                    <Form.Item name=\"phone\" label={intl.formatMessage({ id: 'text.phone' })} rules={rulesDelivery.phone}>\r\n                        <Input placeholder={intl.formatMessage({ id: 'text.phone' })} />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n                            {intl.formatMessage({ id: 'text.update' })}\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default injectIntl(BookingShipping);","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\bookingPickupDate.js",["943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ClockCircleOutlined, LinkOutlined, CheckCircleTwoTone } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport {\r\n    Steps, Row, Col, Form, Input, Calendar,\r\n    Button, Divider, Alert, Image, Card, Tabs, Empty, Modal, Badge, Result, TimePicker\r\n} from 'antd';\r\nimport { motion } from 'framer-motion';\r\nimport { COLOR_GRAY, COLOR_GREEN } from 'constants/ThemeConstant';\r\nimport { getCalendarDates } from \"redux/actions/Calendar\";\r\nimport { injectIntl } from 'react-intl'\r\n\r\nexport const BookingPickupDate = ({ intl, getCalendarDates, pickupData, dates = [], loading, onUpdate }) => {\r\n    const [state, setState] = useState({\r\n        pickupDate: moment(pickupData.pickupDate).format('YYYY-MM-DD'),\r\n\r\n    });\r\n\r\n    let date = dates.find(item => item.date == state.pickupDate);\r\n    const availableHours = date ? date.hours.map((item, index) => {\r\n        return <div className=\"p-1 m-1 pl-3 pr-3\" key={\"availableHours\" + index}\r\n            style={{\r\n                display: \"flex\", fontSize: \"16px\", justifyContent: \"space-between\",\r\n                alignItems: \"center\", width: \"255px\", borderRadius: \"10px\", border: \"1px solid #e6ebf1\", backgroundColor: COLOR_GREEN\r\n            }}>\r\n            <span><ClockCircleOutlined /> {item.from}</span> - <span>{item.to}</span>\r\n\r\n        </div>\r\n    }) : \"\";\r\n\r\n    const dateSelect = (value) => {\r\n        setState({ ...state, pickupDate: value.format('YYYY-MM-DD') })\r\n    }\r\n\r\n    const onSelectHour = (time) => {\r\n        if (time) {\r\n            setState({\r\n                ...state, selectedHour: {\r\n                    from: time[0].format(\"h:mm a\"),\r\n                    to: time[1].format(\"h:mm a\")\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n    const dateCellRender = (value) => {\r\n        const bookingDates = dates\r\n\r\n        var bgColor = \"#f6cdcd\";\r\n\r\n        for (var i = 0; i < bookingDates.length; i++) {\r\n            const item = bookingDates[i];\r\n            if (moment(value.format('YYYY-MM-DD')).isSame(item.date) && item.available) {\r\n                bgColor = \"#caffc4\";\r\n            }\r\n            else if (moment(value.format('YYYY-MM-DD')).isSame(item.date)) {\r\n\r\n                bgColor = \"#f6cdcd\";\r\n            }\r\n        }\r\n        if (state.pickupDate == value.format('YYYY-MM-DD')) {\r\n            bgColor = \"#86bbf2\";\r\n        }\r\n        const status = <div className=\"w-100 h-100 p-2\" >\r\n            <div style={{\r\n                backgroundColor: bgColor, borderRadius: \"5px\", border: \"1px solid #d1d4e3\",\r\n                padding: \"10px\",\r\n                display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\"\r\n            }}>\r\n                {value.date()}\r\n            </div>\r\n        </div>\r\n\r\n        return (\r\n            status\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCalendarDates();\r\n    }, []);\r\n    useEffect(() => {\r\n        setState({ ...state, selectedHour: pickupData.selectedHour, pickupDate: pickupData.pickupDate })\r\n    }, [pickupData]);\r\n\r\n    const updatePickupDate = () => {\r\n        onUpdate({ pickupDate: state.pickupDate, selectedHour: state.selectedHour }, 'pickup');\r\n    }\r\n    return (\r\n        <Row>\r\n\r\n            <Col md={12}>\r\n                <div className=\"p-1 p-md-2 \" >\r\n                    <Calendar fullscreen={false} dateFullCellRender={dateCellRender} onSelect={dateSelect} />\r\n                </div>\r\n            </Col>\r\n            <Col md={12}> <div className=\"p-1 p-md-2 p-lg-5\" >\r\n\r\n                {state.pickupDate ?\r\n                    <div>\r\n\r\n                        <Divider orientation=\"left\" >{intl.formatMessage({ id: 'text.selectedDateIs' })}<span style={{ color: \"#4b64e8\" }}>{state.pickupDate}</span></Divider>\r\n                        <h5>{intl.formatMessage({ id: 'text.chooseTimeForPickup' })}</h5>\r\n                        {\r\n                            state.selectedHour ?\r\n                                <TimePicker.RangePicker className='mt-2'\r\n                                    minuteStep={10} onChange={onSelectHour}\r\n                                    format={\"h:mm a\"}\r\n                                    defaultValue={[\r\n                                        moment(state.selectedHour.from, \"h:mm a\"), moment(state.selectedHour.to, \"h:mm a\")\r\n                                    ]}\r\n                                /> : \"\"\r\n                        }\r\n                        <Button className='ml-md-2 ml-lg-4 mt-2' type=\"primary\" onClick={updatePickupDate} loading={loading}>\r\n                            {intl.formatMessage({ id: 'text.update' })}                        </Button>\r\n                        <Divider orientation=\"left\" ></Divider>\r\n                        <h5>{intl.formatMessage({ id: 'text.availablePickupHoursFor' })} <span style={{ color: \"#4b64e8\" }}>{state.pickupDate}</span></h5>\r\n                        <div >\r\n                            {availableHours.length > 0 ? availableHours : <Empty description={intl.formatMessage({ id: 'text.noAvailableHours' })} />}\r\n                        </div>\r\n                    </div>\r\n\r\n                    : \"\"\r\n                } </div></Col>\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ calendar }) => {\r\n    const { dates } = calendar;\r\n    return {\r\n        dates\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    getCalendarDates\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(BookingPickupDate))\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\bookingPickup.js",["961","962","963"],"import React, { useState } from 'react'\r\nimport {\r\n    Form, Input,\r\n    Image, Tabs, Col, Row, Button\r\n} from 'antd';\r\nimport GoogleMapLocation from '../create/googleMapLocation';\r\nimport { rulesPickup } from '../create/rules';\r\nimport { injectIntl } from 'react-intl'\r\n\r\nconst layout = {\r\n    labelCol: { span: 24 },\r\n    wrapperCol: { span: 24 },\r\n};\r\nconst BookingPickup = ({ intl, loading, bookingData, onUpdate }) => {\r\n    const [details, setDetails] = useState({});\r\n\r\n    const formFields = [];\r\n    Object.keys(bookingData.pickup).forEach(item => {\r\n        formFields.push({\r\n            name: [item],\r\n            value: bookingData.pickup[item]\r\n        })\r\n    });\r\n\r\n    const onFormFinish = (values) => {\r\n        onUpdate({ ...details, ...values }, 'pickup');\r\n\r\n    }\r\n    const onMarkerDragEnd = (location) => {\r\n        setDetails({ latitude: location.lat(), longitude: location.lng() });\r\n    }\r\n\r\n\r\n    return (\r\n        <> <Row justify=\"space-around\">\r\n\r\n            <Col sm={24} xs={24} md={12} lg={8}>\r\n                <Form layout=\"horizontal\" onFinish={onFormFinish} name=\"pickupDetails\" fields={formFields}>\r\n                    <Form.Item name=\"name\" label={intl.formatMessage({ id: 'text.name' })} rules={rulesPickup.name}>\r\n                        <Input placeholder={intl.formatMessage({ id: 'text.name' })} className=\" m-0\" />\r\n                    </Form.Item>\r\n                    <Row>\r\n                        <Col sm={16}>\r\n                            <Form.Item name=\"location\" label={intl.formatMessage({ id: 'text.location' })} rules={rulesPickup.location} >\r\n                                <Input placeholder={intl.formatMessage({ id: 'text.address' })} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col sm={8}><Form.Item name=\"zip\" className=\"pl-1\" label={intl.formatMessage({ id: 'text.zip' })} rules={rulesPickup.zip} >\r\n                            <Input placeholder={intl.formatMessage({ id: 'text.zip' })} />\r\n                        </Form.Item></Col>\r\n                    </Row>\r\n\r\n\r\n                    {\r\n                        bookingData.pickup ?\r\n                            <GoogleMapLocation longitude={bookingData.pickup.longitude} latitude={bookingData.pickup.latitude} onMarkerDragEnd={onMarkerDragEnd} />\r\n                            : \"\"\r\n                    }\r\n                    <Form.Item name=\"phone\" label={intl.formatMessage({ id: 'text.phone' })} rules={rulesPickup.phone}>\r\n                        <Input placeholder={intl.formatMessage({ id: 'text.phone' })} />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"title\" label={intl.formatMessage({ id: 'text.title' })} rules={rulesPickup.title}>\r\n                        <Input placeholder={intl.formatMessage({ id: 'text.title' })} />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"price\" label={intl.formatMessage({ id: 'text.price' })}>\r\n                        <Input placeholder={intl.formatMessage({ id: 'text.price' })} />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n                            {intl.formatMessage({ id: 'text.update' })}\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default injectIntl(BookingPickup);","D:\\React\\1-25\\front\\src\\views\\auth-views\\components\\LoginForm.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\index.js",["964"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Calendars from './Calendar';\r\nexport const MyCalendar = ({ }) => {\r\n    return (\r\n        <Calendars />\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCalendar)\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\adminList.js",["965","966","967","968","969","970","971","972","973","974","975","976"],"D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\clientList.js",["977","978","979","980","981","982","983","984","985","986"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Row, Col, Tooltip, Tag, Menu, Card, Modal, Alert } from 'antd';\r\nimport { PlusOutlined, ClockCircleTwoTone, CalendarOutlined } from '@ant-design/icons';\r\nimport { STATUS_COLORS } from 'constants/ThemeConstant';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\nimport BookingService from 'services/BookingService';\r\nimport { deleteBooking, hideBookingListMessage, getBookings } from \"redux/actions/Booking\";\r\nimport { motion } from 'framer-motion';\r\nimport { injectIntl } from 'react-intl';\r\nconst ItemAction = injectIntl(({ intl, id, onDeleteBooking }) => {\r\n\treturn <EllipsisDropdown\r\n\t\tmenu={\r\n\t\t\t<Menu>\r\n\r\n\t\t\t\t<Menu.Item key=\"0\"><Link to={`./bookings-list/${id}`}>\r\n\t\t\t\t\t<span>{intl.formatMessage({ id: 'text.view' })}</span></Link>\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t<Menu.Divider />\r\n\t\t\t\t<Menu.Item key=\"2\" onClick={() => onDeleteBooking(id)}>\r\n\t\t\t\t\t<span>{intl.formatMessage({ id: 'text.delete' })}</span>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t</Menu>\r\n\t\t}\r\n\t/>\r\n})\r\n\r\nconst ItemHeader = ({ name, address, ownerName }) => (\r\n\t<div>\r\n\t\t<h4 className=\"mb-0\">{name}</h4>\r\n\t\t<span className=\"text-muted\">{ownerName}</span><br />\r\n\t\t<span className=\"text-muted\">{address}</span>\r\n\t</div>\r\n)\r\n\r\nconst ItemInfo = injectIntl(({ intl, pickupDate, status, address, name, statusColor, selectedHour }) => (\r\n\t<>\r\n\r\n\t\t<Flex alignItems=\"center\" justifyContent=\"between\">\r\n\r\n\t\t\t<div className=\"mr-3 mt-3\">\r\n\t\t\t\t<Tooltip title={intl.formatMessage({ id: 'text.pickupDate2' })}>\r\n\t\t\t\t\t<CalendarOutlined className=\"text-muted font-size-md text-primary\" />\r\n\t\t\t\t\t<span className=\"ml-1 text-muted\">{pickupDate}</span>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Tooltip title={intl.formatMessage({ id: 'text.pickupHours' })}>\r\n\t\t\t\t\t<ClockCircleTwoTone className=\"text-muted font-size-md text-primary\" />\r\n\t\t\t\t\t<span className=\"ml-1 text-muted\">{selectedHour.from} - {selectedHour.to}</span>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mt-3\">\r\n\t\t\t\t<Tag className={statusColor === \"none\" ? 'bg-gray-lightest' : statusColor} >\r\n\r\n\t\t\t\t\t<span className=\"ml-2 font-weight-semibold\">{intl.formatMessage({ id: 'text.' + status })}</span>\r\n\t\t\t\t</Tag>\r\n\t\t\t</div>\r\n\t\t</Flex>\r\n\t</>\r\n))\r\n\r\nconst GridItem = ({ data, removeId, onDeleteBooking }) => (\r\n\t<Card >\r\n\t\t<Flex alignItems=\"center\" justifyContent=\"start\">\r\n\t\t\t<img style={{ width: \"80px\", maxHeight: \"80px\", marginRight: \"10px\", borderRadius: \"10px\" }} src={data.images.length > 0 ? data.images[0] : \"\"} />\r\n\t\t\t<div style={{ flexGrow: 1, padding: \"5px\" }}><Flex alignItems=\"center\" justifyContent=\"between\">\r\n\r\n\t\t\t\t<ItemHeader name={data.pickup.title} ownerName={data.pickup.name} address={data.pickup.location} />\r\n\t\t\t\t<ItemAction id={data.id} removeId={removeId} onDeleteBooking={onDeleteBooking} />\r\n\t\t\t</Flex>\r\n\t\t\t</div>\r\n\t\t</Flex>\r\n\t\t<div className=\"mt-2\">\r\n\t\t\t<ItemInfo\r\n\t\t\t\tpickupDate={data.pickup.pickupDate}\r\n\t\t\t\tselectedHour={data.pickup.selectedHour}\r\n\t\t\t\tstatus={data.status || \"Recieved\"}\r\n\t\t\t\tstatusColor={STATUS_COLORS[\"COLOR_\" + data.status]}\r\n\r\n\t\t\t/>\r\n\t\t</div>\r\n\r\n\t</Card>\r\n)\r\n\r\n\r\nconst ClientBookingList = ({ intl, results: list, deleteBooking, showMessage, success, message, hideBookingListMessage, loading, getBookings, totalResults }) => {\r\n\r\n\tconst [query, setQuery] = useState({ sortBy: \"Submitted\", sortType: \"Desc\" });\r\n\tconst [state, setState] = useState({\r\n\t\tsubmitConfirmVisible: false\r\n\t});\r\n\r\n\r\n\tuseEffect(async () => {\r\n\t\tgetBookings(query);\r\n\t}, [query]);\r\n\r\n\tconst onDeleteBooking = (id) => {\r\n\t\tconst booking = list.find(item => item.id == id);\r\n\t\tsetState({ ...state, selectedBooking: booking, submitConfirmVisible: true });\r\n\t}\r\n\tconst onSubmitConfirm = (value) => {\r\n\t\tif (value == \"ok\") {\r\n\t\t\tdeleteBooking({ id: state.selectedBooking.id });\r\n\t\t}\r\n\t\tsetState({ ...state, submitConfirmVisible: false });\r\n\t}\r\n\tuseEffect(async () => {\r\n\t\tif (showMessage)\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\thideBookingListMessage();\r\n\t\t\t}, 4000);\r\n\t}, [showMessage])\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<Flex justifyContent=\"between\" alignItems=\"center\" className=\"py-4\">\r\n\t\t\t\t\t<h2>{intl.formatMessage({ id: 'text.bookings' })}</h2>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Link to={\"./bookings-create\"}>\r\n\t\t\t\t\t\t\t<Button type=\"primary\" className=\"ml-2\">\r\n\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t<span>{intl.formatMessage({ id: 'text.new' })}</span>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={`my-4 container-fluid`}>\r\n\t\t\t\t{showMessage ?\r\n\t\t\t\t\t<motion.div\r\n\t\t\t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }}\r\n\t\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\t\topacity: showMessage ? 1 : 0,\r\n\t\t\t\t\t\t\tmarginBottom: showMessage ? 20 : 0\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Alert type={success == true ? \"success\" : \"error\"} showIcon message={message}></Alert>\r\n\t\t\t\t\t</motion.div>\r\n\t\t\t\t\t: \"\"}\r\n\t\t\t\t{\r\n\t\t\t\t\t<Row gutter={16}>\r\n\t\t\t\t\t\t{list ?\r\n\t\t\t\t\t\t\tlist.map(elm => (\r\n\t\t\t\t\t\t\t\t<Col xs={24} sm={24} lg={8} xl={8} xxl={6} key={elm.id}>\r\n\t\t\t\t\t\t\t\t\t<GridItem data={elm} onDeleteBooking={onDeleteBooking} />\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t)) : \"\"}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Booking\"\r\n\t\t\t\tvisible={state.submitConfirmVisible}\r\n\t\t\t\tonOk={() => { onSubmitConfirm(\"ok\") }}\r\n\t\t\t\tonCancel={() => { onSubmitConfirm(\"cancel\") }}\r\n\t\t\t\tokText=\"Delete\"\r\n\t\t\t\tcancelText=\"Cancel\"\t\t\t>\r\n\t\t\t\t<p>{intl.formatMessage({ id: 'text.delete' })}?</p>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ bookingList }) => {\r\n\tconst { loading, success, message, showMessage, results, totalResults } = bookingList;\r\n\treturn {\r\n\t\tloading, success, message, showMessage, results, totalResults\r\n\t}\r\n}\r\n\r\nconst mapActionsToProps = {\r\n\tdeleteBooking, hideBookingListMessage, getBookings\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(injectIntl(ClientBookingList));\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\accounts\\list\\userSecurity.js",["987","988","989","990","991","992","993","994","995"],"import { useState, useEffect } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { motion } from 'framer-motion';\r\nimport { UserProfileRules } from 'constants/RulesContant';\r\nimport { Alert, Form, Input, Button, Row, Col, Select } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport UserService from \"services/UserService\";\r\nimport { hideAuthMessage } from \"redux/actions/Auth\";\r\nimport Item from \"views/app-views/components/navigation/dropdown/Item\";\r\nimport { injectIntl } from 'react-intl'\r\n\r\nconst UserSecurity = ({ message, userId = 0, onUpdate, intl }) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const [state, setState] = useState({\r\n        loading: false, message: \"\", showMessage: false, error: false\r\n    });\r\n    const onFormFinish = async (values) => {\r\n        delete values.confirm;\r\n        onUpdate(values);\r\n    }\r\n    const hideMessage = () => {\r\n        setTimeout(() => {\r\n            setState({ ...state, showMessage: false, error: false, message: \"\" });\r\n        }, 2000);\r\n    }\r\n    const showMessage = (message) => {\r\n        setState({ ...state, showMessage: true, error: true, message: message });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n                <Row justify=\"space-around\">\r\n\r\n                    <Col sm={24} xs={24} md={12} lg={8}>\r\n                        {\r\n                            state.showMessage ? <motion.div\r\n                                initial={{ opacity: 0, marginBottom: 0 }}\r\n                                animate={{\r\n                                    opacity: state.showMessage ? 1 : 0,\r\n                                    marginBottom: state.showMessage ? 20 : 0\r\n                                }}>\r\n                                <Alert type={state.error ? \"error\" : \"success\"} showIcon message={state.message}></Alert>\r\n                            </motion.div> : \"\"\r\n                        }\r\n\r\n                        <Form layout=\"vertical\" name=\"register-form\" onFinish={onFormFinish}>\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                label={intl.formatMessage({ id: 'text.password' })}\r\n                                rules={UserProfileRules.password}\r\n                                hasFeedback\r\n                            >\r\n                                <Input prefix={<LockOutlined className=\"text-primary\" />} />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"confirm\"\r\n                                label={intl.formatMessage({ id: 'text.confirmPassword' })}\r\n                                rules={UserProfileRules.confirm}\r\n                                hasFeedback\r\n                            >\r\n                                <Input prefix={<LockOutlined className=\"text-primary\" />} />\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" block loading={state.loading}>\r\n                                    {intl.formatMessage({ id: 'text.update' })}\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(UserSecurity))\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\accounts\\list\\userBooking.js",["996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015"],"D:\\React\\1-25\\front\\src\\views\\app-views\\accounts\\list\\userProfile.js",["1016","1017","1018","1019","1020","1021","1022","1023","1024","1025"],"import { useState, useEffect } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { motion } from 'framer-motion';\r\nimport { UserProfileRules } from 'constants/RulesContant';\r\nimport { Alert, Form, Input, Button, Row, Col, Select } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport UserService from \"services/UserService\";\r\nimport { hideAuthMessage } from \"redux/actions/Auth\";\r\nimport Item from \"views/app-views/components/navigation/dropdown/Item\";\r\nimport user from \"redux/reducers/User\";\r\nimport IntlMessage from \"components/util-components/IntlMessage\";\r\nimport { injectIntl } from 'react-intl'\r\nconst UserProfile = ({ loading, message, userId = 0, userData, onUpdate, intl }) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const [state, setState] = useState({\r\n        loading: false, message: \"\", showMessage: false, error: false\r\n    });\r\n\r\n    const hideMessage = () => {\r\n        setTimeout(() => {\r\n            setState({ ...state, showMessage: false, error: false, message: \"\" });\r\n        }, 2000);\r\n    }\r\n    const showMessage = (message) => {\r\n        setState({ ...state, showMessage: true, error: true, message: message });\r\n    }\r\n\r\n\r\n    const formFields = [];\r\n    Object.keys(userData).forEach(item => {\r\n        formFields.push({\r\n            name: [item],\r\n            value: userData[item]\r\n        })\r\n    })\r\n\r\n    const onFormFinish = (values) => {\r\n        onUpdate(values);\r\n    }\r\n    return (\r\n        <div>\r\n            <>\r\n                <Row justify=\"space-around\">\r\n\r\n                    <Col sm={24} xs={24} md={12} lg={8}>\r\n                        {\r\n                            state.showMessage ? <motion.div\r\n                                initial={{ opacity: 0, marginBottom: 0 }}\r\n                                animate={{\r\n                                    opacity: state.showMessage ? 1 : 0,\r\n                                    marginBottom: state.showMessage ? 20 : 0\r\n                                }}>\r\n                                <Alert type={state.error ? \"error\" : \"success\"} showIcon message={state.message}></Alert>\r\n                            </motion.div> : \"\"\r\n                        }\r\n\r\n                        <Form layout=\"vertical\" name=\"register-form\" onFinish={onFormFinish} fields={formFields}>\r\n                            <Form.Item\r\n                                name=\"name\"\r\n                                label={intl.formatMessage({ id: 'text.name' })}\r\n                                rules={UserProfileRules.name}\r\n                                hasFeedback\r\n\r\n\r\n                            >\r\n                                <Input prefix={<MailOutlined className=\"text-primary\" />} />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"email\"\r\n                                label={intl.formatMessage({ id: 'text.email' })}\r\n                                rules={UserProfileRules.email}\r\n                                hasFeedback\r\n                            >\r\n                                <Input prefix={<MailOutlined className=\"text-primary\" />} />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"status\"\r\n                                label={intl.formatMessage({ id: 'text.status' })}\r\n\r\n                                hasFeedback\r\n                            >\r\n                                <Select\r\n\r\n                                    showArrow\r\n                                    size=\"small\"\r\n                                    options={[\r\n                                        { label: \"Active\", value: \"Active\" },\r\n                                        { label: \"Blocked\", value: \"Blocked\" }\r\n                                    ]}\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"role\"\r\n                                label={intl.formatMessage({ id: 'text.role' })}\r\n\r\n                                hasFeedback\r\n                            >\r\n                                <Select\r\n\r\n                                    showArrow\r\n                                    size=\"small\"\r\n                                    options={[\r\n                                        { label: \"Admin\", value: \"admin\" },\r\n                                        { label: \"Client\", value: \"client\" }\r\n                                    ]}\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"isEmailVerified\"\r\n                                label={intl.formatMessage({ id: 'text.emailVerified' })}\r\n\r\n                                hasFeedback\r\n                            >\r\n                                <Select\r\n\r\n                                    showArrow\r\n                                    size=\"small\"\r\n                                    options={[\r\n                                        { label: \"Yes\", value: true },\r\n                                        { label: \"No\", value: false }\r\n                                    ]}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n                                    {intl.formatMessage({ id: 'text.update' })}\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(injectIntl(UserProfile)))\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\rules.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\googleMapLocation.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\Calendar.js",["1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041"],"import React, { useState, lazy, Suspense } from 'react';\r\nimport { Row, Col, Skeleton } from 'antd';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport CalenDar from 'react-calendar';\r\nimport { Link, Switch, Route, useRouteMatch } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Aside, CalendarWrapper } from './Style';\r\nimport { ShareButtonPageHeader } from './components/buttons/share-button/share-button';\r\nimport { ExportButtonPageHeader } from './components/buttons/export-button/export-button';\r\nimport { CalendarButtonPageHeader } from './components/buttons/calendar-button/calendar-button';\r\nimport { Main } from '../styled';\r\nimport { Button } from './components/buttons/buttons';\r\n\r\nimport { Cards } from './components/cards/frame/cards-frame';\r\nimport { PageHeader } from './components/page-headers/page-headers';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { eventVisible, addNewEvents } from 'redux/calendar/actionCreator';\r\nconst YearCalendar = lazy(() => import('./overview/Year'));\r\nconst MonthCalendar = lazy(() => import('./overview/Month'));\r\nconst WeekCalendar = lazy(() => import('./overview/Week'));\r\nconst DayCalendar = lazy(() => import('./overview/Day'));\r\nconst TodayCalendar = lazy(() => import('./overview/Today'));\r\nconst ScheduleCalendar = lazy(() => import('./overview/Schedule'));\r\n\r\nconst Calendars = () => {\r\n  const dispatch = useDispatch();\r\n  const { events, isVisible } = { events: [], isVisible: true }\r\n  /* useSelector(state => {\r\n    return {\r\n      events: state.Calender.events,\r\n      isVisible: state.Calender.eventVisible,\r\n    };\r\n  });\r\n*/\r\n  const { path } = useRouteMatch();\r\n  const [state, setState] = useState({\r\n    date: new Date(),\r\n    visible: false,\r\n  });\r\n\r\n  const onChange = date => setState({ date });\r\n\r\n  const onHandleVisible = () => {\r\n    dispatch(eventVisible(!isVisible));\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n\r\n      <CalendarWrapper>\r\n        <Row>\r\n\r\n          <Col xs={24}>\r\n            <Switch>\r\n              <Suspense\r\n                fallback={\r\n                  <Cards headless>\r\n                    <Skeleton paragraph={{ rows: 15 }} active />\r\n                  </Cards>\r\n                }\r\n              >\r\n                <Route path={`${path}/year`} component={YearCalendar} />\r\n                <Route path={`${path}/month`} component={MonthCalendar} />\r\n                <Route path={`${path}/week`} component={WeekCalendar} />\r\n                <Route path={`${path}/day`} component={DayCalendar} />\r\n                <Route path={`${path}/today`} component={TodayCalendar} />\r\n                <Route path={`${path}/schedule`} component={ScheduleCalendar} />\r\n              </Suspense>\r\n            </Switch>\r\n          </Col>\r\n        </Row>\r\n      </CalendarWrapper>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calendars;\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\list\\bookingDetails.js",["1042","1043","1044","1045","1046"],"D:\\React\\1-25\\front\\src\\constants\\ChartConstant.js",[],"D:\\React\\1-25\\front\\src\\assets\\svg\\icon.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\Schedule.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\Today.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\Day.js",["1047"],"import React, { useState, useLayoutEffect } from 'react';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport CalenDar from 'react-calendar';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport AddNewEvent from './AddNewEvent';\r\nimport ProjectUpdate from './ProjectUpdate';\r\nimport { Cards } from '../components/cards/frame/cards-frame';\r\nimport { Button } from '../components/buttons/buttons';\r\nimport './style.css';\r\nimport { eventVisible, addNewEvents, calendarDeleteData } from 'redux/calendar/actionCreator';\r\nimport { Modal } from '../components/modals/antd-modals';\r\nimport { Dropdown } from '../components/dropdown/dropdown';\r\n\r\nconst DayCalendar = () => {\r\n  const dispatch = useDispatch();\r\n  const { events, isVisible } = { events: [], isVisible: false }\r\n  /* useSelector(state => {\r\n    return {\r\n      events: state.Calender.events,\r\n      isVisible: state.Calender.eventVisible,\r\n    };\r\n  });\r\n*/\r\n  const [state, setState] = useState({\r\n    date: new Date(),\r\n    container: null,\r\n    currentLabel: moment().format('MMMM YYYY'),\r\n    defaultValue: moment().format('YYYY-MM-DD'),\r\n  });\r\n\r\n  const { date, container, currentLabel, defaultValue } = state;\r\n\r\n  useLayoutEffect(() => {\r\n    const button = document.querySelector(\r\n      '.calendar-header__left .react-calendar__navigation .react-calendar__navigation__label',\r\n    );\r\n    const containers = document.querySelector('.calendar-header__left .react-calendar__viewContainer');\r\n    const calenderDom = document.querySelectorAll('.ant-picker-calendar-date-content');\r\n    calenderDom.forEach(element => {\r\n      element.addEventListener('click', e => {\r\n        if (e.target.classList[0] === 'ant-picker-calendar-date-content') {\r\n          setState({\r\n            container: containers,\r\n            date,\r\n            currentLabel,\r\n            defaultValue,\r\n          });\r\n\r\n          dispatch(eventVisible(true));\r\n        }\r\n      });\r\n    });\r\n    button.addEventListener('click', () => containers.classList.add('show'));\r\n\r\n    setState({\r\n      container: containers,\r\n      defaultValue,\r\n      date,\r\n      currentLabel,\r\n    });\r\n  }, [date, currentLabel, defaultValue, dispatch]);\r\n\r\n  const onChange = dt => setState({ ...state, date: dt, defaultValue: moment(dt).format('YYYY-MM-DD') });\r\n\r\n  const onEventDelete = id => {\r\n    const data = events.filter(item => item.id !== id);\r\n    dispatch(calendarDeleteData(data));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    dispatch(eventVisible(false));\r\n  };\r\n\r\n  const addNew = event => {\r\n    const arrayData = [];\r\n    events.map(data => {\r\n      return arrayData.push(data.id);\r\n    });\r\n    const max = Math.max(...arrayData);\r\n    dispatch(addNewEvents([...events, { ...event, id: max + 1 }]));\r\n    dispatch(eventVisible(false));\r\n  };\r\n\r\n  const eventTimes = [\r\n    '12 AM',\r\n    '1 AM',\r\n    '2 AM',\r\n    '3 AM',\r\n    '4 AM',\r\n    '5 AM',\r\n    '6 AM',\r\n    '7 AM',\r\n    '8 AM',\r\n    '9 AM',\r\n    '10 AM',\r\n    '11 AM',\r\n    '12 PM',\r\n    '1 PM',\r\n    '2 PM',\r\n    '3 PM',\r\n    '4 PM',\r\n    '5 PM',\r\n    '6 PM',\r\n    '7 PM',\r\n    '8 PM',\r\n    '9 PM',\r\n    '10 PM',\r\n    '11 PM',\r\n  ];\r\n\r\n  return (\r\n    <Cards headless>\r\n      <Modal\r\n        className=\"addEvent-modal\"\r\n        footer={null}\r\n        type=\"primary\"\r\n        title=\"Create Event\"\r\n        visible={isVisible}\r\n        onCancel={handleCancel}\r\n      >\r\n        <AddNewEvent onHandleAddEvent={addNew} defaultValue={defaultValue} />\r\n      </Modal>\r\n      <div className=\"calendar-header\">\r\n        <div className=\"calendar-header__left\">\r\n          <Button className=\"btn-today\" size=\"small\" >\r\n            <NavLink to=\"./day\">Today</NavLink>\r\n          </Button>\r\n          <CalenDar\r\n            onClickDay={() => {\r\n              container.classList.remove('show');\r\n            }}\r\n            onActiveStartDateChange={({ activeStartDate }) =>\r\n              setState({\r\n                ...state,\r\n                currentLabel: moment(activeStartDate).format('MMMM YYYY'),\r\n                defaultValue: moment(activeStartDate).format('YYYY-MM-DD'),\r\n              })\r\n            }\r\n            next2Label={null}\r\n            prev2Label={null}\r\n            nextLabel={<FeatherIcon icon=\"chevron-right\" />}\r\n            prevLabel={<FeatherIcon icon=\"chevron-left\" />}\r\n            onChange={onChange}\r\n            navigationLabel={() => `${moment(defaultValue).format('MMMM DD, YYYY')}`}\r\n            value={state.date}\r\n          />\r\n        </div>\r\n        <div className=\"calendar-header__right\">\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"./day\">Day</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"./week\">Week</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"./month\">Month</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"./year\">Year</NavLink>\r\n            </li>\r\n          </ul>\r\n          <NavLink className=\"schedule-list\" to=\"./schedule\">\r\n            <FeatherIcon icon=\"list\" />\r\n            Schedule\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n      <table className=\"table-event\" width=\"100%\">\r\n        <thead>\r\n          <tr>\r\n            <th>&nbsp;</th>\r\n            <th>\r\n              <p>{moment(defaultValue).format('dddd')}</p>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {eventTimes.map((time, key) => {\r\n            return (\r\n              <tr key={key + 1}>\r\n                <td style={{ width: '60px' }}>{time}</td>\r\n                <td\r\n                  className={`ant-picker-calendar-date-content ${moment().format('h A') === time ? 'current-data' : null\r\n                    }`}\r\n                >\r\n                  {moment().format('h A') === time ? <span className=\"currentTime secondary\" /> : null}\r\n\r\n                  {events.map(\r\n                    event =>\r\n                      moment(defaultValue).format('MM/DD/YYYY') === event.date[0] &&\r\n                      time === moment(event.time[0], 'h:mm a').format('h A') && (\r\n                        <Dropdown\r\n                          className=\"event-dropdown\"\r\n                          key={event.id}\r\n                          style={{ padding: 0 }}\r\n                          placement=\"bottomLeft\"\r\n                          content={<ProjectUpdate onEventDelete={onEventDelete} {...event} />}\r\n                          action={['click']}\r\n                        >\r\n                          <Link to=\"#\" className={`${event.label} day-event-item`}>\r\n                            <span className=\"event-title\">{event.title}</span>\r\n                            <span>{`${event.time[0]} - ${event.time[1]}`}</span>\r\n                          </Link>\r\n                        </Dropdown>\r\n                      ),\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </Cards>\r\n  );\r\n};\r\n\r\nexport default DayCalendar;\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\Month.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\Week.js",["1048","1049"],"import React, { useState, useLayoutEffect } from 'react';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Select, Card } from 'antd';\r\nimport AddNewEvent from './AddNewEvent';\r\nimport ProjectUpdate from './ProjectUpdate';\r\nimport { Cards } from '../components/cards/frame/cards-frame';\r\nimport { Button } from '../components/buttons/buttons';\r\nimport './style.css';\r\nimport { eventVisible, addNewEvents, calendarDeleteData } from 'redux/calendar/actionCreator';\r\nimport { Modal } from '../components/modals/antd-modals';\r\nimport { Dropdown } from '../components/dropdown/dropdown';\r\n\r\nconst WeekCalendar = () => {\r\n  const dispatch = useDispatch();\r\n  const { events, isVisible } = { events: [], isVisible: false }\r\n  /* useSelector(state => {\r\n    return {\r\n      events: state.Calender.events,\r\n      isVisible: state.Calender.eventVisible,\r\n    };\r\n  });\r\n*/\r\n  const [state, setState] = useState({\r\n    currentWeek: moment().week(),\r\n    maxWeek: moment('12-31-2020', 'MM-DD-YYYY').isoWeek(),\r\n    minWeek: 1,\r\n    year: 2020,\r\n    defaultValue: moment().format('YYYY-MM-DD'),\r\n  });\r\n\r\n  const { currentWeek, maxWeek, minWeek, defaultValue, year } = state;\r\n\r\n  useLayoutEffect(() => {\r\n    const calenderDom = document.querySelectorAll('.ant-picker-calendar-date-content');\r\n    calenderDom.forEach(element => {\r\n      element.addEventListener('click', e => {\r\n        if (e.target.classList[0] === 'ant-picker-calendar-date-content') {\r\n          const getDate = moment(e.currentTarget.getAttribute('title')).format('YYYY-MM-DD');\r\n          setState({\r\n            defaultValue: getDate,\r\n            currentWeek,\r\n            maxWeek,\r\n            minWeek,\r\n            year,\r\n          });\r\n          dispatch(eventVisible(true));\r\n        }\r\n      });\r\n    });\r\n    setState({\r\n      currentWeek,\r\n      maxWeek,\r\n      minWeek,\r\n      defaultValue,\r\n      year,\r\n    });\r\n  }, [currentWeek, maxWeek, minWeek, defaultValue, year, dispatch]);\r\n\r\n  const onIncrement = () => {\r\n    return currentWeek < maxWeek\r\n      ? setState({\r\n        ...state,\r\n        currentWeek: currentWeek + 1,\r\n      })\r\n      : setState({\r\n        ...state,\r\n        year: year + 1,\r\n        currentWeek: 1,\r\n      });\r\n  };\r\n\r\n  const onDecrement = () => {\r\n    return currentWeek > minWeek\r\n      ? setState({\r\n        ...state,\r\n        currentWeek: currentWeek - 1,\r\n      })\r\n      : setState({\r\n        ...state,\r\n        year: year - 1,\r\n        currentWeek: maxWeek,\r\n      });\r\n  };\r\n\r\n  const option = [];\r\n  for (let i = minWeek; i <= maxWeek; i += 1) {\r\n    option.push(\r\n      <Select.Option key={i} value={i}>\r\n        {i}\r\n      </Select.Option>,\r\n    );\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    dispatch(eventVisible(false));\r\n  };\r\n\r\n  const addNew = event => {\r\n    const arrayData = [];\r\n    events.map(data => {\r\n      return arrayData.push(data.id);\r\n    });\r\n    const max = Math.max(...arrayData);\r\n    dispatch(addNewEvents([...events, { ...event, id: max + 1 }]));\r\n    dispatch(eventVisible(false));\r\n  };\r\n\r\n  const maximumDate = () => {\r\n    return parseInt(\r\n      moment(\r\n        moment()\r\n          .day('Sunday')\r\n          .year(year)\r\n          .week(currentWeek)\r\n          .toDate(),\r\n      ).format('DD'),\r\n      10,\r\n    ) +\r\n      6 <=\r\n      moment(\r\n        moment()\r\n          .day('Sunday')\r\n          .year(year)\r\n          .week(currentWeek)\r\n          .toDate(),\r\n      ).daysInMonth()\r\n      ? parseInt(\r\n        moment(\r\n          moment()\r\n            .day('Sunday')\r\n            .year(year)\r\n            .week(currentWeek)\r\n            .toDate(),\r\n        ).format('DD'),\r\n        10,\r\n      ) + 6\r\n      : parseInt(\r\n        moment(\r\n          moment()\r\n            .day('Sunday')\r\n            .year(year)\r\n            .week(currentWeek)\r\n            .toDate(),\r\n        ).format('DD'),\r\n        10,\r\n      ) +\r\n      6 -\r\n      parseInt(\r\n        moment(\r\n          moment()\r\n            .day('Sunday')\r\n            .year(year)\r\n            .week(currentWeek)\r\n            .toDate(),\r\n        ).daysInMonth(),\r\n        10,\r\n      );\r\n  };\r\n\r\n  const daysOfMonth = moment(\r\n    moment()\r\n      .day('Sunday')\r\n      .year(year)\r\n      .week(currentWeek)\r\n      .toDate(),\r\n  ).daysInMonth();\r\n\r\n  const minimumDate = () => {\r\n    return parseInt(\r\n      moment(\r\n        moment()\r\n          .day('Sunday')\r\n          .year(year)\r\n          .week(currentWeek)\r\n          .toDate(),\r\n      ).format('DD'),\r\n      10,\r\n    );\r\n  };\r\n\r\n  const daysOfWeek = () => {\r\n    const days = [];\r\n    if (minimumDate() + 6 <= daysOfMonth) {\r\n      for (let i = minimumDate(); i <= maximumDate(); i += 1) {\r\n        days.push(\r\n          `${moment(\r\n            moment()\r\n              .day('Sunday')\r\n              .year(year)\r\n              .week(currentWeek)\r\n              .toDate(),\r\n          ).format('MM')}/${i}/${year}`,\r\n        );\r\n      }\r\n    } else {\r\n      for (let i = minimumDate(); i <= daysOfMonth; i += 1) {\r\n        days.push(\r\n          `${moment(\r\n            moment()\r\n              .day('Sunday')\r\n              .year(year)\r\n              .week(currentWeek)\r\n              .toDate(),\r\n          ).format('MM')}/${i}/${year}`,\r\n        );\r\n      }\r\n      for (let j = 1; j <= minimumDate() + 6 - daysOfMonth; j += 1) {\r\n        days.push(\r\n          `${parseInt(\r\n            moment(\r\n              moment()\r\n                .day('Sunday')\r\n                .year(year)\r\n                .week(currentWeek)\r\n                .toDate(),\r\n            ).format('MM'),\r\n            10,\r\n          ) < 12\r\n            ? parseInt(\r\n              moment(\r\n                moment()\r\n                  .day('Sunday')\r\n                  .year(year)\r\n                  .week(currentWeek)\r\n                  .toDate(),\r\n              ).format('MM'),\r\n              10,\r\n            ) + 1\r\n            : 1\r\n          }/${j}/${year}`,\r\n        );\r\n      }\r\n    }\r\n    return days;\r\n  };\r\n\r\n  const eventTimes = [\r\n    '12 AM',\r\n    '1 AM',\r\n    '2 AM',\r\n    '3 AM',\r\n    '4 AM',\r\n    '5 AM',\r\n    '6 AM',\r\n    '7 AM',\r\n    '8 AM',\r\n    '9 AM',\r\n    '10 AM',\r\n    '11 AM',\r\n    '12 PM',\r\n    '1 PM',\r\n    '2 PM',\r\n    '3 PM',\r\n    '4 PM',\r\n    '5 PM',\r\n    '6 PM',\r\n    '7 PM',\r\n    '8 PM',\r\n    '9 PM',\r\n    '10 PM',\r\n    '11 PM',\r\n  ];\r\n\r\n  const onEventDelete = id => {\r\n    const data = events.filter(item => item.id !== id);\r\n    dispatch(calendarDeleteData(data));\r\n  };\r\n\r\n  return (\r\n    <Card className=\"m-2 mt-4\" >\r\n      <Modal\r\n        className=\"addEvent-modal\"\r\n        footer={null}\r\n        type=\"primary\"\r\n        title=\"Create Event\"\r\n        visible={isVisible}\r\n        onCancel={handleCancel}\r\n      >\r\n        <AddNewEvent onHandleAddEvent={addNew} defaultValue={defaultValue} />\r\n      </Modal>\r\n      <div className=\"calendar-header\">\r\n        <div className=\"calendar-header__left\">\r\n          <Button className=\"btn-today\" size=\"small\" type=\"white\" outlined>\r\n            <NavLink to=\"./today\">Today</NavLink>\r\n          </Button>\r\n          <div className=\"calender-head__navigation\">\r\n            <Button onClick={onDecrement} className=\"btn-navigate\" type=\"white\" outlined>\r\n              <FeatherIcon icon=\"chevron-left\" />\r\n            </Button>\r\n            <span className=\"date-label\">\r\n              {`${moment(\r\n                moment()\r\n                  .day('Sunday')\r\n                  .year(year)\r\n                  .week(currentWeek)\r\n                  .toDate(),\r\n              ).format('MMM DD')} - ${parseInt(\r\n                moment(\r\n                  moment()\r\n                    .day('Sunday')\r\n                    .year('2020')\r\n                    .week(currentWeek)\r\n                    .toDate(),\r\n                ).format('DD'),\r\n                10,\r\n              ) +\r\n                6 <=\r\n                moment(\r\n                  moment()\r\n                    .day('Sunday')\r\n                    .year('2020')\r\n                    .week(currentWeek)\r\n                    .toDate(),\r\n                ).daysInMonth()\r\n                ? moment(\r\n                  moment()\r\n                    .day('Sunday')\r\n                    .year(year)\r\n                    .week(currentWeek)\r\n                    .toDate(),\r\n                ).format('MMM')\r\n                : moment(\r\n                  moment()\r\n                    .day('Sunday')\r\n                    .year(year)\r\n                    .week(currentWeek + 1)\r\n                    .toDate(),\r\n                ).format('MMM')\r\n                } ${parseInt(\r\n                  moment(\r\n                    moment()\r\n                      .day('Sunday')\r\n                      .year(year)\r\n                      .week(currentWeek)\r\n                      .toDate(),\r\n                  ).format('DD'),\r\n                  10,\r\n                ) +\r\n                  6 <=\r\n                  moment(\r\n                    moment()\r\n                      .day('Sunday')\r\n                      .year(year)\r\n                      .week(currentWeek)\r\n                      .toDate(),\r\n                  ).daysInMonth()\r\n                  ? parseInt(\r\n                    moment(\r\n                      moment()\r\n                        .day('Sunday')\r\n                        .year(year)\r\n                        .week(currentWeek)\r\n                        .toDate(),\r\n                    ).format('DD'),\r\n                    10,\r\n                  ) + 6\r\n                  : parseInt(\r\n                    moment(\r\n                      moment()\r\n                        .day('Sunday')\r\n                        .year(year)\r\n                        .week(currentWeek)\r\n                        .toDate(),\r\n                    ).format('DD'),\r\n                    10,\r\n                  ) +\r\n                  6 -\r\n                  parseInt(\r\n                    moment(\r\n                      moment()\r\n                        .day('Sunday')\r\n                        .year(year)\r\n                        .week(currentWeek)\r\n                        .toDate(),\r\n                    ).daysInMonth(),\r\n                    10,\r\n                  )\r\n                }, ${year}`}\r\n            </span>\r\n            <Button onClick={onIncrement} className=\"btn-navigate\" type=\"white\" outlined>\r\n              <FeatherIcon icon=\"chevron-right\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"calendar-header__right\">\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"./day\">Day</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"./week\">Week</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"./month\">Month</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"./year\">Year</NavLink>\r\n            </li>\r\n          </ul>\r\n          <NavLink className=\"schedule-list\" to=\"./schedule\">\r\n            <FeatherIcon icon=\"list\" />\r\n            Schedule\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n      <table className=\"table-event event-week table-responsive\" width=\"100%\">\r\n        <thead>\r\n          <tr>\r\n            <th>&nbsp;</th>\r\n            {daysOfWeek().map(day => {\r\n              return (\r\n                <th key={day}>\r\n                  <p className=\"week-dayName\">{moment(day).format('dddd')}</p>\r\n                  <p className={moment().format('MM/DD/YYYY') === day ? 'week-date primary' : 'week-date deactivate'}>\r\n                    {moment(day).format('DD MMM')}\r\n                  </p>\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {eventTimes.map(time => {\r\n            return (\r\n              <tr key={time}>\r\n                <td>{time}</td>\r\n                {daysOfWeek().map(day => {\r\n                  return (\r\n                    <td\r\n                      key={day}\r\n                      className={`ant-picker-calendar-date-content ${moment().format('h A') === time && moment().format('MM/DD/YYYY') === day ? 'current-data' : null\r\n                        }`}\r\n                      title={day}\r\n                    >\r\n                      {moment().format('h A') === time && moment().format('MM/DD/YYYY') === day ? (\r\n                        <span className=\"currentTime secondary\" />\r\n                      ) : null}\r\n                      {events.map(\r\n                        event =>\r\n                          day === event.date[0] &&\r\n                          time === moment(event.time[0], 'h:mm a').format('h A') && (\r\n                            <Dropdown\r\n                              className=\"event-dropdown\"\r\n                              key={event.id}\r\n                              style={{ padding: 0 }}\r\n                              placement=\"bottomLeft\"\r\n                              content={<ProjectUpdate onEventDelete={onEventDelete} {...event} />}\r\n                              action={['click']}\r\n                            >\r\n                              <Link to=\"#\" className={`${event.label} day-event-item`}>\r\n                                <span className=\"event-title\">{event.title}</span>\r\n                                <span>{`${event.time[0]} - ${event.time[1]}`}</span>\r\n                              </Link>\r\n                            </Dropdown>\r\n                          ),\r\n                      )}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WeekCalendar;\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\Year.js",["1050"],"import React, { useState, useLayoutEffect } from 'react';\r\nimport { Calendar, Select } from 'antd';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport AddNewEvent from './AddNewEvent';\r\nimport { BlockViewCalendarWrapper } from '../Style';\r\nimport { Cards } from '../components/cards/frame/cards-frame';\r\nimport { Button } from '../components/buttons/buttons';\r\nimport { Modal } from '../components/modals/antd-modals';\r\nimport { eventVisible, addNewEvents } from 'redux/calendar/actionCreator';\r\n\r\nconst YearCalendar = () => {\r\n  const dispatch = useDispatch();\r\n  const { events, isVisible } = { events: [], isVisible: false }\r\n  /* useSelector(state => {\r\n    return {\r\n      events: state.Calender.events,\r\n      isVisible: state.Calender.eventVisible,\r\n    };\r\n  });\r\n*/\r\n  const [state, setState] = useState({\r\n    currentYear: new Date().getFullYear(),\r\n    maxYear: 2025,\r\n    minYear: 2018,\r\n    defaultValue: moment().format('YYYY-MM-DD'),\r\n  });\r\n  const { currentYear, maxYear, minYear, defaultValue } = state;\r\n\r\n  useLayoutEffect(() => {\r\n    const calenderDom = document.querySelectorAll('.ant-picker-calendar-date-content');\r\n    calenderDom.forEach(element => {\r\n      element.addEventListener('click', () => {\r\n        dispatch(eventVisible(true));\r\n      });\r\n    });\r\n  }, [defaultValue, dispatch]);\r\n\r\n  const onIncrement = () => {\r\n    return (\r\n      currentYear < maxYear &&\r\n      setState({\r\n        ...state,\r\n        currentYear: currentYear + 1,\r\n      })\r\n    );\r\n  };\r\n\r\n  const onDecrement = () => {\r\n    return (\r\n      currentYear > minYear &&\r\n      setState({\r\n        ...state,\r\n        currentYear: currentYear - 1,\r\n      })\r\n    );\r\n  };\r\n\r\n  const option = [];\r\n  for (let i = minYear; i <= maxYear; i += 1) {\r\n    option.push(\r\n      <Select.Option key={i} value={i}>\r\n        {i}\r\n      </Select.Option>,\r\n    );\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    dispatch(eventVisible(false));\r\n  };\r\n\r\n  const addNew = event => {\r\n    const arrayData = [];\r\n    events.map(data => {\r\n      return arrayData.push(data.id);\r\n    });\r\n    const max = Math.max(...arrayData);\r\n    dispatch(addNewEvents([...events, { ...event, id: max + 1 }]));\r\n    dispatch(eventVisible(false));\r\n  };\r\n\r\n  return (\r\n    <Cards headless>\r\n      <Modal\r\n        className=\"addEvent-modal\"\r\n        footer={null}\r\n        type=\"primary\"\r\n        title=\"Create Event\"\r\n        visible={isVisible}\r\n        onCancel={handleCancel}\r\n      >\r\n        <AddNewEvent onHandleAddEvent={addNew} defaultValue={defaultValue} />\r\n      </Modal>\r\n      <div className=\"calendar-header\">\r\n        <div className=\"calendar-header__left\">\r\n          <Button className=\"btn-today\" type=\"white\" outlined>\r\n            <NavLink to=\"./day\">Today</NavLink>\r\n          </Button>\r\n          <div className=\"calender-head__navigation\">\r\n            <Button onClick={onDecrement} className=\"btn-navigate\" type=\"white\" outlined>\r\n              <FeatherIcon icon=\"chevron-left\" />\r\n            </Button>\r\n            <Select\r\n              className=\"year-select\"\r\n              onChange={value => setState({ ...state, currentYear: value })}\r\n              defaultValue={currentYear}\r\n              value={currentYear}\r\n              style={{ width: '100px' }}\r\n            >\r\n              {option}\r\n            </Select>\r\n            <Button className=\"btn-navigate\" onClick={onIncrement} type=\"white\" outlined>\r\n              <FeatherIcon icon=\"chevron-right\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"calendar-header__right\">\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"./day\">Day</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"./week\">Week</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"./month\">Month</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"./year\">Year</NavLink>\r\n            </li>\r\n          </ul>\r\n          <NavLink className=\"schedule-list\" to=\"./schedule\">\r\n            <FeatherIcon icon=\"list\" />\r\n            Schedule\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n      <BlockViewCalendarWrapper className=\"table-responsive\">\r\n        <Calendar\r\n          headerRender={() => {\r\n            return <></>;\r\n          }}\r\n          mode=\"year\"\r\n        // monthCellRender={monthCellRender}\r\n        />\r\n      </BlockViewCalendarWrapper>\r\n    </Cards>\r\n  );\r\n};\r\n\r\nexport default YearCalendar;\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\styled.js",[],"D:\\React\\1-25\\front\\src\\constants\\RulesContant.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\page-headers\\page-headers.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\buttons\\share-button\\share-button.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\buttons\\calendar-button\\calendar-button.js",["1051"],"import React from 'react';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { Popover } from '../../popup/popup';\r\nimport { DateRangePickerOne } from '../../datePicker/datePicker';\r\n\r\nimport { Button } from '../buttons';\r\n\r\nconst CalendarButtonPageHeader = () => {\r\n  const content = (\r\n    <>\r\n\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Popover placement=\"bottomRight\" title=\"Search by Calendar\" content={content} action=\"hover\">\r\n      <Button size=\"small\" type=\"white\">\r\n        <FeatherIcon icon=\"calendar\" size={14} />\r\n        Calendar\r\n      </Button>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport { CalendarButtonPageHeader };\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\buttons\\buttons.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\buttons\\export-button\\export-button.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\cards\\frame\\cards-frame.js",[],"D:\\React\\1-25\\front\\src\\constants\\ApiConstant.js",[],"D:\\React\\1-25\\front\\src\\components\\util-components\\CustomIcon\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\Style.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\components\\navigation\\dropdown\\Item.js",[],"D:\\React\\1-25\\front\\src\\redux\\calendar\\actionCreator.js",[],"D:\\React\\1-25\\front\\src\\components\\shared-components\\EllipsisDropdown\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\AddNewEvent.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\ProjectUpdate.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\modals\\antd-modals.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\dropdown\\dropdown.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\cards\\frame\\style.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\buttons\\styled.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\page-headers\\style.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\heading\\heading.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\popup\\popup.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\datePicker\\datePicker.js",["1052"],"// eslint-disable-next-line max-classes-per-file\r\nimport React, { useState } from 'react';\r\nimport { addDays } from 'date-fns';\r\n//import 'react-date-range/dist/styles.css'; // main style file\r\n//import 'react-date-range/dist/theme/default.css'; // theme css file\r\n\r\nimport { DatePicker } from 'antd';\r\nimport { ItemWraper, ButtonGroup } from './style';\r\nimport { Button } from '../buttons/buttons';\r\n\r\nconst DateRangePickerOne = () => {\r\n  const [state, setState] = useState({\r\n    datePickerInternational: null,\r\n    dateRangePicker: {\r\n      selection: {\r\n        startDate: new Date(),\r\n        endDate: addDays(new Date(), 7),\r\n        key: 'selection',\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleRangeChange = which => {\r\n    setState({\r\n      ...state,\r\n      dateRangePicker: {\r\n        ...state.dateRangePicker,\r\n        ...which,\r\n      },\r\n    });\r\n  };\r\n\r\n  const { dateRangePicker } = state;\r\n  const start = dateRangePicker.selection.startDate.toString().split(' ');\r\n  const end = dateRangePicker.selection.endDate.toString().split(' ');\r\n\r\n  return (\r\n    <ItemWraper>\r\n\r\n\r\n      <ButtonGroup>\r\n        <p>{`${start[1]} ${start[2]} ${start[3]} - ${end[1]} ${end[2]} ${end[3]}`}</p>\r\n        <Button size=\"small\" type=\"primary\">\r\n          Apply\r\n        </Button>\r\n        <Button size=\"small\" type=\"white\" outlined>\r\n          Cancel\r\n        </Button>\r\n      </ButtonGroup>\r\n    </ItemWraper>\r\n  );\r\n};\r\n\r\nclass CustomDateRange extends React.Component {\r\n  // eslint-disable-next-line react/state-in-constructor\r\n  state = {\r\n    startValue: null,\r\n    endValue: null,\r\n    endOpen: false,\r\n  };\r\n\r\n  disabledStartDate = startValue => {\r\n    const { endValue } = this.state;\r\n    if (!startValue || !endValue) {\r\n      return false;\r\n    }\r\n    return startValue.valueOf() > endValue.valueOf();\r\n  };\r\n\r\n  disabledEndDate = endValue => {\r\n    const { startValue } = this.state;\r\n    if (!endValue || !startValue) {\r\n      return false;\r\n    }\r\n    return endValue.valueOf() <= startValue.valueOf();\r\n  };\r\n\r\n  onChange = (field, value) => {\r\n    this.setState({\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  onStartChange = value => {\r\n    this.onChange('startValue', value);\r\n  };\r\n\r\n  onEndChange = value => {\r\n    this.onChange('endValue', value);\r\n  };\r\n\r\n  handleStartOpenChange = open => {\r\n    if (!open) {\r\n      this.setState({ endOpen: true });\r\n    }\r\n  };\r\n\r\n  handleEndOpenChange = open => {\r\n    this.setState({ endOpen: open });\r\n  };\r\n\r\n  render() {\r\n    const { startValue, endValue, endOpen } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <DatePicker\r\n          disabledDate={this.disabledStartDate}\r\n          showTime\r\n          format=\"YYYY-MM-DD HH:mm:ss\"\r\n          value={startValue}\r\n          placeholder=\"Start\"\r\n          onChange={this.onStartChange}\r\n          onOpenChange={this.handleStartOpenChange}\r\n          style={{ margin: '5px' }}\r\n        />\r\n\r\n        <DatePicker\r\n          disabledDate={this.disabledEndDate}\r\n          showTime\r\n          format=\"YYYY-MM-DD HH:mm:ss\"\r\n          value={endValue}\r\n          placeholder=\"End\"\r\n          onChange={this.onEndChange}\r\n          open={endOpen}\r\n          onOpenChange={this.handleEndOpenChange}\r\n          style={{ margin: '5px' }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { DateRangePickerOne, CustomDateRange };\r\n","D:\\React\\1-25\\front\\src\\redux\\calendar\\actions.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\dropdown\\dropdown-style.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\modals\\styled.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\overview\\UpdateEvent.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\datePicker\\style.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\popup\\style.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\calendar\\components\\heading\\style.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\empty\\index.js",["1053"],"import React, { Component } from \"react\";\r\nimport { Empty, Spin } from \"antd\";\r\n\r\nexport class Basic extends Component {\r\n  render() {\r\n    return <Spin />;\r\n  }\r\n}\r\n\r\nexport default Basic;\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\default\\index.js",["1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069"],"import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Button, Card, Avatar, Dropdown, Table, Tooltip, Menu, Tag } from 'antd';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport { statusOptions, sortOptions } from \"../../../../constants/Options\";\r\nimport { STATUS_COLORS } from 'constants/ThemeConstant';\r\nimport { connect } from \"react-redux\";\r\nimport { getBookings } from \"redux/actions/Booking\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  NewMembersData,\r\n  RecentTransactionData\r\n} from './DefaultDashboardData';\r\nimport {\r\n  EyeOutlined,\r\n  EllipsisOutlined,\r\n  ReloadOutlined, RightOutlined\r\n} from '@ant-design/icons';\r\nimport utils from 'utils';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport UserService from \"services/UserService\";\r\nimport { injectIntl } from 'react-intl';\r\n\r\n\r\nexport const DefaultDashboard = ({ intl, results, success, getBookings }) => {\r\n  const bookingTableColumns = [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'id'\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n\r\n    },\r\n    {\r\n      title: 'Phone',\r\n      dataIndex: 'phone',\r\n\r\n    },\r\n    {\r\n      title: 'Item',\r\n      dataIndex: 'title',\r\n\r\n    },\r\n    {\r\n      title: 'Location',\r\n      dataIndex: 'location',\r\n    },\r\n    {\r\n      title: 'Pickup Date',\r\n      dataIndex: 'pickupDate',\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      render: (text, record) => {\r\n        return <Tag\r\n          className={\"w-100 \" + STATUS_COLORS[\"COLOR_\" + text]}\r\n\r\n        >\r\n          {intl.formatMessage({ id: 'text.' + text })}\r\n        </Tag>\r\n      }\r\n    }\r\n  ]\r\n  const [newMembersData, setMembersData] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  if (results.length > 0)\r\n    results = results.map(item => {\r\n      item = { ...item, ...item.pickup };\r\n      return item;\r\n    });\r\n  useEffect(async () => {\r\n    getBookings({});\r\n    const users = await UserService.latest();\r\n    setMembersData(users.results);\r\n  }, [loaded]);\r\n  bookingTableColumns.map(item => {\r\n    item.title = intl.formatMessage({ id: 'text.' + item.dataIndex })\r\n    return item;\r\n  });\r\n  return (\r\n    <>\r\n\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={7}>\r\n          <Card title={intl.formatMessage({ id: 'text.latestRegistered' })} >\r\n            <div className=\"mt-3\">\r\n              {\r\n                newMembersData.map((elm, i) => (\r\n                  <div key={i} className={`d-flex align-items-center justify-content-between mb-4`}>\r\n                    <AvatarStatus id={i} src=\"/img/avatars/avatar.png\" name={elm.name} subTitle={elm.email} />\r\n                    <div>\r\n                      <Tooltip placement=\"left\" title={\"View user profile\"}><Link to={\"/app/accounts/\" + elm.id}>\r\n                        <Button size=\"small\" shape=\"circle\" icon={<RightOutlined />} ></Button>\r\n                      </Link>\r\n                      </Tooltip>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              }\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={17}>\r\n          <Card title={intl.formatMessage({ id: 'text.latestBookings' })} >\r\n            <Table\r\n              className=\"no-border-last\"\r\n              columns={bookingTableColumns}\r\n              dataSource={results}\r\n              rowKey='id'\r\n              pagination={false}\r\n              size={\"small\"}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = ({ bookingList }) => {\r\n  const { results, loading, success } = bookingList;\r\n  return {\r\n    results, loading, success\r\n  }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  getBookings\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(injectIntl(DefaultDashboard));","D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\default\\DefaultDashboardData.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\client\\index.js",["1070","1071"],"import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport PageHeaderAlt from '../../../../components/layout-components/PageHeaderAlt';\r\nimport { Input, Row, Col, Card, Collapse } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport IntlMessage from \"components/util-components/IntlMessage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { injectIntl } from 'react-intl';\r\nclass ClientHome extends Component {\r\n\tonClick(event) {\r\n\t\tconsole.log(event)\r\n\t}\r\n\trender() {\r\n\t\tconst userData = this.props.userData || {};\r\n\t\tconst { intl } = this.props;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<PageHeaderAlt className=\"bg-primary\" overlap>\r\n\t\t\t\t\t<div className=\"container text-center\">\r\n\t\t\t\t\t\t<div className=\"py-lg-4\">\r\n\t\t\t\t\t\t\t<h1 className=\"text-white \">{intl.formatMessage({ id: 'text.welcome' })} {userData.name}</h1>\r\n\t\t\t\t\t\t\t<Row type=\"flex\" justify=\"center\">\r\n\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={12}>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-white w-75 text-center mt-2 mb-4 mx-auto\">\r\n\t\t\t\t\t\t\t\t\t\t{intl.formatMessage({ id: 'text.enjoy' })}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row type=\"flex\" justify=\"center\" className=\"mb-5\">\r\n\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={12}>\r\n\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</PageHeaderAlt>\r\n\t\t\t\t<div className=\"container my-4\">\r\n\t\t\t\t\t<Row gutter={16}>\r\n\r\n\t\t\t\t\t\t<Col xs={24} sm={24} md={12} >\r\n\t\t\t\t\t\t\t<Link to={\"../bookings-create\"}>\r\n\t\t\t\t\t\t\t\t<Card hoverable >\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src=\"/img/others/pricing_img.png\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"mt-4\">{<IntlMessage id=\"button.createBooking\" />}</h3>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xs={24} sm={24} md={12} >\r\n\t\t\t\t\t\t\t<Link to={\"../bookings-list\"}>\r\n\t\t\t\t\t\t\t\t<Card hoverable>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src=\"/img/others/pricing_img_3.png\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"mt-4\">{<IntlMessage id=\"button.showBookings\" />}</h3>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tuserData: state.user.userData\r\n\t}\r\n}\r\nexport default connect(mapStateToProps)(injectIntl(ClientHome))","D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\client\\SalesDashboardData.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\dashboards\\analytic\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\clientCreate.js",["1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085"],"D:\\React\\1-25\\front\\src\\views\\app-views\\myRoute\\myRoute.js",["1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097"],"import { useState, useEffect } from \"react\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Col, Row, Card, Tooltip, Tag, Button, Popover, Alert, Empty } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport BookingList from \"./bookingList\";\r\nimport { ClockCircleOutlined, EnvironmentFilled, PlusOutlined } from '@ant-design/icons';\r\nimport { STATUS_COLORS } from \"constants/ThemeConstant\";\r\nimport { getRouteData, directionError, directionSuccess } from \"redux/actions\";\r\nimport Flex from 'components/shared-components/Flex';\r\nimport CreateDirection from \"./createDirection\";\r\nimport { motion } from 'framer-motion';\r\nimport { injectIntl } from 'react-intl'\r\nconst CustomMarker = injectIntl(({ intl, data }) => {\r\n    const ItemHeader = ({ name, address, ownerName }) => (\r\n        <div>\r\n\r\n            <span className=\"text-muted\">{ownerName}</span><br />\r\n            <span className=\"text-muted\">{address}</span>\r\n        </div>\r\n    )\r\n    const ItemInfo = ({ pickupDate, status, address, name, statusColor, selectedHour }) => (\r\n        <>\r\n\r\n            <Flex alignItems=\"center\" justifyContent=\"between\">\r\n\r\n                <div className=\"mr-3 mt-3\">\r\n                    <Tooltip title={intl.formatMessage({ id: 'text.pickupDate' })}>\r\n                        <ClockCircleOutlined className=\"text-muted font-size-md text-primary\" />\r\n                        <span className=\"ml-1 text-muted\">{pickupDate}  </span>\r\n                        <span className=\"ml-1 text-muted\">{selectedHour.from} - {selectedHour.to}</span>\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <Tag className={STATUS_COLORS[\"COLOR_\" + status]} >\r\n\r\n                        <span className={\"ml-2 font-weight-semibold \"}>{status}</span>\r\n                    </Tag>\r\n                </div>\r\n            </Flex>\r\n        </>\r\n    )\r\n    const createInfoWindowContent = (data) => {\r\n        return <>\r\n            <Flex alignItems=\"center\" justifyContent=\"start\">\r\n                <img style={{ width: \"80px\", maxHeight: \"80px\", marginRight: \"10px\", borderRadius: \"10px\" }} src={data.images.length > 0 ? data.images[0] : \"\"} />\r\n                <div style={{ flexGrow: 1, padding: \"5px\" }}><Flex alignItems=\"center\" justifyContent=\"between\">\r\n\r\n                    <ItemHeader name={data.pickup.title} ownerName={data.pickup.name} address={data.pickup.location} />\r\n\r\n                </Flex>\r\n                </div>\r\n            </Flex>\r\n            <div className=\"mt-2\">\r\n                <ItemInfo\r\n                    pickupDate={data.pickup.pickupDate}\r\n                    selectedHour={data.pickup.selectedHour}\r\n                    status={data.status || \"Recieved\"}\r\n                    statusColor={data.statusColor || \"bg-warning\"}\r\n\r\n                />\r\n            </div>\r\n        </>\r\n\r\n    }\r\n    return <Popover content={createInfoWindowContent(data)} title={data.title}>\r\n        <div style={{ position: \"relative\", marginLeft: \"-20px\", marginTop: \"-40px\" }}>\r\n            <Button block type=\"text\"  ><div className={STATUS_COLORS[\"COLOR_\" + data.status]} style={{ display: \"flex \", alignItems: \"center\", justifyContent: \"space-around\", fontSize: \"28px\" }} ><EnvironmentFilled /></div></Button>\r\n        </div>\r\n    </Popover>\r\n\r\n})\r\nexport const RouteCreator = ({ intl, routeData, directionError, directionSuccess, hideMessage, match, results, message, success, getRouteData, destinations, myLocation }) => {\r\n    const routeId = match.params.id;\r\n    const [gMap, setGmap] = useState({\r\n        bookings: [],\r\n        markers: []\r\n    });\r\n    const [markers, setMarkers] = useState([]);\r\n    const loadMap = (map, maps) => {\r\n        if (maps) {\r\n            const directionService = new maps.DirectionsService();\r\n            const directionRenderer = new maps.DirectionsRenderer();\r\n            setGmap({ ...gMap, map, maps, directionService, directionRenderer });\r\n        }\r\n\r\n    };\r\n\r\n    const createRoute = (myLocation, destinations) => {\r\n\r\n\r\n        gMap.directionRenderer.setMap(gMap.map);\r\n\r\n\r\n        let waypoints = [];\r\n        if (destinations.length > 1) {\r\n            waypoints = destinations.map(item => {\r\n                return {\r\n                    location: new gMap.maps.LatLng(item.pickup.latitude, item.pickup.longitude),\r\n                    stopover: true\r\n                }\r\n            })\r\n            var destination = destinations[destinations.length - 1];\r\n\r\n            // waypoints.shift();\r\n            waypoints.pop();\r\n\r\n        }\r\n        else {\r\n            var destination = destinations[0];\r\n        }\r\n\r\n        if (!myLocation.latitude) {\r\n            if (gMap.directionRenderer != null) {\r\n                gMap.directionRenderer.setMap(null);\r\n\r\n            }\r\n        }\r\n        else\r\n            gMap.directionService.route(\r\n                {\r\n                    origin: { lat: myLocation.latitude, lng: myLocation.longitude },\r\n                    destination: { lat: destination.pickup.latitude, lng: destination.pickup.longitude },\r\n                    travelMode: gMap.maps.TravelMode.DRIVING,\r\n                    waypoints: waypoints\r\n                },\r\n                (result, status) => {\r\n                    if (status === \"OK\") {\r\n                        gMap.directionRenderer.setDirections(result);\r\n                        directionSuccess(result);\r\n                        console.error(`ok fetching directions ${result}`);\r\n                    } else {\r\n                        console.error(`error fetching directions ${result}`);\r\n                        directionError();\r\n                    }\r\n                }\r\n            );\r\n    }\r\n    useEffect(async () => {\r\n        let markers = gMap.bookings.map((item, index) => {\r\n            return <CustomMarker data={item} lat={item.pickup.latitude} lng={item.pickup.longitude} key={index} />\r\n        })\r\n        setMarkers(markers);\r\n        updateBounds();\r\n    }, [gMap]);\r\n\r\n    useEffect(async () => {\r\n        getRouteData(routeId);\r\n    }, []);\r\n    useEffect(async () => {\r\n        if (gMap.map)\r\n            createRoute(myLocation, destinations);\r\n    }, [destinations, myLocation, gMap]);\r\n\r\n\r\n    const updateBounds = () => {\r\n        if (gMap.maps) {\r\n            let bounds = new gMap.maps.LatLngBounds();\r\n            gMap.bookings.forEach(item => {\r\n                bounds.extend({ lat: item.pickup.latitude, lng: item.pickup.longitude });\r\n            })\r\n            if (gMap.bookings.length > 0)\r\n                gMap.map.fitBounds(bounds);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {routeData === undefined && success === false ? <Empty /> :\r\n                <Row>\r\n                    <Col md={9} className=\"pr-4\" >\r\n                        <Card className=\"p-2\"  >\r\n                            <CreateDirection routeId={routeId} />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={15} >\r\n                        <div className=\"w-100\">\r\n                            <div style={{ height: '500px', width: '100%' }} >\r\n\r\n                                <GoogleMapReact\r\n                                    bootstrapURLKeys={{ key: \"AIzaSyBYHbKZtVrRwnBoYhEamqgMQWhVDtNLTrg\" }}\r\n                                    defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\r\n                                    defaultZoom={1}\r\n                                    yesIWantToUseGoogleMapApiInternals\r\n                                    onGoogleApiLoaded={({ map, maps }) => loadMap(map, maps)}\r\n                                    defaultOptions={{ mapId: \"12f7b45ccae6f788\" }}\r\n                                >\r\n                                    {markers}\r\n                                </GoogleMapReact>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ routeCreator }) => {\r\n    const { myLocation, isShowMessage, success, message, loading, routeData, destinations } = routeCreator;\r\n    return { myLocation, isShowMessage, success, message, loading, routeData, destinations };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getRouteData, directionSuccess, directionError\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(RouteCreator))\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\myRoute\\list.js",["1098","1099","1100","1101","1102","1103","1104"],"import React, { Component } from 'react'\r\nimport { Table, Tag, Tooltip, Button, Input, Modal, Alert, Row, Col, Select, Form } from 'antd';\r\nimport { EyeOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport DataService from 'services/RouteCreator';\r\nimport { motion } from \"framer-motion\"\r\nimport { Link } from 'react-router-dom';\r\nimport { MyRouteFilterOptions, MyRouteSortOptions } from \"constants/Options\";\r\nimport { STATUS_COLORS } from 'constants/ThemeConstant';\r\nimport { injectIntl } from 'react-intl'\r\n\r\nconst { Search } = Input;\r\nconst { TextArea } = Input;\r\nexport class MyRouteList extends Component {\r\n    form = React.createRef();\r\n    state = {\r\n        records: [],\r\n        submitConfirmVisible: false,\r\n        newRecordVisible: false,\r\n        selectedRecord: null,\r\n        loading: false,\r\n        showMessage: false,\r\n        message: \"\",\r\n        pagination: {\r\n            current: 1,\r\n            pageSize: 10,\r\n        },\r\n        query: {\r\n            sortBy: \"name\",\r\n            sortType: \"asc\",\r\n        }\r\n    }\r\n\r\n    deleteRecord = id => {\r\n        const rec = this.state.records.find(item => item.id == id)\r\n        this.setState({ submitConfirmVisible: true, selectedRecord: rec, error: false, message: \"\" });\r\n\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        const data = await DataService.list(this.state.query);\r\n\r\n        this.setState({\r\n            records: data.results\r\n        })\r\n    }\r\n\r\n    async onSubmitConfirm(type) {\r\n        if (type == \"ok\") {\r\n            this.setState({ submitConfirmVisible: false, loading: true });\r\n            try {\r\n                const result = await DataService.delete(this.state.selectedRecord.id);\r\n                this.setState({\r\n                    records: this.state.records.filter(item => item.id !== this.state.selectedRecord.id),\r\n                });\r\n                this.setState({ error: false, message: this.props.intl.formatMessage({ id: 'text.deleted' }), showMessage: true });\r\n            } catch (err) {\r\n                this.setState({ error: true, message: err.message, showMessage: true });\r\n            }\r\n            this.setState({ loading: false });\r\n            if (this.state.showMessage)\r\n                setTimeout(() => {\r\n                    this.setState({ showMessage: false });\r\n                }, 4000);\r\n        }\r\n        else\r\n            this.setState({ submitConfirmVisible: false });\r\n    }\r\n    async newRecordConfirm(type) {\r\n        if (type == \"ok\") {\r\n            try {\r\n\r\n                const values = await this.form.current.validateFields();\r\n                this.setState({ loading: true });\r\n                await DataService.add(values);\r\n                this.setState({ newRecordVisible: false });\r\n                const data = await DataService.list(this.state.query);\r\n                this.setState({\r\n                    records: data.results, loading: false\r\n                })\r\n            } catch (err) {\r\n                this.setState({ error: true, message: err.message, showMessage: true, loading: false });\r\n            }\r\n        }\r\n        else\r\n            this.setState({ newRecordVisible: false });\r\n    }\r\n    tagRender = (props) => {\r\n        const { label, value, closable, onClose } = props;\r\n        const onPreventMouseDown = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        };\r\n        return (\r\n            <Tag\r\n                className={STATUS_COLORS[\"COLOR_\" + value]}\r\n                onMouseDown={onPreventMouseDown}\r\n                closable={closable}\r\n                onClose={onClose}\r\n                style={{ marginRight: 3 }}\r\n            >\r\n                {label}\r\n            </Tag>\r\n        );\r\n    }\r\n    onChangeSort = async (value) => {\r\n        const data = await DataService.list({ ...this.state.query, sortBy: value });\r\n        this.setState({\r\n            records: data.results,\r\n            query: { sortBy: value }\r\n        })\r\n    }\r\n    onChangeSearch = async (value) => {\r\n        const data = await DataService.list({ ...this.state.query, keyword: value });\r\n        this.setState({\r\n            records: data.results,\r\n            query: { keyword: value }\r\n        })\r\n\r\n    }\r\n    onChangeFilter = async (value) => {\r\n        const data = await DataService.list({ ...this.state.query, filterByStatus: value });\r\n        this.setState({\r\n            records: data.results,\r\n            query: { filterByStatus: value }\r\n        })\r\n\r\n    }\r\n    onChangeSortType = async (value) => {\r\n        const data = await DataService.list({ ...this.state.query, sortType: value });\r\n        this.setState({\r\n            records: data.results,\r\n            query: { sortType: value }\r\n        })\r\n\r\n    }\r\n    createNew = () => {\r\n        this.setState({ newRecordVisible: true });\r\n    }\r\n    MyRouteSortOptions = MyRouteSortOptions.map(item => {\r\n        item.label = this.props.intl.formatMessage({ id: 'text.' + item.value })\r\n        return item;\r\n    })\r\n    render() {\r\n\r\n\r\n        const { loading, records, selectedRecord, newRecordVisible, pagination, submitConfirmVisible, error, message, showMessage } = this.state;\r\n        const tableColumns = [\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.name' }),\r\n                dataIndex: 'name',\r\n\r\n\r\n            },\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.comments' }),\r\n                dataIndex: 'comments',\r\n\r\n\r\n            },\r\n\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.status' }),\r\n                dataIndex: 'status',\r\n                render: status => (\r\n                    <Tag className=\"text-capitalize\" color={status === 'Ready' ? 'cyan' : 'red'}>{status}</Tag>\r\n                ),\r\n\r\n            },\r\n            {\r\n                title: '',\r\n                dataIndex: 'actions',\r\n                render: (_, elm) => (\r\n                    <div className=\"text-right d-flex justify-content-end\">\r\n                        <Tooltip title={this.props.intl.formatMessage({ id: 'text.view' })}>\r\n                            <Link to={`./my-routes/${elm.id}`}>\r\n                                <Button type=\"link\" className=\"mr-2\" icon={<EyeOutlined />} size=\"small\" />\r\n                            </Link>\r\n                        </Tooltip>\r\n                        <Tooltip title={this.props.intl.formatMessage({ id: 'text.delete' })}>\r\n                            <Button type=\"link\" danger icon={<DeleteOutlined />} onClick={() => { this.deleteRecord(elm.id) }} size=\"small\" />\r\n                        </Tooltip>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <>\r\n                <Row className='mb-3'>\r\n                    <Col flex=\"auto\"><PageHeader title={this.props.intl.formatMessage({ id: 'text.myRoutes' })} display={true} trans={false} /></Col>\r\n                    <Col>\r\n                        <Button type=\"primary\" className=\"ml-2\" onClick={() => { this.createNew() }}>\r\n                            <PlusOutlined />\r\n                            <span>{this.props.intl.formatMessage({ id: 'text.new' })}</span>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {showMessage ?\r\n                    <motion.div\r\n                        initial={{ opacity: 0, marginBottom: 0 }}\r\n                        animate={{\r\n                            opacity: showMessage ? 1 : 0,\r\n                            marginBottom: showMessage ? 20 : 0\r\n                        }}>\r\n                        <Alert type={error == false ? \"success\" : \"error\"} showIcon message={message}></Alert>\r\n                    </motion.div>\r\n                    : \"\"}\r\n                <Row justify=\"space-between\">\r\n                    <Col>\r\n                        <div className=\"p-2\">\r\n                            <Row align=\"middle \">\r\n                                <Col>\r\n                                    <span>{this.props.intl.formatMessage({ id: 'text.filterBy' })}:</span>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"ml-2\"\r\n                                        mode=\"multiple\"\r\n                                        showArrow\r\n                                        size=\"small\"\r\n                                        tagRender={this.tagRender}\r\n                                        onChange={this.onChangeFilter}\r\n                                        placeholder={this.props.intl.formatMessage({ id: 'text.selectStatus' })}\r\n                                        style={{ width: '100%', minWidth: '150px' }}\r\n                                        options={MyRouteFilterOptions}\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <span className=\"pl-4 pr-3\">- {this.props.intl.formatMessage({ id: 'text.and' })} -</span>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Search size=\"small\" loading={loading} onSearch={this.onChangeSearch} size=\"small\" placeholder={this.props.intl.formatMessage({ id: 'text.inputName' })} style={{ width: \"170px\" }} />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"p-2\">\r\n                            <Row align=\"middle \">\r\n                                <Col>\r\n                                    <span>{this.props.intl.formatMessage({ id: 'text.sortBy' })}:</span>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"ml-2\"\r\n                                        size=\"small\"\r\n                                        showArrow\r\n                                        onChange={this.onChangeSort}\r\n                                        defaultValue={this.props.intl.formatMessage({ id: 'text.name' })}\r\n                                        style={{ width: '100%', minWidth: '150px' }}\r\n                                        options={MyRouteSortOptions}\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"ml-3\"\r\n                                        showArrow\r\n                                        size=\"small\"\r\n                                        onChange={this.onChangeSortType}\r\n                                        defaultValue=\"desc\"\r\n                                        style={{ width: '80px' }}\r\n                                        options={[{ label: \"Desc\", value: \"desc\" }, { label: \"Asc\", value: \"asc\" }]}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Table columns={tableColumns} dataSource={records} rowKey='id'\r\n                    pagination={pagination} size=\"small\"\r\n\r\n                />\r\n\r\n\r\n\r\n                <Modal\r\n                    title={this.props.intl.formatMessage({ id: 'text.record' })}\r\n                    visible={submitConfirmVisible}\r\n                    onOk={() => { this.onSubmitConfirm(\"ok\") }}\r\n                    onCancel={() => { this.onSubmitConfirm(\"cancel\") }}\r\n                    okText=\"Delete\"\r\n                    cancelText=\"Cancel\"\r\n                >\r\n                    <p>{this.props.intl.formatMessage({ id: 'text.delete' })}?</p>\r\n                </Modal>\r\n                <Modal\r\n                    title={this.props.intl.formatMessage({ id: 'text.newRecord' })}\r\n                    visible={newRecordVisible}\r\n                    onOk={() => { this.newRecordConfirm(\"ok\") }}\r\n                    onCancel={() => { this.newRecordConfirm(\"cancel\") }}\r\n                    okText=\"Submit\"\r\n                    cancelText=\"Cancel\"\r\n                    confirmLoading={this.state.loading}\r\n                >\r\n                    <Form ref={this.form} layout=\"vertical\" name=\"register-form\" >\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            label={this.props.intl.formatMessage({ id: 'text.name' })}\r\n                            hasFeedback\r\n                            rules={[{\r\n                                required: true,\r\n                                message: 'Please input name'\r\n                            }, {\r\n                                min: 5,\r\n                                message: 'minimum characters is 5'\r\n                            }, {\r\n                                max: 200,\r\n                                message: 'maximum characters is 200'\r\n                            }\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"comments\"\r\n                            label={this.props.intl.formatMessage({ id: 'text.comments' })}\r\n\r\n                            hasFeedback\r\n                        >\r\n                            <TextArea ></TextArea>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default injectIntl(MyRouteList)\r\n","D:\\React\\1-25\\front\\src\\components\\layout-components\\PageHeaderAlt.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\step1.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\myRoute\\bookingList.js",["1105","1106","1107","1108","1109","1110"],"import { connect } from 'react-redux';\r\nimport { useState, useEffect } from \"react\";\r\nimport { myCalendarAddBooking } from 'redux/actions/MyCalendar';\r\nimport { getBookings, addDestination, addTagBookingItem } from 'redux/actions';\r\nimport moment from \"moment\";\r\nimport { CloseOutlined, RightOutlined } from '@ant-design/icons';\r\nimport { Table, Tag, Tooltip, Card, Col, Row, Input, Image, Button, Select } from 'antd';\r\nimport { statusOptions, sortOptions } from \"constants/Options\";\r\nimport { STATUS_COLORS } from 'constants/ThemeConstant';\r\nimport { injectIntl } from 'react-intl'\r\n\r\nconst { Search } = Input;\r\n\r\n\r\nconst ActionColumnRender = ({ intl, routeId, addDestination, addTagBookingItem, record }) => {\r\n\r\n\r\n    const onAdd = async () => {\r\n        const x = await addDestination({\r\n            routeId,\r\n            destinationId: record.id\r\n        });\r\n\r\n        //  addTagBookingItem({ id: record.id, tag: { destination: true } });\r\n    }\r\n\r\n    return <div>\r\n        <Tooltip placement=\"left\" title={intl.formatMessage({ id: 'text.addToRoute' })}>\r\n            <Button onClick={onAdd} size=\"small\" shape=\"circle\" icon={<RightOutlined />} ></Button>\r\n        </Tooltip>\r\n    </div>\r\n}\r\n\r\n\r\nconst BookingList = ({ intl, routeId, visible = true, onClose, title = intl.formatMessage({ id: 'text.selectDestination' }), loading, results, totalResults, getBookings, selectedTimeFrame, destinations }) => {\r\n    const bookingTableColumns = [\r\n        {\r\n            title: intl.formatMessage({ id: 'text.item' }),\r\n            dataIndex: 'title',\r\n            render: (text, record) => {\r\n                return <div style={{ width: \"120px\" }} className=\"text-truncate\">\r\n                    {text}\r\n                </div>\r\n            }\r\n        },\r\n        {\r\n            title: intl.formatMessage({ id: 'text.location' }),\r\n            dataIndex: 'location',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            render: (text, record) => {\r\n                return <Tag\r\n                    className={STATUS_COLORS[\"COLOR_\" + text]} size={\"small\"}\r\n                >\r\n                    <div style={{ width: \"35px\", }} className=\"text-truncate\">{intl.formatMessage({ id: 'text.' + text })}</div>\r\n                </Tag>\r\n\r\n            }\r\n\r\n        },\r\n        {\r\n            title: intl.formatMessage({ id: 'text.action' }),\r\n            dataIndex: '',\r\n            key: 'x',\r\n            render: (text, record) => {\r\n                return <ActionColumnRenderConnected routeId={routeId} text={text} record={record} selectedTimeFrame={selectedTimeFrame} />\r\n            }\r\n\r\n        },\r\n    ]\r\n\r\n    const [query, setQuery] = useState({ sortBy: \"Submitted\", sortType: \"Desc\", filterByStatus: [\"Submitted\", 'Booked'], filterByRoute: routeId });\r\n    const [state, setState] = useState({ visible });\r\n    let tableResults = results.filter(item => item.destination !== true);\r\n    const [tableState, setTableState] = useState({\r\n        data: [],\r\n        pagination: {\r\n            current: 1,\r\n            pageSize: 10,\r\n            total: tableResults.length\r\n        },\r\n        loading: false,\r\n\r\n    });\r\n    if (tableResults.length > 0)\r\n        tableResults = tableResults.map(item => {\r\n            item = { ...item, ...item.pickup };\r\n            return item;\r\n        });\r\n    useEffect(async () => {\r\n        getBookings(query);\r\n    }, [query, destinations]);\r\n    const tagRender = (props) => {\r\n        const { label, value, closable, onClose } = props;\r\n        const onPreventMouseDown = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        };\r\n        return (\r\n            <Tag\r\n                className={STATUS_COLORS[\"COLOR_\" + value]}\r\n                onMouseDown={onPreventMouseDown}\r\n                closable={closable}\r\n                onClose={onClose}\r\n                style={{ marginRight: 3 }}\r\n                size={\"small\"}\r\n            >\r\n                {label}\r\n            </Tag>\r\n        );\r\n    }\r\n\r\n    const onChangeSearch = (value) => {\r\n        setQuery({ ...query, keyword: value });\r\n    }\r\n    const onChangeFilter = (value) => {\r\n        setQuery({ ...query, filterByStatus: value });\r\n    }\r\n    const onTableChange = (pagination, filters, sorter, extra) => {\r\n        if (extra.action == 'paginate') {\r\n            setTableState({ ...tableState, pagination: { ...tableState.pagination, current: pagination.current } })\r\n            setQuery({ ...query, page: pagination.current });\r\n        }\r\n\r\n    }\r\n    const closeMe = () => {\r\n        setState({ ...state, visible: false });\r\n        if (onClose)\r\n            onClose();\r\n    }\r\n\r\n    statusOptions.map(item => {\r\n        item.label = intl.formatMessage({ id: 'text.' + item.value })\r\n        return item;\r\n    })\r\n    return (<>\r\n\r\n        {state.visible ?\r\n            <div >\r\n                <Row align=\"middle \" justify=\"space-between\" className=\"pb-3\">\r\n                    <Col>\r\n                        <span className=\"text-gray-light\">{title}</span>\r\n                    </Col><Col><Button onClick={closeMe} shape='circle' size=\"small\" type=\"text\"><CloseOutlined /></Button></Col>\r\n                </Row>\r\n                <Row align=\"middle \" justify=\"space-between\" gutter={[0, 12]}>\r\n                    <Col flex=\"auto\">\r\n\r\n                        <Select\r\n                            mode=\"multiple\"\r\n                            showArrow\r\n                            size={\"small\"}\r\n                            tagRender={tagRender}\r\n                            onChange={onChangeFilter}\r\n                            placeholder={intl.formatMessage({ id: 'text.selectStatus' })}\r\n                            style={{ display: \"relative\", width: \"100%\" }}\r\n                            options={statusOptions}\r\n                            value={query.filterByStatus}\r\n                        />\r\n\r\n                    </Col>\r\n                    <Col className=\"font-size-xs pl-2 pr-2\" >\r\n                        - {intl.formatMessage({ id: 'text.and' })} -\r\n                    </Col>\r\n                    <Col flex=\"140px\">\r\n                        <Search loading={loading} onSearch={onChangeSearch} size=\"small\" placeholder={intl.formatMessage({ id: 'text.inputZipCode' })} style={{ width: \"100%\" }} />\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n\r\n                <Table\r\n                    columns={bookingTableColumns}\r\n                    rowKey={record => record.id}\r\n                    dataSource={tableResults}\r\n                    size={\"small\"}\r\n                    showHeader={false}\r\n                    className=\"w-100\"\r\n                    pagination={tableState.pagination}\r\n                    onChange={onTableChange}\r\n                    expandable={{\r\n                        expandedRowRender: record => <BookingDetails booking={record} />,\r\n                        rowExpandable: record => record.name !== 'Not Expandable',\r\n                    }}\r\n                />\r\n            </div> : \"\"\r\n        }\r\n    </>);\r\n}\r\n\r\nconst BookingDetails = ({ booking }) => {\r\n    const { pickup, shipping, images } = booking;\r\n    return <PickupDetails details={pickup} images={images} />\r\n\r\n}\r\n\r\nconst PickupDetails = injectIntl(({ intl, details, images }) => {\r\n    const [visible, setVisible] = useState(false);\r\n    return <Card className=\"p-1 \"  >\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>\r\n                <h6>\r\n                    {intl.formatMessage({ id: 'text.pickupInformtion' })}\r\n                </h6>\r\n\r\n                <article >\r\n\r\n                    <div >\r\n                        <h5>{details.name}</h5>\r\n                        <h5>{intl.formatMessage({ id: 'text.item' })} : {details.title}</h5>\r\n                        <h5>{intl.formatMessage({ id: 'text.pickupDate' })}: {details.pickupDate} {moment(details.selectedHour, [\"HH\"]).format(\"h:mm A\")}</h5>\r\n                        <p>\r\n                            {details.location}\r\n                        </p>\r\n                    </div>\r\n                </article>\r\n            </div>\r\n            <Image\r\n                preview={{ visible: false }}\r\n                width={100}\r\n                src={images[0]}\r\n                onClick={() => setVisible(true)}\r\n            />\r\n            <div style={{ display: 'none' }}>\r\n                <Image.PreviewGroup preview={{ visible, onVisibleChange: vis => setVisible(vis) }}>\r\n\r\n                    {\r\n                        images.map((item, index) => {\r\n                            return <Image width={150} src={item} key={index} />\r\n                        })\r\n                    }\r\n                </Image.PreviewGroup>\r\n            </div>\r\n        </div>\r\n    </Card>\r\n})\r\n\r\n\r\nconst mapStateToProps = ({ bookingList, routeCreator }) => {\r\n    const { results, loading, success, totalResults } = bookingList;\r\n    const { destinations } = routeCreator;\r\n\r\n    return {\r\n        results, totalResults, loading, success, destinations\r\n    }\r\n}\r\n\r\n\r\nconst ActionColumnRenderConnected = connect(mapStateToProps, { myCalendarAddBooking, addDestination, addTagBookingItem })(injectIntl(ActionColumnRender));\r\nexport default connect(mapStateToProps, { getBookings })(injectIntl(BookingList));\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\step2.js",["1111"],"import {\r\n    Form, Input,\r\n    Image, Tabs, Col, Row,\r\n} from 'antd';\r\nimport GoogleMapLocation from './googleMapLocation';\r\n\r\nimport { rulesPickup } from './rules';\r\nconst Step2 = ({ intl, details, form, layout, onMarkerDragEnd, images }) => {\r\n\r\n\r\n    return <Row xs={24} >\r\n\r\n        <Col xs={12}> <div className=\"p-4\">\r\n            <h4  >{intl.formatMessage({ id: 'text.details' })}</h4>\r\n            <Form form={form} name=\"pickupDetails\" {...layout} initialValues={details}>\r\n                <Form.Item name=\"name\" label={intl.formatMessage({ id: 'text.name' })} rules={rulesPickup.name}>\r\n                    <Input placeholder={intl.formatMessage({ id: 'text.name' })} className=\" m-0\" />\r\n                </Form.Item>\r\n                <Row>\r\n                    <Col sm={16}>\r\n                        <Form.Item name=\"location\" label={intl.formatMessage({ id: 'text.location' })} rules={rulesPickup.location} >\r\n                            <Input placeholder=\"Address\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col sm={8}><Form.Item name=\"zip\" className=\"pl-1\" label={intl.formatMessage({ id: 'text.zip' })} rules={rulesPickup.zip} >\r\n                        <Input placeholder={intl.formatMessage({ id: 'text.zip' })} />\r\n                    </Form.Item></Col>\r\n                </Row>\r\n\r\n\r\n                <GoogleMapLocation longitude={details.longitude} latitude={details.latitude} onMarkerDragEnd={onMarkerDragEnd} />\r\n                <Form.Item name=\"phone\" label={intl.formatMessage({ id: 'text.phone' })} rules={rulesPickup.phone}>\r\n                    <Input placeholder={intl.formatMessage({ id: 'text.phone' })} />\r\n                </Form.Item>\r\n                <Form.Item name=\"title\" label={intl.formatMessage({ id: 'text.title' })} rules={rulesPickup.title}>\r\n                    <Input placeholder={intl.formatMessage({ id: 'text.title' })} />\r\n                </Form.Item>\r\n                <Form.Item name=\"price\" label={intl.formatMessage({ id: 'text.price' })}>\r\n                    <Input placeholder={intl.formatMessage({ id: 'text.price' })} />\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n        </Col>\r\n        <Col xs={12} >\r\n            <div className=\"p-4\">\r\n                <h4 className=\"mb-4\">{intl.formatMessage({ id: 'text.images' })}</h4>\r\n                <Image.PreviewGroup>\r\n                    {\r\n                        images.map((item, index) => {\r\n                            return <Image width={150} src={item} key={index} />\r\n                        })\r\n                    }\r\n                </Image.PreviewGroup>\r\n            </div>\r\n        </Col>\r\n    </Row>\r\n\r\n}\r\n\r\nexport default Step2;\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\myRoute\\createDirection.js",["1112","1113","1114","1115","1116","1117","1118","1119","1120","1121"],"import { Input, Row, Col, Button, Tooltip, Alert, Tabs } from 'antd'\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getMyLocationError, getMyLocationSuccess, getMyLocation, showMessage, hideMessage, updateRoute } from \"redux/actions/RouteCreator\";\r\nimport {\r\n    AimOutlined, NodeExpandOutlined, PlusOutlined\r\n} from '@ant-design/icons';\r\nimport BookingList from './bookingList';\r\nimport { motion } from 'framer-motion';\r\nimport RouteCreatorService from \"services/RouteCreator\";\r\nimport Destinations from \"./destinations\";\r\nimport Directions from './directions';\r\nimport { injectIntl } from 'react-intl'\r\n\r\nconst { Search } = Input;\r\nexport const CreateDirection = ({ intl, routeId, isShowMessage, updateRoute, routeData, success, hideMessage, loading, destinations, message }) => {\r\n    const [state, setState] = useState({\r\n        show: \"main\"\r\n    });\r\n    const onBookingListClose = () => {\r\n        setState({ ...state, show: \"main\" });\r\n    }\r\n    const onDirectionClose = () => {\r\n        setState({ ...state, show: \"main\" });\r\n    }\r\n    const onNewDestination = () => {\r\n        setState({ ...state, show: \"destination\" });\r\n    }\r\n    const onShowDirection = () => {\r\n        setState({ ...state, show: \"directions\" });\r\n    }\r\n    useEffect(async () => {\r\n        if (isShowMessage) {\r\n            setTimeout(() => {\r\n                hideMessage();\r\n            }, 2000)\r\n        }\r\n    }, [isShowMessage]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isShowMessage ? <motion.div\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{\r\n                        opacity: isShowMessage ? 1 : 0,\r\n                    }}>\r\n                    <Alert type={success ? \"success\" : \"error\"} showIcon message={message}></Alert>\r\n                </motion.div> : \"\"\r\n            }\r\n            {state.show == \"main\" && <div>\r\n                <Row align=\"middle \" justify=\"space-between\" className=\"pb-3\">\r\n                    <Col>\r\n                        <span className=\"text-gray-light\">{routeData.name}</span>\r\n                    </Col>\r\n\r\n                    { //<Col><Button >Save</Button></Col>\r\n                    }\r\n                </Row>\r\n\r\n                <ConnectedStartLocation routeId={routeId} />\r\n\r\n                <AddDestination destinations={destinations} onNewDestination={onNewDestination} onShowDirection={onShowDirection} />\r\n\r\n                <Destinations routeId={routeId} />\r\n\r\n\r\n            </div>\r\n            }{\r\n                state.show == \"destination\" &&\r\n                <motion.div\r\n                    initial={{ x: -50, }}\r\n                    transition={{ ease: \"easeOut\", duration: 0.5 }}\r\n                    animate={{\r\n                        x: state.show == 'destination' ? 0 : -50\r\n\r\n                    }}>\r\n                    <BookingList routeId={routeId} onClose={onBookingListClose} />\r\n                </motion.div>\r\n            }\r\n            {\r\n                state.show == \"directions\" &&\r\n                <motion.div\r\n                    initial={{ x: -50, }}\r\n                    transition={{ ease: \"easeOut\", duration: 0.5 }}\r\n                    animate={{\r\n                        x: state.show == 'directions' ? 0 : -50\r\n\r\n                    }}>\r\n                    <Directions routeId={routeId} onClose={onDirectionClose} />\r\n                </motion.div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst StartLocation = ({ intl, routeId, getMyLocationSuccess, updateRoute, getMyLocationError, isShowMessage, showMessage, loading, hideMessage, myLocation }) => {\r\n    const navSuccess = (position) => {\r\n\r\n        const { latitude, longitude } = position.coords;\r\n        const t = {\r\n            latitude: 55.676098,\r\n            longitude: 12.568337\r\n        };\r\n        getMyLocationSuccess({ latitude, longitude, address: \"my location\" });\r\n        updateRoute(routeId, { latitude, longitude, address: \"my location\" })\r\n    }\r\n    const navError = (err) => {\r\n        getMyLocationError(err.message);\r\n        showMessage(err.message);\r\n    }\r\n    const onClick = () => {\r\n        RouteCreatorService.getMyLocation(navSuccess, navError);\r\n    }\r\n    const onSearch = async (value) => {\r\n        try {\r\n            const res = await RouteCreatorService.geoCodeAddress(value);\r\n            getMyLocationSuccess({ latitude: res.latitude, longitude: res.longitude, address: value });\r\n            updateRoute(routeId, { latitude: res.latitude, longitude: res.longitude, address: value })\r\n\r\n        } catch (err) {\r\n            getMyLocationError(err.message);\r\n            showMessage(err.message);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (isShowMessage)\r\n            setTimeout(() => {\r\n                hideMessage();\r\n            }, 2000);\r\n    }, [isShowMessage]);\r\n    return <>\r\n        <Row>\r\n            <Col >\r\n                <Tooltip title={intl.formatMessage({ id: 'text.getMyLocation' })} placement='rightTop'>\r\n                    <Button loading={loading} onClick={onClick} size='small' type=\"text\" shape=\"circle\" icon={<AimOutlined />} />\r\n\r\n                </Tooltip>\r\n            </Col>\r\n            <Col flex=\"auto\">\r\n                <Tooltip title=\"Search\" placement='rightTop'>\r\n                    <Search onSearch={onSearch} className=\"ml-1\" size=\"small\" placeholder={intl.formatMessage({ id: 'text.searchStartingLocation' })} />\r\n                </Tooltip>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\nconst AddDestination = injectIntl(({ intl, onNewDestination, onShowDirection, destinations }) => {\r\n\r\n    const onClick = () => {\r\n        onNewDestination()\r\n    }\r\n    const onClickDirections = () => {\r\n        onShowDirection()\r\n    }\r\n    return <>\r\n        <Row align='middle' justify=\"space-between\" className='mt-2 mb-2'>\r\n            <Col>\r\n                <Row>\r\n                    <Col >\r\n                        <Tooltip title={intl.formatMessage({ id: 'text.addDestination' })} placement='rightTop'>\r\n                            <Button onClick={onClick} size='small' shape=\"circle\" type=\"text\" icon={<PlusOutlined />} />\r\n                        </Tooltip>\r\n\r\n                    </Col>\r\n                    <Col flex=\"auto\">\r\n                        <div onClick={onClick} className=\"font-weight-semibold ml-1 text-primary mt-2\" style={{ cursor: \"pointer\" }}>{intl.formatMessage({ id: 'text.addDestination' })}</div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col>  {\r\n                destinations.length > 0 &&\r\n                <Row justify=\"end\">\r\n                    <Col >\r\n                        <Tooltip title={intl.formatMessage({ id: 'text.viewDirections' })} placement='rightTop'>\r\n                            <Button onClick={onClickDirections} size='small' shape=\"circle\" type=\"text\" icon={<NodeExpandOutlined />} />\r\n                        </Tooltip>\r\n\r\n                    </Col>\r\n                    <Col flex=\"auto\">\r\n\r\n                        <div onClick={onClickDirections} className=\"font-weight-semibold ml-1 text-primary mt-2\" style={{ cursor: \"pointer\" }}>{intl.formatMessage({ id: 'text.directions' })}</div>\r\n\r\n\r\n                    </Col>\r\n                </Row>}\r\n            </Col>\r\n        </Row>\r\n    </>\r\n})\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = ({ routeCreator }) => {\r\n    const { myLocation, isShowMessage, success, message, loading, routeData, directions, destinations } = routeCreator;\r\n    return { myLocation, isShowMessage, success, message, loading, routeData, directions, destinations };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getMyLocationError, getMyLocationSuccess, showMessage, hideMessage, getMyLocation, updateRoute\r\n}\r\nconst ConnectedStartLocation = connect(mapStateToProps, mapDispatchToProps)(injectIntl(StartLocation));\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(CreateDirection))\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\step3.js",["1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136","1137","1138"],"import {\r\n    Steps, Row, Col, Form, Input, Calendar,\r\n    Button, Divider, Alert, Image, Card, Tabs, Empty, Modal, Badge, Result, TimePicker\r\n} from 'antd';\r\n\r\nimport { ClockCircleOutlined, LinkOutlined, CheckCircleTwoTone } from '@ant-design/icons';\r\nimport { useState, useEffect } from \"react\";\r\nimport moment from 'moment';\r\nimport { motion } from 'framer-motion';\r\nimport { COLOR_GRAY, COLOR_GREEN } from 'constants/ThemeConstant';\r\nconst Step3 = ({ intl, onHourSelect, onDateSelect, state, dates, showMessage, success, message }) => {\r\n\r\n    const [selectedRange, setSelectedRange] = useState({});\r\n\r\n    const hourButtons = (Array.from(Array(24).keys())).map(i => {\r\n        let hour = i + 1;\r\n        let hourText = moment(hour, [\"HH\"]).format(\"h:mm A\");\r\n        const bgColor = state.selectedHour == hour ? \"#86bbf2\" : \"#caffc4\";\r\n        if (state.selectedHour === hour) {\r\n            return <Badge count={<CheckCircleTwoTone twoToneColor=\"#2e4ae0\" style={{ top: \"10px\", right: \"10px\" }} />}>\r\n                <Button className=\"m-1\" onClick={() => { onHourSelect(hour) }} style={{ width: \"100px\", backgroundColor: bgColor }} key={i} > {hourText}</Button>\r\n\r\n            </Badge>\r\n        }\r\n        else {\r\n            return <Button className=\"m-2\" onClick={() => { onHourSelect(hour) }} style={{ width: \"100px\", backgroundColor: bgColor }} key={i} > {hourText}</Button>\r\n\r\n        }\r\n    })\r\n    let date = dates.find(item => item.date == state.pickupDate);\r\n    const availableHours = date ? date.hours.map((item, index) => {\r\n        return <div className=\"p-1 m-1 pl-3 pr-3\" key={\"availableHours\" + index}\r\n            style={{\r\n                display: \"flex\", fontSize: \"16px\", justifyContent: \"space-between\",\r\n                alignItems: \"center\", width: \"255px\", borderRadius: \"10px\", border: \"1px solid #e6ebf1\", backgroundColor: COLOR_GREEN\r\n            }}>\r\n            <span><ClockCircleOutlined /> {item.from}</span> - <span>{item.to}</span>\r\n\r\n        </div>\r\n    }) : \"\"\r\n\r\n\r\n\r\n\r\n    const dateSelect = (value) => {\r\n        onDateSelect(value);\r\n\r\n\r\n    }\r\n    const onSelectHour = (time) => {\r\n        if (time) {\r\n            onHourSelect({\r\n                from: time[0].format(\"h:mm a\"),\r\n                to: time[1].format(\"h:mm a\")\r\n            })\r\n            setSelectedRange({\r\n                from: time[0].format(\"h:mm a\"),\r\n                to: time[1].format(\"h:mm a\")\r\n            });\r\n        }\r\n\r\n    }\r\n    const dateCellRender = (value) => {\r\n        const bookingDates = dates\r\n\r\n        var bgColor = \"#f6cdcd\";\r\n\r\n        for (var i = 0; i < bookingDates.length; i++) {\r\n            const item = bookingDates[i];\r\n            if (moment(value.format('YYYY-MM-DD')).isSame(item.date) && item.available) {\r\n                bgColor = \"#caffc4\";\r\n            }\r\n            else if (moment(value.format('YYYY-MM-DD')).isSame(item.date)) {\r\n\r\n                bgColor = \"#f6cdcd\";\r\n            }\r\n        }\r\n        if (state.pickupDate == value.format('YYYY-MM-DD')) {\r\n            bgColor = \"#86bbf2\";\r\n        }\r\n        const status = <div className=\"w-100 h-100 p-2\" >\r\n            <div style={{\r\n                backgroundColor: bgColor, borderRadius: \"5px\", border: \"1px solid #d1d4e3\",\r\n                padding: \"10px\",\r\n                display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\"\r\n            }}>\r\n                {value.date()}\r\n            </div>\r\n        </div>\r\n\r\n        return (\r\n            status\r\n        );\r\n    }\r\n\r\n    return <Row>\r\n\r\n        <Col md={12}>\r\n            <div className=\"p-1 p-md-2 \" >\r\n                <Calendar fullscreen={false} dateFullCellRender={dateCellRender} onSelect={dateSelect} />\r\n            </div>\r\n        </Col>\r\n        <Col md={12}> <div className=\"p-1 p-md-2 p-lg-5\" >\r\n            {showMessage ?\r\n\r\n                <motion.div\r\n                    initial={{ opacity: 0, marginBottom: 0 }}\r\n                    animate={{\r\n                        opacity: showMessage ? 1 : 0,\r\n                        marginBottom: showMessage ? 20 : 0\r\n                    }}>\r\n                    <Alert type={success ? \"success\" : \"error\"} showIcon message={message}></Alert>\r\n                </motion.div>\r\n                : \"\"}\r\n            {state.pickupDate ?\r\n                <div>\r\n\r\n                    <Divider orientation=\"left\" >{intl.formatMessage({ id: 'text.sekectedDate' })} <span style={{ color: \"#4b64e8\" }}>{state.pickupDate}</span></Divider>\r\n                    <h5>{intl.formatMessage({ id: 'text.chooseTime' })}</h5>\r\n                    <TimePicker.RangePicker minuteStep={10} onChange={onSelectHour} format={\"h:mm a\"} />\r\n                    <Divider orientation=\"left\" ></Divider>\r\n                    <h5>{intl.formatMessage({ id: 'text.pickupHours' })}<span style={{ color: \"#4b64e8\" }}>{state.pickupDate}</span></h5>\r\n                    <div >\r\n                        {availableHours}\r\n                    </div>\r\n                </div>\r\n\r\n                : \"\"\r\n            } </div></Col>\r\n\r\n    </Row>\r\n}\r\n\r\nexport default Step3;\r\n\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\step4.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\step5.js",["1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149"],"import {\r\n    Steps, Row, Col, Form, Input, Calendar,\r\n    Button, Divider, Alert, Image, Card, Tabs, Empty, Modal, Badge, Result\r\n} from 'antd';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { motion } from 'framer-motion';\r\nimport moment from 'moment';\r\nconst Step5 = ({ intl, details, deliveryDetails, onClickEdit, message, showMessage, success }) => {\r\n    return <Row>\r\n        <Col sm={24} lg={12}>{showMessage ?\r\n            <motion.div\r\n                initial={{ opacity: 0, marginBottom: 0 }}\r\n                animate={{\r\n                    opacity: showMessage ? 1 : 0,\r\n                    marginBottom: showMessage ? 20 : 0\r\n                }}>\r\n                <Alert type={success ? \"success\" : \"error\"} showIcon message={message}></Alert>\r\n            </motion.div>\r\n            : \"\"}\r\n            <Card className=\"p-1 m-3\" >\r\n                <div >\r\n                    <h5 style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <span>{intl.formatMessage({ id: 'text.pickupInformtion' })}</span>\r\n                        <Button type=\"link\" onClick={() => { onClickEdit(\"pickup\") }} >\r\n                            <FeatherIcon icon=\"edit\" />\r\n                            {intl.formatMessage({ id: 'text.edit' })}\r\n                        </Button>\r\n                    </h5>\r\n                </div>\r\n                <article >\r\n                    {details && details.selectedHour ?\r\n                        <div >\r\n                            <h5>{details.name}</h5>\r\n                            <h5>{intl.formatMessage({ id: 'text.item' })} : {details.title}</h5>\r\n                            <h5>{intl.formatMessage({ id: 'text.phone' })}: {details.phone}</h5>\r\n                            <h5>{intl.formatMessage({ id: 'text.price' })} : {details.price}</h5>\r\n                            {//<h5>Pickup Date : {details.pickupDate} {moment(details.selectedHour, [\"HH\"]).format(\"h:mm A\")}</h5>\r\n                            }\r\n                            <h5>{intl.formatMessage({ id: 'text.pickupDate' })} : {details.pickupDate} {details.selectedHour.from} - {details.selectedHour.to}</h5>\r\n                            <p>\r\n                                {details.location}\r\n                            </p>\r\n                        </div>\r\n                        : <Empty />\r\n                    }\r\n                </article>\r\n            </Card>\r\n        </Col>\r\n        <Col sm={24} lg={12}>\r\n            <Card className=\"p-1  m-3\" >\r\n                <div >\r\n                    <h5 style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <span>{intl.formatMessage({ id: 'text.shippingInformtion' })}</span>\r\n                        <Button type=\"link\" onClick={() => { onClickEdit(\"shipping\") }} style={{ cursor: \"pointer\" }}>\r\n                            <FeatherIcon icon=\"edit\" className=\"primary\" />\r\n                            {intl.formatMessage({ id: 'text.edit' })}\r\n                        </Button>\r\n                    </h5>\r\n                </div>\r\n\r\n                <article >\r\n                    {deliveryDetails && deliveryDetails.location ?\r\n                        <div >\r\n                            <h5>{deliveryDetails.name}</h5>\r\n                            <h5>{intl.formatMessage({ id: 'text.phone' })}: {deliveryDetails.phone}</h5>\r\n                            <p>\r\n                                {deliveryDetails.location}\r\n                            </p>\r\n                        </div>\r\n                        : <Empty />\r\n                    }                    </article>\r\n            </Card>\r\n        </Col></Row>\r\n}\r\n\r\nexport default Step5;\r\n","D:\\React\\1-25\\front\\src\\views\\app-views\\bookings\\create\\step6.js",[],"D:\\React\\1-25\\front\\src\\lang\\entries\\ja_JP.js",[],"D:\\React\\1-25\\front\\src\\lang\\entries\\fr_FR.js",[],"D:\\React\\1-25\\front\\src\\lang\\entries\\zh_CN.js",[],"D:\\React\\1-25\\front\\src\\lang\\entries\\en_US.js",[],"D:\\React\\1-25\\front\\src\\services\\CalendarService.js",[],"D:\\React\\1-25\\front\\src\\components\\shared-components\\AvatarStatus\\index.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\myRoute\\destinations.js",[],"D:\\React\\1-25\\front\\src\\views\\app-views\\myRoute\\directions.js",["1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166"],"import { connect } from 'react-redux';\r\nimport { useState, useEffect } from \"react\";\r\nimport { myCalendarAddBooking } from 'redux/actions/MyCalendar';\r\nimport { getBookings, addDestination, addTagBookingItem } from 'redux/actions';\r\nimport moment from \"moment\";\r\nimport { CloseOutlined, ArrowUpOutlined, RightCircleTwoTone } from '@ant-design/icons';\r\nimport { Table, Tag, Tooltip, Card, Col, Row, Input, Image, Button, Select } from 'antd';\r\nimport { statusOptions, sortOptions } from \"constants/Options\";\r\nimport { STATUS_COLORS } from 'constants/ThemeConstant';\r\nimport parser from \"html-react-parser\";\r\nimport Item from 'antd/lib/list/Item';\r\nimport { injectIntl } from 'react-intl'\r\n\r\nconst Steps = ({ steps }) => {\r\n    return (\r\n        steps.map((item, i) => (\r\n\r\n            <Row align=\"middle \" justify=\"space-between\" key={\"ss\" + i}>\r\n                <Col flex={\"30px\"}>\r\n                    <RightCircleTwoTone />\r\n                </Col >\r\n                <Col flex={\"auto\"}>\r\n                    {parser(item.instructions)}\r\n                </Col>\r\n            </Row>\r\n\r\n        ))\r\n\r\n\r\n    );\r\n}\r\nconst Directions = ({ intl, routeId, visible = true, onClose, title = intl.formatMessage({ id: 'text.selectDestination' }), directions }) => {\r\n    const [state, setState] = useState({ visible });\r\n    const { legs } = directions.routes[0];\r\n\r\n    const closeMe = () => {\r\n        setState({ ...state, visible: false });\r\n        if (onClose)\r\n            onClose();\r\n    }\r\n    return (<>\r\n\r\n        {state.visible && <>\r\n            <div >\r\n                <Row align=\"middle \" justify=\"space-between\" className=\"pb-3\">\r\n                    <Col>\r\n                        <span className=\"text-gray-light\">{intl.formatMessage({ id: 'text.directions' })}</span>\r\n                    </Col><Col><Button onClick={closeMe} shape='circle' size=\"small\" type=\"text\"><CloseOutlined /></Button></Col>\r\n                </Row>\r\n            </div>\r\n            <div>\r\n                {\r\n                    legs.map((item, i) => (\r\n                        <div key={\"XXX\" + i}>\r\n                            <h4>{item.duration.text} ({item.distance.text})</h4>\r\n                            <Row >\r\n                                <Col><h5>{item.start_address}</h5>\r\n                                    <Steps steps={item.steps} />\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Row >\r\n                                <Col>\r\n                                    <h5>{item.end_address}</h5>\r\n\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n        }\r\n    </>);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = ({ routeCreator }) => {\r\n    const { directions } = routeCreator;\r\n\r\n    return {\r\n        directions\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { getBookings })(injectIntl(Directions));\r\n","D:\\React\\1-25\\front\\src\\components\\shared-components\\ChartWidget\\index.js",[],"D:\\React\\1-25\\front\\src\\components\\shared-components\\DonutChartWidget\\index.js",[],"D:\\React\\1-25\\front\\src\\components\\shared-components\\RegiondataWidget\\index.js",[],"D:\\React\\1-25\\front\\src\\services\\FirebaseService.js",[],"D:\\React\\1-25\\front\\src\\auth\\FirebaseAuth.js",[],"D:\\React\\1-25\\front\\src\\configs\\FirebaseConfig.js",[],{"ruleId":"1167","replacedBy":"1168"},{"ruleId":"1169","replacedBy":"1170"},{"ruleId":"1171","severity":1,"message":"1172","line":1,"column":26,"nodeType":"1173","messageId":"1174","endLine":1,"endColumn":39},{"ruleId":"1175","severity":1,"message":"1176","line":25,"column":70,"nodeType":"1177","messageId":"1178","endLine":25,"endColumn":72},{"ruleId":"1175","severity":1,"message":"1176","line":68,"column":34,"nodeType":"1177","messageId":"1178","endLine":68,"endColumn":36},{"ruleId":"1175","severity":1,"message":"1176","line":104,"column":24,"nodeType":"1177","messageId":"1178","endLine":104,"endColumn":26},{"ruleId":"1175","severity":1,"message":"1176","line":114,"column":15,"nodeType":"1177","messageId":"1178","endLine":114,"endColumn":17},{"ruleId":"1175","severity":1,"message":"1176","line":123,"column":29,"nodeType":"1177","messageId":"1178","endLine":123,"endColumn":31},{"ruleId":"1175","severity":1,"message":"1179","line":125,"column":37,"nodeType":"1177","messageId":"1178","endLine":125,"endColumn":39},{"ruleId":"1171","severity":1,"message":"1180","line":3,"column":97,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":113},{"ruleId":"1171","severity":1,"message":"1181","line":3,"column":115,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":141},{"ruleId":"1171","severity":1,"message":"1182","line":4,"column":227,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":246},{"ruleId":"1175","severity":1,"message":"1176","line":30,"column":32,"nodeType":"1177","messageId":"1178","endLine":30,"endColumn":34},{"ruleId":"1175","severity":1,"message":"1179","line":39,"column":32,"nodeType":"1177","messageId":"1178","endLine":39,"endColumn":34},{"ruleId":"1175","severity":1,"message":"1179","line":60,"column":32,"nodeType":"1177","messageId":"1178","endLine":60,"endColumn":34},{"ruleId":"1171","severity":1,"message":"1183","line":2,"column":30,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":60},{"ruleId":"1171","severity":1,"message":"1184","line":6,"column":10,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":21},{"ruleId":"1175","severity":1,"message":"1176","line":25,"column":31,"nodeType":"1177","messageId":"1178","endLine":25,"endColumn":33},{"ruleId":"1175","severity":1,"message":"1179","line":26,"column":92,"nodeType":"1177","messageId":"1178","endLine":26,"endColumn":94},{"ruleId":"1171","severity":1,"message":"1185","line":1,"column":15,"nodeType":"1173","messageId":"1174","endLine":1,"endColumn":24},{"ruleId":"1171","severity":1,"message":"1186","line":3,"column":10,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":17},{"ruleId":"1171","severity":1,"message":"1187","line":1,"column":43,"nodeType":"1173","messageId":"1174","endLine":1,"endColumn":53},{"ruleId":"1171","severity":1,"message":"1188","line":2,"column":42,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":44},{"ruleId":"1171","severity":1,"message":"1189","line":5,"column":10,"nodeType":"1173","messageId":"1174","endLine":5,"endColumn":14},{"ruleId":"1171","severity":1,"message":"1187","line":1,"column":43,"nodeType":"1173","messageId":"1174","endLine":1,"endColumn":53},{"ruleId":"1171","severity":1,"message":"1190","line":2,"column":62,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":90},{"ruleId":"1171","severity":1,"message":"1191","line":66,"column":19,"nodeType":"1173","messageId":"1174","endLine":66,"endColumn":22},{"ruleId":"1175","severity":1,"message":"1176","line":70,"column":29,"nodeType":"1177","messageId":"1178","endLine":70,"endColumn":31},{"ruleId":"1171","severity":1,"message":"1187","line":1,"column":43,"nodeType":"1173","messageId":"1174","endLine":1,"endColumn":53},{"ruleId":"1171","severity":1,"message":"1187","line":1,"column":43,"nodeType":"1173","messageId":"1174","endLine":1,"endColumn":53},{"ruleId":"1171","severity":1,"message":"1192","line":3,"column":22,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":41},{"ruleId":"1171","severity":1,"message":"1193","line":3,"column":43,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":58},{"ruleId":"1171","severity":1,"message":"1194","line":3,"column":60,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":81},{"ruleId":"1171","severity":1,"message":"1195","line":3,"column":83,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":106},{"ruleId":"1171","severity":1,"message":"1196","line":4,"column":5,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":17},{"ruleId":"1171","severity":1,"message":"1197","line":4,"column":39,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":51},{"ruleId":"1171","severity":1,"message":"1198","line":4,"column":53,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":70},{"ruleId":"1175","severity":1,"message":"1176","line":34,"column":33,"nodeType":"1177","messageId":"1178","endLine":34,"endColumn":35},{"ruleId":"1199","severity":1,"message":"1200","line":38,"column":9,"nodeType":"1173","messageId":"1201","endLine":38,"endColumn":19},{"ruleId":"1171","severity":1,"message":"1202","line":2,"column":3,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":20},{"ruleId":"1171","severity":1,"message":"1203","line":3,"column":132,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":148},{"ruleId":"1171","severity":1,"message":"1204","line":5,"column":27,"nodeType":"1173","messageId":"1174","endLine":5,"endColumn":43},{"ruleId":"1171","severity":1,"message":"1205","line":6,"column":8,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":23},{"ruleId":"1171","severity":1,"message":"1206","line":18,"column":124,"nodeType":"1173","messageId":"1174","endLine":18,"endColumn":133},{"ruleId":"1171","severity":1,"message":"1207","line":19,"column":10,"nodeType":"1173","messageId":"1174","endLine":19,"endColumn":22},{"ruleId":"1171","severity":1,"message":"1208","line":21,"column":9,"nodeType":"1173","messageId":"1174","endLine":21,"endColumn":23},{"ruleId":"1171","severity":1,"message":"1183","line":2,"column":30,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":60},{"ruleId":"1175","severity":1,"message":"1176","line":42,"column":33,"nodeType":"1177","messageId":"1178","endLine":42,"endColumn":35},{"ruleId":"1199","severity":1,"message":"1200","line":46,"column":9,"nodeType":"1173","messageId":"1201","endLine":46,"endColumn":19},{"ruleId":"1175","severity":1,"message":"1176","line":111,"column":33,"nodeType":"1177","messageId":"1178","endLine":111,"endColumn":35},{"ruleId":"1199","severity":1,"message":"1200","line":115,"column":9,"nodeType":"1173","messageId":"1201","endLine":115,"endColumn":19},{"ruleId":"1171","severity":1,"message":"1209","line":7,"column":3,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":15},{"ruleId":"1171","severity":1,"message":"1210","line":9,"column":3,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":15},{"ruleId":"1171","severity":1,"message":"1211","line":10,"column":3,"nodeType":"1173","messageId":"1174","endLine":10,"endColumn":25},{"ruleId":"1171","severity":1,"message":"1212","line":16,"column":8,"nodeType":"1173","messageId":"1174","endLine":16,"endColumn":12},{"ruleId":"1213","severity":1,"message":"1214","line":40,"column":8,"nodeType":"1215","endLine":40,"endColumn":21,"suggestions":"1216"},{"ruleId":"1171","severity":1,"message":"1217","line":7,"column":19,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":27},{"ruleId":"1213","severity":1,"message":"1218","line":13,"column":8,"nodeType":"1215","endLine":13,"endColumn":21,"suggestions":"1219"},{"ruleId":"1213","severity":1,"message":"1220","line":22,"column":8,"nodeType":"1215","endLine":22,"endColumn":10,"suggestions":"1221"},{"ruleId":"1222","severity":1,"message":"1223","line":47,"column":17,"nodeType":"1224","endLine":47,"endColumn":163},{"ruleId":"1213","severity":1,"message":"1225","line":95,"column":15,"nodeType":"1226","endLine":98,"endColumn":6},{"ruleId":"1213","severity":1,"message":"1227","line":98,"column":8,"nodeType":"1215","endLine":98,"endColumn":15,"suggestions":"1228"},{"ruleId":"1171","severity":1,"message":"1229","line":156,"column":11,"nodeType":"1173","messageId":"1174","endLine":156,"endColumn":23},{"ruleId":"1171","severity":1,"message":"1230","line":7,"column":34,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":50},{"ruleId":"1171","severity":1,"message":"1231","line":9,"column":16,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":22},{"ruleId":"1171","severity":1,"message":"1232","line":9,"column":29,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":32},{"ruleId":"1171","severity":1,"message":"1233","line":9,"column":34,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":37},{"ruleId":"1171","severity":1,"message":"1234","line":11,"column":8,"nodeType":"1173","messageId":"1174","endLine":11,"endColumn":19},{"ruleId":"1171","severity":1,"message":"1235","line":16,"column":26,"nodeType":"1173","messageId":"1174","endLine":16,"endColumn":39},{"ruleId":"1171","severity":1,"message":"1236","line":17,"column":8,"nodeType":"1173","messageId":"1174","endLine":17,"endColumn":20},{"ruleId":"1171","severity":1,"message":"1237","line":21,"column":12,"nodeType":"1173","messageId":"1174","endLine":21,"endColumn":24},{"ruleId":"1171","severity":1,"message":"1238","line":21,"column":26,"nodeType":"1173","messageId":"1174","endLine":21,"endColumn":41},{"ruleId":"1171","severity":1,"message":"1239","line":22,"column":12,"nodeType":"1173","messageId":"1174","endLine":22,"endColumn":21},{"ruleId":"1171","severity":1,"message":"1240","line":22,"column":23,"nodeType":"1173","messageId":"1174","endLine":22,"endColumn":35},{"ruleId":"1171","severity":1,"message":"1241","line":23,"column":9,"nodeType":"1173","messageId":"1174","endLine":23,"endColumn":30},{"ruleId":"1242","severity":1,"message":"1243","line":39,"column":13,"nodeType":"1244","messageId":"1178","endLine":39,"endColumn":18},{"ruleId":"1171","severity":1,"message":"1245","line":42,"column":19,"nodeType":"1173","messageId":"1174","endLine":42,"endColumn":27},{"ruleId":"1175","severity":1,"message":"1176","line":46,"column":53,"nodeType":"1177","messageId":"1178","endLine":46,"endColumn":55},{"ruleId":"1175","severity":1,"message":"1176","line":56,"column":53,"nodeType":"1177","messageId":"1178","endLine":56,"endColumn":55},{"ruleId":"1242","severity":1,"message":"1243","line":81,"column":13,"nodeType":"1244","messageId":"1178","endLine":81,"endColumn":18},{"ruleId":"1213","severity":1,"message":"1225","line":110,"column":15,"nodeType":"1226","endLine":112,"endColumn":6},{"ruleId":"1213","severity":1,"message":"1246","line":112,"column":8,"nodeType":"1215","endLine":112,"endColumn":15,"suggestions":"1247"},{"ruleId":"1213","severity":1,"message":"1248","line":119,"column":8,"nodeType":"1215","endLine":119,"endColumn":21,"suggestions":"1249"},{"ruleId":"1213","severity":1,"message":"1225","line":120,"column":15,"nodeType":"1226","endLine":134,"endColumn":6},{"ruleId":"1242","severity":1,"message":"1243","line":130,"column":17,"nodeType":"1244","messageId":"1178","endLine":130,"endColumn":22},{"ruleId":"1167","replacedBy":"1250"},{"ruleId":"1169","replacedBy":"1251"},{"ruleId":"1175","severity":1,"message":"1176","line":8,"column":33,"nodeType":"1177","messageId":"1178","endLine":8,"endColumn":35},{"ruleId":"1175","severity":1,"message":"1176","line":10,"column":38,"nodeType":"1177","messageId":"1178","endLine":10,"endColumn":40},{"ruleId":"1171","severity":1,"message":"1235","line":4,"column":26,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":39},{"ruleId":"1171","severity":1,"message":"1252","line":6,"column":10,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":23},{"ruleId":"1171","severity":1,"message":"1253","line":6,"column":71,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":91},{"ruleId":"1171","severity":1,"message":"1230","line":7,"column":20,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":36},{"ruleId":"1171","severity":1,"message":"1254","line":9,"column":8,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":16},{"ruleId":"1171","severity":1,"message":"1255","line":28,"column":56,"nodeType":"1173","messageId":"1174","endLine":28,"endColumn":68},{"ruleId":"1171","severity":1,"message":"1256","line":50,"column":11,"nodeType":"1173","messageId":"1174","endLine":50,"endColumn":19},{"ruleId":"1171","severity":1,"message":"1257","line":3,"column":10,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":14},{"ruleId":"1171","severity":1,"message":"1258","line":6,"column":46,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":64},{"ruleId":"1171","severity":1,"message":"1259","line":8,"column":10,"nodeType":"1173","messageId":"1174","endLine":8,"endColumn":25},{"ruleId":"1171","severity":1,"message":"1260","line":8,"column":27,"nodeType":"1173","messageId":"1174","endLine":8,"endColumn":45},{"ruleId":"1171","severity":1,"message":"1261","line":8,"column":47,"nodeType":"1173","messageId":"1174","endLine":8,"endColumn":59},{"ruleId":"1171","severity":1,"message":"1262","line":9,"column":22,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":27},{"ruleId":"1171","severity":1,"message":"1263","line":9,"column":29,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":36},{"ruleId":"1171","severity":1,"message":"1264","line":9,"column":38,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":43},{"ruleId":"1171","severity":1,"message":"1265","line":9,"column":61,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":66},{"ruleId":"1171","severity":1,"message":"1266","line":9,"column":83,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":88},{"ruleId":"1171","severity":1,"message":"1267","line":10,"column":8,"nodeType":"1173","messageId":"1174","endLine":10,"endColumn":22},{"ruleId":"1171","severity":1,"message":"1268","line":11,"column":8,"nodeType":"1173","messageId":"1174","endLine":11,"endColumn":12},{"ruleId":"1171","severity":1,"message":"1269","line":12,"column":25,"nodeType":"1173","messageId":"1174","endLine":12,"endColumn":36},{"ruleId":"1171","severity":1,"message":"1270","line":72,"column":24,"nodeType":"1173","messageId":"1174","endLine":72,"endColumn":37},{"ruleId":"1213","severity":1,"message":"1225","line":86,"column":15,"nodeType":"1226","endLine":88,"endColumn":6},{"ruleId":"1213","severity":1,"message":"1227","line":88,"column":8,"nodeType":"1215","endLine":88,"endColumn":15,"suggestions":"1271"},{"ruleId":"1213","severity":1,"message":"1225","line":90,"column":15,"nodeType":"1226","endLine":95,"endColumn":6},{"ruleId":"1213","severity":1,"message":"1272","line":95,"column":8,"nodeType":"1215","endLine":95,"endColumn":27,"suggestions":"1273"},{"ruleId":"1213","severity":1,"message":"1248","line":101,"column":8,"nodeType":"1215","endLine":101,"endColumn":21,"suggestions":"1274"},{"ruleId":"1171","severity":1,"message":"1275","line":105,"column":17,"nodeType":"1173","messageId":"1174","endLine":105,"endColumn":22},{"ruleId":"1171","severity":1,"message":"1229","line":124,"column":11,"nodeType":"1173","messageId":"1174","endLine":124,"endColumn":23},{"ruleId":"1171","severity":1,"message":"1276","line":128,"column":11,"nodeType":"1173","messageId":"1174","endLine":128,"endColumn":25},{"ruleId":"1171","severity":1,"message":"1277","line":134,"column":11,"nodeType":"1173","messageId":"1174","endLine":134,"endColumn":27},{"ruleId":"1171","severity":1,"message":"1278","line":195,"column":21,"nodeType":"1173","messageId":"1174","endLine":195,"endColumn":29},{"ruleId":"1171","severity":1,"message":"1279","line":5,"column":2,"nodeType":"1173","messageId":"1174","endLine":5,"endColumn":8},{"ruleId":"1171","severity":1,"message":"1231","line":5,"column":10,"nodeType":"1173","messageId":"1174","endLine":5,"endColumn":16},{"ruleId":"1171","severity":1,"message":"1280","line":5,"column":18,"nodeType":"1173","messageId":"1174","endLine":5,"endColumn":25},{"ruleId":"1171","severity":1,"message":"1281","line":14,"column":8,"nodeType":"1173","messageId":"1174","endLine":14,"endColumn":19},{"ruleId":"1213","severity":1,"message":"1225","line":35,"column":12,"nodeType":"1226","endLine":44,"endColumn":3},{"ruleId":"1213","severity":1,"message":"1282","line":44,"column":5,"nodeType":"1215","endLine":44,"endColumn":7,"suggestions":"1283"},{"ruleId":"1213","severity":1,"message":"1225","line":46,"column":12,"nodeType":"1226","endLine":51,"endColumn":3},{"ruleId":"1171","severity":1,"message":"1279","line":4,"column":5,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":11},{"ruleId":"1171","severity":1,"message":"1231","line":4,"column":13,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":19},{"ruleId":"1171","severity":1,"message":"1280","line":4,"column":21,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":28},{"ruleId":"1213","severity":1,"message":"1225","line":29,"column":15,"nodeType":"1226","endLine":38,"endColumn":6},{"ruleId":"1213","severity":1,"message":"1284","line":38,"column":8,"nodeType":"1215","endLine":38,"endColumn":10,"suggestions":"1285"},{"ruleId":"1213","severity":1,"message":"1225","line":39,"column":15,"nodeType":"1226","endLine":44,"endColumn":6},{"ruleId":"1175","severity":1,"message":"1176","line":51,"column":22,"nodeType":"1177","messageId":"1178","endLine":51,"endColumn":24},{"ruleId":"1175","severity":1,"message":"1176","line":55,"column":27,"nodeType":"1177","messageId":"1178","endLine":55,"endColumn":29},{"ruleId":"1175","severity":1,"message":"1176","line":38,"column":60,"nodeType":"1177","messageId":"1178","endLine":38,"endColumn":62},{"ruleId":"1175","severity":1,"message":"1176","line":65,"column":18,"nodeType":"1177","messageId":"1178","endLine":65,"endColumn":20},{"ruleId":"1171","severity":1,"message":"1286","line":68,"column":23,"nodeType":"1173","messageId":"1174","endLine":68,"endColumn":29},{"ruleId":"1171","severity":1,"message":"1287","line":143,"column":33,"nodeType":"1173","messageId":"1174","endLine":143,"endColumn":51},{"ruleId":"1171","severity":1,"message":"1288","line":143,"column":53,"nodeType":"1173","messageId":"1174","endLine":143,"endColumn":65},{"ruleId":"1175","severity":1,"message":"1176","line":205,"column":44,"nodeType":"1177","messageId":"1178","endLine":205,"endColumn":46},{"ruleId":"1289","severity":1,"message":"1290","line":231,"column":107,"nodeType":"1291","messageId":"1292","endLine":231,"endColumn":119},{"ruleId":"1171","severity":1,"message":"1293","line":1,"column":10,"nodeType":"1173","messageId":"1174","endLine":1,"endColumn":19},{"ruleId":"1171","severity":1,"message":"1264","line":5,"column":10,"nodeType":"1173","messageId":"1174","endLine":5,"endColumn":15},{"ruleId":"1171","severity":1,"message":"1294","line":8,"column":9,"nodeType":"1173","messageId":"1174","endLine":8,"endColumn":14},{"ruleId":"1175","severity":1,"message":"1176","line":9,"column":35,"nodeType":"1177","messageId":"1178","endLine":9,"endColumn":37},{"ruleId":"1175","severity":1,"message":"1176","line":12,"column":40,"nodeType":"1177","messageId":"1178","endLine":12,"endColumn":42},{"ruleId":"1171","severity":1,"message":"1295","line":4,"column":5,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":10},{"ruleId":"1171","severity":1,"message":"1296","line":4,"column":12,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":16},{"ruleId":"1171","severity":1,"message":"1297","line":9,"column":7,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":13},{"ruleId":"1171","severity":1,"message":"1298","line":3,"column":31,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":43},{"ruleId":"1171","severity":1,"message":"1260","line":3,"column":45,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":63},{"ruleId":"1171","severity":1,"message":"1299","line":6,"column":5,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":10},{"ruleId":"1171","severity":1,"message":"1300","line":6,"column":22,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":26},{"ruleId":"1171","severity":1,"message":"1265","line":6,"column":28,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":33},{"ruleId":"1171","severity":1,"message":"1301","line":7,"column":22,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":27},{"ruleId":"1171","severity":1,"message":"1295","line":7,"column":29,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":34},{"ruleId":"1171","severity":1,"message":"1302","line":7,"column":36,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":40},{"ruleId":"1171","severity":1,"message":"1296","line":7,"column":42,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":46},{"ruleId":"1171","severity":1,"message":"1303","line":7,"column":55,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":60},{"ruleId":"1171","severity":1,"message":"1304","line":7,"column":62,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":67},{"ruleId":"1171","severity":1,"message":"1305","line":7,"column":69,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":75},{"ruleId":"1171","severity":1,"message":"1306","line":9,"column":10,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":16},{"ruleId":"1171","severity":1,"message":"1307","line":10,"column":10,"nodeType":"1173","messageId":"1174","endLine":10,"endColumn":20},{"ruleId":"1175","severity":1,"message":"1176","line":20,"column":45,"nodeType":"1177","messageId":"1178","endLine":20,"endColumn":47},{"ruleId":"1175","severity":1,"message":"1176","line":62,"column":30,"nodeType":"1177","messageId":"1178","endLine":62,"endColumn":32},{"ruleId":"1213","severity":1,"message":"1218","line":82,"column":8,"nodeType":"1215","endLine":82,"endColumn":10,"suggestions":"1308"},{"ruleId":"1213","severity":1,"message":"1309","line":85,"column":8,"nodeType":"1215","endLine":85,"endColumn":20,"suggestions":"1310"},{"ruleId":"1171","severity":1,"message":"1295","line":4,"column":5,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":10},{"ruleId":"1171","severity":1,"message":"1296","line":4,"column":12,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":16},{"ruleId":"1171","severity":1,"message":"1297","line":10,"column":7,"nodeType":"1173","messageId":"1174","endLine":10,"endColumn":13},{"ruleId":"1311","severity":1,"message":"1312","line":4,"column":28,"nodeType":"1313","messageId":"1178","endLine":4,"endColumn":31},{"ruleId":"1171","severity":1,"message":"1302","line":6,"column":22,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":26},{"ruleId":"1171","severity":1,"message":"1295","line":6,"column":45,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":50},{"ruleId":"1171","severity":1,"message":"1314","line":10,"column":10,"nodeType":"1173","messageId":"1174","endLine":10,"endColumn":18},{"ruleId":"1289","severity":1,"message":"1290","line":29,"column":9,"nodeType":"1291","messageId":"1292","endLine":29,"endColumn":60},{"ruleId":"1213","severity":1,"message":"1225","line":117,"column":15,"nodeType":"1226","endLine":120,"endColumn":6},{"ruleId":"1213","severity":1,"message":"1227","line":120,"column":8,"nodeType":"1215","endLine":120,"endColumn":15,"suggestions":"1315"},{"ruleId":"1213","severity":1,"message":"1225","line":121,"column":15,"nodeType":"1226","endLine":123,"endColumn":6},{"ruleId":"1213","severity":1,"message":"1316","line":123,"column":8,"nodeType":"1215","endLine":123,"endColumn":22,"suggestions":"1317"},{"ruleId":"1213","severity":1,"message":"1225","line":142,"column":15,"nodeType":"1226","endLine":147,"endColumn":6},{"ruleId":"1175","severity":1,"message":"1176","line":163,"column":54,"nodeType":"1177","messageId":"1178","endLine":163,"endColumn":56},{"ruleId":"1175","severity":1,"message":"1176","line":167,"column":19,"nodeType":"1177","messageId":"1178","endLine":167,"endColumn":21},{"ruleId":"1175","severity":1,"message":"1176","line":174,"column":26,"nodeType":"1177","messageId":"1178","endLine":174,"endColumn":28},{"ruleId":"1171","severity":1,"message":"1267","line":9,"column":8,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":22},{"ruleId":"1222","severity":1,"message":"1223","line":68,"column":4,"nodeType":"1224","endLine":68,"endColumn":150},{"ruleId":"1171","severity":1,"message":"1245","line":92,"column":16,"nodeType":"1173","messageId":"1174","endLine":92,"endColumn":24},{"ruleId":"1213","severity":1,"message":"1225","line":98,"column":12,"nodeType":"1226","endLine":100,"endColumn":3},{"ruleId":"1213","severity":1,"message":"1227","line":100,"column":5,"nodeType":"1215","endLine":100,"endColumn":12,"suggestions":"1318"},{"ruleId":"1175","severity":1,"message":"1176","line":103,"column":45,"nodeType":"1177","messageId":"1178","endLine":103,"endColumn":47},{"ruleId":"1175","severity":1,"message":"1176","line":107,"column":13,"nodeType":"1177","messageId":"1178","endLine":107,"endColumn":15},{"ruleId":"1213","severity":1,"message":"1225","line":112,"column":12,"nodeType":"1226","endLine":117,"endColumn":3},{"ruleId":"1213","severity":1,"message":"1319","line":117,"column":5,"nodeType":"1215","endLine":117,"endColumn":18,"suggestions":"1320"},{"ruleId":"1175","severity":1,"message":"1176","line":144,"column":28,"nodeType":"1177","messageId":"1178","endLine":144,"endColumn":30},{"ruleId":"1171","severity":1,"message":"1321","line":1,"column":20,"nodeType":"1173","messageId":"1174","endLine":1,"endColumn":29},{"ruleId":"1171","severity":1,"message":"1322","line":5,"column":48,"nodeType":"1173","messageId":"1174","endLine":5,"endColumn":54},{"ruleId":"1171","severity":1,"message":"1323","line":6,"column":10,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":22},{"ruleId":"1171","severity":1,"message":"1324","line":7,"column":8,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":19},{"ruleId":"1171","severity":1,"message":"1325","line":8,"column":10,"nodeType":"1173","messageId":"1174","endLine":8,"endColumn":25},{"ruleId":"1171","severity":1,"message":"1326","line":9,"column":8,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":12},{"ruleId":"1171","severity":1,"message":"1327","line":14,"column":12,"nodeType":"1173","messageId":"1174","endLine":14,"endColumn":16},{"ruleId":"1171","severity":1,"message":"1328","line":22,"column":11,"nodeType":"1173","messageId":"1174","endLine":22,"endColumn":22},{"ruleId":"1171","severity":1,"message":"1329","line":27,"column":11,"nodeType":"1173","messageId":"1174","endLine":27,"endColumn":22},{"ruleId":"1171","severity":1,"message":"1257","line":3,"column":10,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":14},{"ruleId":"1171","severity":1,"message":"1281","line":4,"column":8,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":19},{"ruleId":"1171","severity":1,"message":"1259","line":8,"column":10,"nodeType":"1173","messageId":"1174","endLine":8,"endColumn":25},{"ruleId":"1171","severity":1,"message":"1260","line":8,"column":27,"nodeType":"1173","messageId":"1174","endLine":8,"endColumn":45},{"ruleId":"1171","severity":1,"message":"1261","line":8,"column":47,"nodeType":"1173","messageId":"1174","endLine":8,"endColumn":59},{"ruleId":"1171","severity":1,"message":"1262","line":9,"column":22,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":27},{"ruleId":"1171","severity":1,"message":"1263","line":9,"column":29,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":36},{"ruleId":"1171","severity":1,"message":"1264","line":9,"column":38,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":43},{"ruleId":"1171","severity":1,"message":"1330","line":9,"column":75,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":81},{"ruleId":"1171","severity":1,"message":"1266","line":9,"column":83,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":88},{"ruleId":"1171","severity":1,"message":"1267","line":10,"column":8,"nodeType":"1173","messageId":"1174","endLine":10,"endColumn":22},{"ruleId":"1171","severity":1,"message":"1268","line":11,"column":8,"nodeType":"1173","messageId":"1174","endLine":11,"endColumn":12},{"ruleId":"1171","severity":1,"message":"1331","line":14,"column":10,"nodeType":"1173","messageId":"1174","endLine":14,"endColumn":22},{"ruleId":"1171","severity":1,"message":"1332","line":14,"column":24,"nodeType":"1173","messageId":"1174","endLine":14,"endColumn":44},{"ruleId":"1171","severity":1,"message":"1333","line":14,"column":46,"nodeType":"1173","messageId":"1174","endLine":14,"endColumn":55},{"ruleId":"1171","severity":1,"message":"1314","line":15,"column":10,"nodeType":"1173","messageId":"1174","endLine":15,"endColumn":18},{"ruleId":"1289","severity":1,"message":"1290","line":66,"column":9,"nodeType":"1291","messageId":"1292","endLine":66,"endColumn":60},{"ruleId":"1171","severity":1,"message":"1270","line":79,"column":24,"nodeType":"1173","messageId":"1174","endLine":79,"endColumn":37},{"ruleId":"1213","severity":1,"message":"1225","line":93,"column":15,"nodeType":"1226","endLine":96,"endColumn":6},{"ruleId":"1213","severity":1,"message":"1227","line":96,"column":8,"nodeType":"1215","endLine":96,"endColumn":15,"suggestions":"1334"},{"ruleId":"1171","severity":1,"message":"1321","line":1,"column":20,"nodeType":"1173","messageId":"1174","endLine":1,"endColumn":29},{"ruleId":"1171","severity":1,"message":"1335","line":6,"column":24,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":36},{"ruleId":"1171","severity":1,"message":"1324","line":7,"column":8,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":19},{"ruleId":"1171","severity":1,"message":"1325","line":8,"column":10,"nodeType":"1173","messageId":"1174","endLine":8,"endColumn":25},{"ruleId":"1171","severity":1,"message":"1326","line":9,"column":8,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":12},{"ruleId":"1171","severity":1,"message":"1212","line":10,"column":8,"nodeType":"1173","messageId":"1174","endLine":10,"endColumn":12},{"ruleId":"1171","severity":1,"message":"1281","line":11,"column":8,"nodeType":"1173","messageId":"1174","endLine":11,"endColumn":19},{"ruleId":"1171","severity":1,"message":"1327","line":15,"column":12,"nodeType":"1173","messageId":"1174","endLine":15,"endColumn":16},{"ruleId":"1171","severity":1,"message":"1328","line":20,"column":11,"nodeType":"1173","messageId":"1174","endLine":20,"endColumn":22},{"ruleId":"1171","severity":1,"message":"1329","line":25,"column":11,"nodeType":"1173","messageId":"1174","endLine":25,"endColumn":22},{"ruleId":"1171","severity":1,"message":"1336","line":3,"column":8,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":19},{"ruleId":"1171","severity":1,"message":"1337","line":4,"column":8,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":16},{"ruleId":"1171","severity":1,"message":"1257","line":5,"column":10,"nodeType":"1173","messageId":"1174","endLine":5,"endColumn":14},{"ruleId":"1171","severity":1,"message":"1338","line":6,"column":10,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":21},{"ruleId":"1171","severity":1,"message":"1339","line":7,"column":10,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":15},{"ruleId":"1171","severity":1,"message":"1340","line":8,"column":10,"nodeType":"1173","messageId":"1174","endLine":8,"endColumn":31},{"ruleId":"1171","severity":1,"message":"1341","line":9,"column":10,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":32},{"ruleId":"1171","severity":1,"message":"1342","line":10,"column":10,"nodeType":"1173","messageId":"1174","endLine":10,"endColumn":34},{"ruleId":"1171","severity":1,"message":"1343","line":11,"column":10,"nodeType":"1173","messageId":"1174","endLine":11,"endColumn":14},{"ruleId":"1171","severity":1,"message":"1330","line":12,"column":10,"nodeType":"1173","messageId":"1174","endLine":12,"endColumn":16},{"ruleId":"1171","severity":1,"message":"1344","line":15,"column":10,"nodeType":"1173","messageId":"1174","endLine":15,"endColumn":20},{"ruleId":"1171","severity":1,"message":"1345","line":17,"column":24,"nodeType":"1173","messageId":"1174","endLine":17,"endColumn":36},{"ruleId":"1171","severity":1,"message":"1346","line":27,"column":11,"nodeType":"1173","messageId":"1174","endLine":27,"endColumn":17},{"ruleId":"1171","severity":1,"message":"1347","line":36,"column":10,"nodeType":"1173","messageId":"1174","endLine":36,"endColumn":15},{"ruleId":"1171","severity":1,"message":"1348","line":41,"column":9,"nodeType":"1173","messageId":"1174","endLine":41,"endColumn":17},{"ruleId":"1171","severity":1,"message":"1349","line":43,"column":9,"nodeType":"1173","messageId":"1174","endLine":43,"endColumn":24},{"ruleId":"1171","severity":1,"message":"1350","line":3,"column":10,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":15},{"ruleId":"1171","severity":1,"message":"1351","line":3,"column":17,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":20},{"ruleId":"1171","severity":1,"message":"1265","line":3,"column":38,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":43},{"ruleId":"1171","severity":1,"message":"1330","line":3,"column":52,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":58},{"ruleId":"1171","severity":1,"message":"1322","line":3,"column":60,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":66},{"ruleId":"1171","severity":1,"message":"1338","line":6,"column":10,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":21},{"ruleId":"1171","severity":1,"message":"1338","line":5,"column":10,"nodeType":"1173","messageId":"1174","endLine":5,"endColumn":21},{"ruleId":"1171","severity":1,"message":"1352","line":9,"column":10,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":15},{"ruleId":"1171","severity":1,"message":"1338","line":5,"column":10,"nodeType":"1173","messageId":"1174","endLine":5,"endColumn":21},{"ruleId":"1171","severity":1,"message":"1353","line":4,"column":10,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":28},{"ruleId":"1171","severity":1,"message":"1354","line":23,"column":9,"nodeType":"1173","messageId":"1174","endLine":23,"endColumn":26},{"ruleId":"1171","severity":1,"message":"1264","line":2,"column":10,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":15},{"ruleId":"1171","severity":1,"message":"1279","line":2,"column":34,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":40},{"ruleId":"1171","severity":1,"message":"1355","line":2,"column":42,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":50},{"ruleId":"1171","severity":1,"message":"1356","line":2,"column":68,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":72},{"ruleId":"1171","severity":1,"message":"1357","line":4,"column":10,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":23},{"ruleId":"1171","severity":1,"message":"1269","line":4,"column":25,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":36},{"ruleId":"1171","severity":1,"message":"1358","line":10,"column":3,"nodeType":"1173","messageId":"1174","endLine":10,"endColumn":17},{"ruleId":"1171","severity":1,"message":"1359","line":11,"column":3,"nodeType":"1173","messageId":"1174","endLine":11,"endColumn":24},{"ruleId":"1171","severity":1,"message":"1360","line":14,"column":3,"nodeType":"1173","messageId":"1174","endLine":14,"endColumn":14},{"ruleId":"1171","severity":1,"message":"1361","line":15,"column":3,"nodeType":"1173","messageId":"1174","endLine":15,"endColumn":19},{"ruleId":"1171","severity":1,"message":"1362","line":16,"column":3,"nodeType":"1173","messageId":"1174","endLine":16,"endColumn":17},{"ruleId":"1171","severity":1,"message":"1363","line":18,"column":8,"nodeType":"1173","messageId":"1174","endLine":18,"endColumn":13},{"ruleId":"1171","severity":1,"message":"1364","line":19,"column":10,"nodeType":"1173","messageId":"1174","endLine":19,"endColumn":20},{"ruleId":"1171","severity":1,"message":"1338","line":20,"column":10,"nodeType":"1173","messageId":"1174","endLine":20,"endColumn":21},{"ruleId":"1171","severity":1,"message":"1365","line":68,"column":18,"nodeType":"1173","messageId":"1174","endLine":68,"endColumn":27},{"ruleId":"1213","severity":1,"message":"1225","line":75,"column":13,"nodeType":"1226","endLine":79,"endColumn":4},{"ruleId":"1213","severity":1,"message":"1227","line":79,"column":6,"nodeType":"1215","endLine":79,"endColumn":14,"suggestions":"1366"},{"ruleId":"1171","severity":1,"message":"1265","line":4,"column":10,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":15},{"ruleId":"1171","severity":1,"message":"1367","line":4,"column":33,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":41},{"ruleId":"1171","severity":1,"message":"1368","line":28,"column":83,"nodeType":"1173","messageId":"1174","endLine":28,"endColumn":101},{"ruleId":"1175","severity":1,"message":"1176","line":55,"column":27,"nodeType":"1177","messageId":"1178","endLine":55,"endColumn":29},{"ruleId":"1175","severity":1,"message":"1176","line":62,"column":32,"nodeType":"1177","messageId":"1178","endLine":62,"endColumn":34},{"ruleId":"1175","severity":1,"message":"1176","line":70,"column":32,"nodeType":"1177","messageId":"1178","endLine":70,"endColumn":34},{"ruleId":"1175","severity":1,"message":"1179","line":71,"column":56,"nodeType":"1177","messageId":"1178","endLine":71,"endColumn":58},{"ruleId":"1175","severity":1,"message":"1176","line":79,"column":32,"nodeType":"1177","messageId":"1178","endLine":79,"endColumn":34},{"ruleId":"1175","severity":1,"message":"1176","line":87,"column":32,"nodeType":"1177","messageId":"1178","endLine":87,"endColumn":34},{"ruleId":"1175","severity":1,"message":"1176","line":100,"column":18,"nodeType":"1177","messageId":"1178","endLine":100,"endColumn":20},{"ruleId":"1175","severity":1,"message":"1176","line":102,"column":23,"nodeType":"1177","messageId":"1178","endLine":102,"endColumn":25},{"ruleId":"1175","severity":1,"message":"1176","line":108,"column":18,"nodeType":"1177","messageId":"1178","endLine":108,"endColumn":20},{"ruleId":"1213","severity":1,"message":"1369","line":126,"column":8,"nodeType":"1215","endLine":126,"endColumn":21,"suggestions":"1370"},{"ruleId":"1175","severity":1,"message":"1176","line":129,"column":39,"nodeType":"1177","messageId":"1178","endLine":129,"endColumn":41},{"ruleId":"1175","severity":1,"message":"1176","line":129,"column":61,"nodeType":"1177","messageId":"1178","endLine":129,"endColumn":63},{"ruleId":"1213","severity":1,"message":"1371","line":137,"column":8,"nodeType":"1215","endLine":137,"endColumn":17,"suggestions":"1372"},{"ruleId":"1171","severity":1,"message":"1301","line":3,"column":57,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":62},{"ruleId":"1171","severity":1,"message":"1373","line":5,"column":8,"nodeType":"1173","messageId":"1174","endLine":5,"endColumn":19},{"ruleId":"1171","severity":1,"message":"1261","line":6,"column":50,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":62},{"ruleId":"1171","severity":1,"message":"1306","line":11,"column":10,"nodeType":"1173","messageId":"1174","endLine":11,"endColumn":16},{"ruleId":"1222","severity":1,"message":"1223","line":45,"column":17,"nodeType":"1224","endLine":45,"endColumn":163},{"ruleId":"1199","severity":1,"message":"1374","line":109,"column":17,"nodeType":"1173","messageId":"1201","endLine":109,"endColumn":28},{"ruleId":"1213","severity":1,"message":"1225","line":138,"column":15,"nodeType":"1226","endLine":144,"endColumn":6},{"ruleId":"1213","severity":1,"message":"1375","line":144,"column":8,"nodeType":"1215","endLine":144,"endColumn":14,"suggestions":"1376"},{"ruleId":"1213","severity":1,"message":"1225","line":146,"column":15,"nodeType":"1226","endLine":148,"endColumn":6},{"ruleId":"1213","severity":1,"message":"1377","line":148,"column":8,"nodeType":"1215","endLine":148,"endColumn":10,"suggestions":"1378"},{"ruleId":"1213","severity":1,"message":"1225","line":149,"column":15,"nodeType":"1226","endLine":152,"endColumn":6},{"ruleId":"1213","severity":1,"message":"1379","line":152,"column":8,"nodeType":"1215","endLine":152,"endColumn":40,"suggestions":"1380"},{"ruleId":"1175","severity":1,"message":"1176","line":35,"column":61,"nodeType":"1177","messageId":"1178","endLine":35,"endColumn":63},{"ruleId":"1175","severity":1,"message":"1176","line":50,"column":18,"nodeType":"1177","messageId":"1178","endLine":50,"endColumn":20},{"ruleId":"1171","severity":1,"message":"1286","line":53,"column":23,"nodeType":"1173","messageId":"1174","endLine":53,"endColumn":29},{"ruleId":"1175","severity":1,"message":"1176","line":71,"column":18,"nodeType":"1177","messageId":"1178","endLine":71,"endColumn":20},{"ruleId":"1171","severity":1,"message":"1381","line":148,"column":35,"nodeType":"1173","messageId":"1174","endLine":148,"endColumn":49},{"ruleId":"1175","severity":1,"message":"1176","line":208,"column":44,"nodeType":"1177","messageId":"1178","endLine":208,"endColumn":46},{"ruleId":"1289","severity":1,"message":"1290","line":234,"column":107,"nodeType":"1291","messageId":"1292","endLine":234,"endColumn":119},{"ruleId":"1171","severity":1,"message":"1269","line":8,"column":25,"nodeType":"1173","messageId":"1174","endLine":8,"endColumn":36},{"ruleId":"1171","severity":1,"message":"1382","line":19,"column":15,"nodeType":"1173","messageId":"1174","endLine":19,"endColumn":16},{"ruleId":"1213","severity":1,"message":"1225","line":92,"column":15,"nodeType":"1226","endLine":94,"endColumn":6},{"ruleId":"1213","severity":1,"message":"1227","line":94,"column":8,"nodeType":"1215","endLine":94,"endColumn":29,"suggestions":"1383"},{"ruleId":"1175","severity":1,"message":"1176","line":122,"column":26,"nodeType":"1177","messageId":"1178","endLine":122,"endColumn":28},{"ruleId":"1171","severity":1,"message":"1278","line":193,"column":21,"nodeType":"1173","messageId":"1174","endLine":193,"endColumn":29},{"ruleId":"1171","severity":1,"message":"1296","line":3,"column":12,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":16},{"ruleId":"1171","severity":1,"message":"1296","line":1,"column":51,"nodeType":"1173","messageId":"1174","endLine":1,"endColumn":55},{"ruleId":"1213","severity":1,"message":"1225","line":32,"column":15,"nodeType":"1226","endLine":38,"endColumn":6},{"ruleId":"1213","severity":1,"message":"1384","line":38,"column":8,"nodeType":"1215","endLine":38,"endColumn":23,"suggestions":"1385"},{"ruleId":"1175","severity":1,"message":"1176","line":51,"column":25,"nodeType":"1177","messageId":"1178","endLine":51,"endColumn":27},{"ruleId":"1175","severity":1,"message":"1176","line":70,"column":28,"nodeType":"1177","messageId":"1178","endLine":70,"endColumn":30},{"ruleId":"1175","severity":1,"message":"1176","line":75,"column":39,"nodeType":"1177","messageId":"1178","endLine":75,"endColumn":41},{"ruleId":"1175","severity":1,"message":"1176","line":82,"column":28,"nodeType":"1177","messageId":"1178","endLine":82,"endColumn":30},{"ruleId":"1175","severity":1,"message":"1176","line":87,"column":39,"nodeType":"1177","messageId":"1178","endLine":87,"endColumn":41},{"ruleId":"1171","severity":1,"message":"1386","line":101,"column":15,"nodeType":"1173","messageId":"1174","endLine":101,"endColumn":16},{"ruleId":"1213","severity":1,"message":"1384","line":131,"column":8,"nodeType":"1215","endLine":131,"endColumn":23,"suggestions":"1387"},{"ruleId":"1171","severity":1,"message":"1299","line":2,"column":5,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":10},{"ruleId":"1171","severity":1,"message":"1300","line":2,"column":22,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":26},{"ruleId":"1171","severity":1,"message":"1265","line":2,"column":28,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":33},{"ruleId":"1171","severity":1,"message":"1295","line":3,"column":29,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":34},{"ruleId":"1171","severity":1,"message":"1302","line":3,"column":36,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":40},{"ruleId":"1171","severity":1,"message":"1296","line":3,"column":42,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":46},{"ruleId":"1171","severity":1,"message":"1264","line":3,"column":48,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":53},{"ruleId":"1171","severity":1,"message":"1303","line":3,"column":55,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":60},{"ruleId":"1171","severity":1,"message":"1305","line":3,"column":69,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":75},{"ruleId":"1171","severity":1,"message":"1298","line":6,"column":31,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":43},{"ruleId":"1171","severity":1,"message":"1321","line":7,"column":20,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":29},{"ruleId":"1171","severity":1,"message":"1307","line":10,"column":10,"nodeType":"1173","messageId":"1174","endLine":10,"endColumn":20},{"ruleId":"1171","severity":1,"message":"1388","line":13,"column":12,"nodeType":"1173","messageId":"1174","endLine":13,"endColumn":25},{"ruleId":"1171","severity":1,"message":"1389","line":15,"column":11,"nodeType":"1173","messageId":"1174","endLine":15,"endColumn":22},{"ruleId":"1175","severity":1,"message":"1176","line":18,"column":44,"nodeType":"1177","messageId":"1178","endLine":18,"endColumn":46},{"ruleId":"1175","severity":1,"message":"1176","line":30,"column":45,"nodeType":"1177","messageId":"1178","endLine":30,"endColumn":47},{"ruleId":"1175","severity":1,"message":"1176","line":78,"column":30,"nodeType":"1177","messageId":"1178","endLine":78,"endColumn":32},{"ruleId":"1171","severity":1,"message":"1299","line":2,"column":5,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":10},{"ruleId":"1171","severity":1,"message":"1300","line":2,"column":22,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":26},{"ruleId":"1171","severity":1,"message":"1265","line":2,"column":28,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":33},{"ruleId":"1171","severity":1,"message":"1390","line":2,"column":35,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":43},{"ruleId":"1171","severity":1,"message":"1280","line":3,"column":13,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":20},{"ruleId":"1171","severity":1,"message":"1295","line":3,"column":29,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":34},{"ruleId":"1171","severity":1,"message":"1296","line":3,"column":42,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":46},{"ruleId":"1171","severity":1,"message":"1303","line":3,"column":55,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":60},{"ruleId":"1171","severity":1,"message":"1304","line":3,"column":62,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":67},{"ruleId":"1171","severity":1,"message":"1305","line":3,"column":69,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":75},{"ruleId":"1171","severity":1,"message":"1391","line":7,"column":8,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":14},{"ruleId":"1171","severity":1,"message":"1321","line":2,"column":20,"nodeType":"1173","messageId":"1174","endLine":2,"endColumn":29},{"ruleId":"1171","severity":1,"message":"1392","line":3,"column":10,"nodeType":"1173","messageId":"1174","endLine":3,"endColumn":30},{"ruleId":"1171","severity":1,"message":"1393","line":4,"column":23,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":37},{"ruleId":"1171","severity":1,"message":"1394","line":4,"column":39,"nodeType":"1173","messageId":"1174","endLine":4,"endColumn":56},{"ruleId":"1171","severity":1,"message":"1391","line":5,"column":8,"nodeType":"1173","messageId":"1174","endLine":5,"endColumn":14},{"ruleId":"1171","severity":1,"message":"1395","line":6,"column":25,"nodeType":"1173","messageId":"1174","endLine":6,"endColumn":40},{"ruleId":"1171","severity":1,"message":"1350","line":7,"column":10,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":15},{"ruleId":"1171","severity":1,"message":"1351","line":7,"column":17,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":20},{"ruleId":"1171","severity":1,"message":"1263","line":7,"column":22,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":29},{"ruleId":"1171","severity":1,"message":"1302","line":7,"column":31,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":35},{"ruleId":"1171","severity":1,"message":"1265","line":7,"column":47,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":52},{"ruleId":"1171","severity":1,"message":"1295","line":7,"column":54,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":59},{"ruleId":"1171","severity":1,"message":"1322","line":7,"column":69,"nodeType":"1173","messageId":"1174","endLine":7,"endColumn":75},{"ruleId":"1171","severity":1,"message":"1357","line":8,"column":10,"nodeType":"1173","messageId":"1174","endLine":8,"endColumn":23},{"ruleId":"1171","severity":1,"message":"1269","line":8,"column":25,"nodeType":"1173","messageId":"1174","endLine":8,"endColumn":36},{"ruleId":"1171","severity":1,"message":"1252","line":9,"column":10,"nodeType":"1173","messageId":"1174","endLine":9,"endColumn":23},{"ruleId":"1171","severity":1,"message":"1326","line":11,"column":8,"nodeType":"1173","messageId":"1174","endLine":11,"endColumn":12},"no-native-reassign",["1396"],"no-negated-in-lhs",["1397"],"no-unused-vars","'NAV_TYPE_SIDE' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'ADD_BOOKING_ITEM' is defined but never used.","'REMOVE_TAG_TO_BOOKING_ITEM' is defined but never used.","'REMOVE_BOOKING_ITEM' is defined but never used.","'GET_MY_CALENDAR_BOOKINGS_ERROR' is defined but never used.","'getBookings' is defined but never used.","'takeEvery' is defined but never used.","'getUser' is defined but never used.","'takeLatest' is defined but never used.","'ON' is defined but never used.","'rest' is defined but never used.","'GET_DBA_LISTING_DATA_SUCCESS' is defined but never used.","'res' is assigned a value but never used.","'DESTINATION_SUCCESS' is defined but never used.","'GET_MY_LOCATION' is defined but never used.","'GET_MY_LOCATION_ERROR' is defined but never used.","'GET_MY_LOCATION_SUCCESS' is defined but never used.","'HIDE_MESSAGE' is defined but never used.","'SHOW_MESSAGE' is defined but never used.","'DESTINATION_ERROR' is defined but never used.","no-redeclare","'navigation' is already defined.","redeclared","'DashboardOutlined' is defined but never used.","'CalendarOutlined' is defined but never used.","'AUTH_PREFIX_PATH' is defined but never used.","'NavNotification' is defined but never used.","'direction' is assigned a value but never used.","'searchActive' is assigned a value but never used.","'onSearchActive' is assigned a value but never used.","'EditOutlined' is defined but never used.","'ShopOutlined' is defined but never used.","'QuestionCircleOutlined' is defined but never used.","'user' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCalendarDates'. Either include it or remove the dependency array.","ArrayExpression",["1398"],"'setState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCalendarDates'. Either include it or remove the dependency array. If 'getCalendarDates' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1399"],"React Hook useEffect has a missing dependency: 'rest.location.search'. Either include it or remove the dependency array.",["1400"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getBookings'. Either include it or remove the dependency array. If 'getBookings' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1401"],"'onChangeSort' is assigned a value but never used.","'toMomentDuration' is defined but never used.","'Drawer' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'bookingList' is defined but never used.","'DeleteTwoTone' is defined but never used.","'ScheduleList' is defined but never used.","'calendarView' is assigned a value but never used.","'setCalendarView' is assigned a value but never used.","'dateStart' is assigned a value but never used.","'setDateStart' is assigned a value but never used.","'setCalendarViewCalled' is assigned a value but never used.","no-dupe-keys","Duplicate key 'title'.","ObjectExpression","'setQuery' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMyCalendarBookings'. Either include it or remove the dependency array. If 'getMyCalendarBookings' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1402"],"React Hook useEffect has a missing dependency: 'myCalendarShowMessage'. Either include it or remove the dependency array. If 'myCalendarShowMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1403"],["1396"],["1397"],"'STATUS_COLORS' is defined but never used.","'STATUS_COLORS_BORDER' is defined but never used.","'calendar' is defined but never used.","'selectedHour' is assigned a value but never used.","'onDelete' is assigned a value but never used.","'Link' is defined but never used.","'showBookingMessage' is defined but never used.","'LoadingOutlined' is defined but never used.","'CheckCircleTwoTone' is defined but never used.","'PlusOutlined' is defined but never used.","'Space' is defined but never used.","'Tooltip' is defined but never used.","'Empty' is defined but never used.","'Input' is defined but never used.","'Radio' is defined but never used.","'BookingService' is defined but never used.","'Flex' is defined but never used.","'sortOptions' is defined but never used.","'setTableState' is assigned a value but never used.",["1404"],"React Hook useEffect has missing dependencies: 'getBookings', 'myCalendarShowMessage', and 'query'. Either include them or remove the dependency array. If 'getBookings' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1405"],["1406"],"'label' is assigned a value but never used.","'onChangeSearch' is assigned a value but never used.","'onChangeSortType' is assigned a value but never used.","'shipping' is assigned a value but never used.","'Avatar' is defined but never used.","'Divider' is defined but never used.","'IntlMessage' is defined but never used.","React Hook useEffect has missing dependencies: 'hideMessage', 'showMessage', and 'userId'. Either include them or remove the dependency array.",["1407"],"React Hook useEffect has missing dependencies: 'bookingId', 'hideMessage', and 'showMessage'. Either include them or remove the dependency array.",["1408"],"'result' is assigned a value but never used.","'userProfileVisible' is assigned a value but never used.","'selectedUser' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Component' is defined but never used.","'index' is assigned a value but never used.","'Image' is defined but never used.","'Tabs' is defined but never used.","'layout' is assigned a value but never used.","'LinkOutlined' is defined but never used.","'Steps' is defined but never used.","'Form' is defined but never used.","'Alert' is defined but never used.","'Card' is defined but never used.","'Modal' is defined but never used.","'Badge' is defined but never used.","'Result' is defined but never used.","'motion' is defined but never used.","'COLOR_GRAY' is defined but never used.",["1409"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["1410"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'debounce' is defined but never used.",["1411"],"React Hook useEffect has a missing dependency: 'tableState'. Either include it or remove the dependency array. You can also do a functional update 'setTableState(t => ...)' if you only need 'tableState' in the 'setTableState' call.",["1412"],["1413"],"React Hook useEffect has a missing dependency: 'hideBookingListMessage'. Either include it or remove the dependency array. If 'hideBookingListMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1414"],"'useEffect' is defined but never used.","'Select' is defined but never used.","'MailOutlined' is defined but never used.","'UserService' is defined but never used.","'hideAuthMessage' is defined but never used.","'Item' is defined but never used.","'form' is assigned a value but never used.","'hideMessage' is assigned a value but never used.","'showMessage' is assigned a value but never used.","'Button' is defined but never used.","'debounceTime' is defined but never used.","'distinctUntilChanged' is defined but never used.","'takeUntil' is defined but never used.",["1415"],"'LockOutlined' is defined but never used.","'FeatherIcon' is defined but never used.","'CalenDar' is defined but never used.","'useSelector' is defined but never used.","'Aside' is defined but never used.","'ShareButtonPageHeader' is defined but never used.","'ExportButtonPageHeader' is defined but never used.","'CalendarButtonPageHeader' is defined but never used.","'Main' is defined but never used.","'PageHeader' is defined but never used.","'addNewEvents' is defined but never used.","'events' is assigned a value but never used.","'state' is assigned a value but never used.","'onChange' is assigned a value but never used.","'onHandleVisible' is assigned a value but never used.","'Table' is defined but never used.","'Tag' is defined but never used.","'Cards' is defined but never used.","'DateRangePickerOne' is defined but never used.","'handleRangeChange' is assigned a value but never used.","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'statusOptions' is defined but never used.","'NewMembersData' is defined but never used.","'RecentTransactionData' is defined but never used.","'EyeOutlined' is defined but never used.","'EllipsisOutlined' is defined but never used.","'ReloadOutlined' is defined but never used.","'utils' is defined but never used.","'withRouter' is defined but never used.","'setLoaded' is assigned a value but never used.",["1416"],"'Collapse' is defined but never used.","'showBookingMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hideBookingMessage'. Either include it or remove the dependency array.",["1417"],"React Hook useEffect has missing dependencies: 'hideBookingMessage' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["1418"],"'BookingList' is defined but never used.","'destination' is already defined.","React Hook useEffect has a missing dependency: 'updateBounds'. Either include it or remove the dependency array.",["1419"],"React Hook useEffect has missing dependencies: 'getRouteData' and 'routeId'. Either include them or remove the dependency array. If 'getRouteData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1420"],"React Hook useEffect has a missing dependency: 'createRoute'. Either include it or remove the dependency array.",["1421"],"'selectedRecord' is assigned a value but never used.","'x' is assigned a value but never used.",["1422"],"React Hook useEffect has a missing dependency: 'hideMessage'. Either include it or remove the dependency array. If 'hideMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1423"],"'t' is assigned a value but never used.",["1424"],"'selectedRange' is assigned a value but never used.","'hourButtons' is assigned a value but never used.","'Calendar' is defined but never used.","'moment' is defined but never used.","'myCalendarAddBooking' is defined but never used.","'addDestination' is defined but never used.","'addTagBookingItem' is defined but never used.","'ArrowUpOutlined' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1425","fix":"1426"},{"desc":"1425","fix":"1427"},{"desc":"1428","fix":"1429"},{"desc":"1430","fix":"1431"},{"desc":"1432","fix":"1433"},{"desc":"1434","fix":"1435"},{"desc":"1430","fix":"1436"},{"desc":"1437","fix":"1438"},{"desc":"1434","fix":"1439"},{"desc":"1440","fix":"1441"},{"desc":"1442","fix":"1443"},{"desc":"1444","fix":"1445"},{"desc":"1446","fix":"1447"},{"desc":"1430","fix":"1448"},{"desc":"1449","fix":"1450"},{"desc":"1430","fix":"1451"},{"desc":"1452","fix":"1453"},{"desc":"1430","fix":"1454"},{"desc":"1455","fix":"1456"},{"desc":"1457","fix":"1458"},{"desc":"1459","fix":"1460"},{"desc":"1461","fix":"1462"},{"desc":"1463","fix":"1464"},{"desc":"1465","fix":"1466"},{"desc":"1467","fix":"1468"},{"desc":"1469","fix":"1470"},{"desc":"1469","fix":"1471"},"Update the dependencies array to be: [getCalendarDates, state.dates]",{"range":"1472","text":"1473"},{"range":"1474","text":"1473"},"Update the dependencies array to be: [rest.location.search]",{"range":"1475","text":"1476"},"Update the dependencies array to be: [getBookings, query]",{"range":"1477","text":"1478"},"Update the dependencies array to be: [getMyCalendarBookings, query]",{"range":"1479","text":"1480"},"Update the dependencies array to be: [myCalendarShowMessage, showMessage]",{"range":"1481","text":"1482"},{"range":"1483","text":"1478"},"Update the dependencies array to be: [getBookings, myCalendarShowMessage, myCalendarSuccess, query]",{"range":"1484","text":"1485"},{"range":"1486","text":"1482"},"Update the dependencies array to be: [hideMessage, showMessage, userId]",{"range":"1487","text":"1488"},"Update the dependencies array to be: [bookingId, hideMessage, showMessage]",{"range":"1489","text":"1490"},"Update the dependencies array to be: [getCalendarDates]",{"range":"1491","text":"1492"},"Update the dependencies array to be: [pickupData, state]",{"range":"1493","text":"1494"},{"range":"1495","text":"1478"},"Update the dependencies array to be: [tableState, totalResults]",{"range":"1496","text":"1497"},{"range":"1498","text":"1478"},"Update the dependencies array to be: [hideBookingListMessage, showMessage]",{"range":"1499","text":"1500"},{"range":"1501","text":"1478"},"Update the dependencies array to be: [getBookings, loaded]",{"range":"1502","text":"1503"},"Update the dependencies array to be: [hideBookingMessage, showMessage]",{"range":"1504","text":"1505"},"Update the dependencies array to be: [hideBookingMessage, state, success]",{"range":"1506","text":"1507"},"Update the dependencies array to be: [gMap, updateBounds]",{"range":"1508","text":"1509"},"Update the dependencies array to be: [getRouteData, routeId]",{"range":"1510","text":"1511"},"Update the dependencies array to be: [destinations, myLocation, gMap, createRoute]",{"range":"1512","text":"1513"},"Update the dependencies array to be: [query, destinations, getBookings]",{"range":"1514","text":"1515"},"Update the dependencies array to be: [hideMessage, isShowMessage]",{"range":"1516","text":"1517"},{"range":"1518","text":"1517"},[1382,1395],"[getCalendarDates, state.dates]",[441,454],[754,756],"[rest.location.search]",[4025,4032],"[getBookings, query]",[4656,4663],"[getMyCalendarBookings, query]",[4826,4839],"[myCalendarShowMessage, showMessage]",[3118,3125],[3288,3307],"[getBookings, myCalendarShowMessage, myCalendarSuccess, query]",[3469,3482],[1285,1287],"[hideMessage, showMessage, userId]",[1408,1410],"[bookingId, hideMessage, showMessage]",[2940,2942],"[getCalendarDates]",[3082,3094],"[pickupData, state]",[4147,4154],[4300,4314],"[tableState, totalResults]",[3610,3617],[4096,4109],"[hideBookingListMessage, showMessage]",[2888,2895],[2083,2091],"[getBookings, loaded]",[4316,4329],"[hideBookingMessage, showMessage]",[4619,4628],"[hideBookingMessage, state, success]",[5975,5981],"[gMap, updateBounds]",[6055,6057],"[getRouteData, routeId]",[6172,6204],"[destinations, myLocation, gMap, createRoute]",[3404,3425],"[query, destinations, getBookings]",[1458,1473],"[hideMessage, isShowMessage]",[4829,4844]]