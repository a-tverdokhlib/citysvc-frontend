[{"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\index.js":"1","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\App.js":"2","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\serviceWorker.js":"3","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\configs\\AppConfig.js":"4","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\index.js":"5","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\store\\index.js":"6","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\configs\\EnvironmentConfig.js":"7","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\index.js":"8","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\sagas\\index.js":"9","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\constants\\ThemeConstant.js":"10","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\hooks\\useBodyClass.js":"11","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\Auth.js":"12","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\User.js":"13","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\Booking.js":"14","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\Calendar.js":"15","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\MyCalendar.js":"16","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\routeCreator.js":"17","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\Theme.js":"18","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\sagas\\Auth.js":"19","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\sagas\\User.js":"20","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\sagas\\Booking.js":"21","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\sagas\\Calendar.js":"22","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\sagas\\MyCalendar.js":"23","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\sagas\\RouteCreator.js":"24","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\cart\\reducers.js":"25","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\lang\\index.js":"26","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\layouts\\auth-layout\\index.js":"27","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\layouts\\app-layout\\index.js":"28","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\constants\\User.js":"29","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\constants\\Theme.js":"30","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\constants\\Calendar.js":"31","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\constants\\Auth.js":"32","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\constants\\Booking.js":"33","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\constants\\routeCreator.js":"34","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\cart\\actions.js":"35","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\MyCalendarService.js":"36","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\lang\\entries\\ja_JP.js":"37","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\lang\\entries\\da_DK.js":"38","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\RouteCreator.js":"39","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\StorageService.js":"40","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\UserService.js":"41","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\BookingService.js":"42","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\RouteCreator.js":"43","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\lang\\entries\\fr_FR.js":"44","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\index.js":"45","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\configs\\NavigationConfig.js":"46","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\Footer.js":"47","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\PageHeader.js":"48","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\MobileNav.js":"49","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\HeaderNav.js":"50","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\TopNav.js":"51","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\SideNav.js":"52","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\auth\\FetchInterceptor.js":"53","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\User.js":"54","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\utils\\index.js":"55","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\Theme.js":"56","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\MyCalendar.js":"57","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\Booking.js":"58","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\shared-components\\Loading\\index.js":"59","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\index.js":"60","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\index.js":"61","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\NavLanguage.js":"62","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\NavNotification.js":"63","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\MenuContent.js":"64","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\NavProfile.js":"65","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\Logo.js":"66","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\history.js":"67","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\constants\\MyCalendar.js":"68","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\util-components\\IntlMessage\\index.js":"69","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\AppBreadcrumb.js":"70","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\myRoute\\index.js":"71","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\accounts\\index.js":"72","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\index.js":"73","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\settings\\index.js":"74","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\index.js":"75","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\index.js":"76","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\map\\index.js":"77","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\authentication\\reset-password\\index.js":"78","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\authentication\\login\\index.js":"79","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\util-components\\Icon\\index.js":"80","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\authentication\\verify-email\\index.js":"81","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\authentication\\register-1\\index.js":"82","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\authentication\\forgot-password\\index.js":"83","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\errors\\error-page-1\\index.js":"84","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\errors\\error-page-2\\index.js":"85","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\shared-components\\Flex\\index.js":"86","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\Auth.js":"87","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\empty\\index.js":"88","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\default\\index.js":"89","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\default\\DefaultDashboardData.js":"90","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\myRoute\\list.js":"91","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\myRoute\\myRoute.js":"92","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\client\\index.js":"93","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\client\\SalesDashboardData.js":"94","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\analytic\\index.js":"95","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\map\\mapstyle.js":"96","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\constants\\Options.js":"97","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\analytic\\AnalyticDashboardData.js":"98","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\components\\RegisterForm.js":"99","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\JwtAuthService.js":"100","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\myRoute\\createDirection.js":"101","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\myRoute\\bookingList.js":"102","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\PageHeaderAlt.js":"103","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\authentication\\login-1\\index.js":"104","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\constants\\ChartConstant.js":"105","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\myRoute\\directions.js":"106","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\myRoute\\destinations.js":"107","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\components\\LoginForm.js":"108","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\shared-components\\AvatarStatus\\index.js":"109","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\shared-components\\ChartWidget\\index.js":"110","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\shared-components\\DonutChartWidget\\index.js":"111","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\shared-components\\RegiondataWidget\\index.js":"112","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\assets\\svg\\icon.js":"113","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\util-components\\CustomIcon\\index.js":"114","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\accounts\\list\\UserView.js":"115","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\clientCreate.js":"116","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\settings\\timeScheduler.js":"117","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\bookingView.js":"118","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\index.js":"119","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\Calendar.js":"120","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\accounts\\list\\index.js":"121","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\step3.js":"122","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\step5.js":"123","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\step1.js":"124","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\step4.js":"125","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\step2.js":"126","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\step6.js":"127","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\accounts\\list\\userBooking.js":"128","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\accounts\\list\\userSecurity.js":"129","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\accounts\\list\\userProfile.js":"130","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\bookingPickup.js":"131","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\bookingPickupDate.js":"132","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\bookingShipping.js":"133","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\lang\\entries\\zh_CN.js":"134","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\lang\\entries\\en_US.js":"135","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\CalendarService.js":"136","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\adminList.js":"137","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\clientList.js":"138","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\constants\\ApiConstant.js":"139","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\googleMapLocation.js":"140","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\rules.js":"141","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\FirebaseService.js":"142","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\bookingDetails.js":"143","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\constants\\RulesContant.js":"144","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\components\\navigation\\dropdown\\Item.js":"145","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\auth\\FirebaseAuth.js":"146","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\shared-components\\EllipsisDropdown\\index.js":"147","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\configs\\FirebaseConfig.js":"148"},{"size":464,"mtime":1637145168000,"results":"149","hashOfConfig":"150"},{"size":964,"mtime":1637145168000,"results":"151","hashOfConfig":"150"},{"size":5086,"mtime":1637145168000,"results":"152","hashOfConfig":"150"},{"size":812,"mtime":1642915507855,"results":"153","hashOfConfig":"150"},{"size":2147,"mtime":1638235062000,"results":"154","hashOfConfig":"150"},{"size":841,"mtime":1638235062000,"results":"155","hashOfConfig":"150"},{"size":1051,"mtime":1643336815829,"results":"156","hashOfConfig":"150"},{"size":534,"mtime":1641799448803,"results":"157","hashOfConfig":"150"},{"size":398,"mtime":1641857528793,"results":"158","hashOfConfig":"150"},{"size":2666,"mtime":1640064872000,"results":"159","hashOfConfig":"150"},{"size":553,"mtime":1637145168000,"results":"160","hashOfConfig":"150"},{"size":1601,"mtime":1638235062000,"results":"161","hashOfConfig":"150"},{"size":457,"mtime":1638235062000,"results":"162","hashOfConfig":"150"},{"size":5488,"mtime":1641966279462,"results":"163","hashOfConfig":"150"},{"size":3810,"mtime":1641340487974,"results":"164","hashOfConfig":"150"},{"size":1926,"mtime":1640064872000,"results":"165","hashOfConfig":"150"},{"size":3342,"mtime":1642306481740,"results":"166","hashOfConfig":"150"},{"size":1502,"mtime":1637145168000,"results":"167","hashOfConfig":"150"},{"size":3325,"mtime":1638235062000,"results":"168","hashOfConfig":"150"},{"size":605,"mtime":1638235062000,"results":"169","hashOfConfig":"150"},{"size":3040,"mtime":1641340258453,"results":"170","hashOfConfig":"150"},{"size":2137,"mtime":1638682258000,"results":"171","hashOfConfig":"150"},{"size":1593,"mtime":1640064872000,"results":"172","hashOfConfig":"150"},{"size":2512,"mtime":1642290901599,"results":"173","hashOfConfig":"150"},{"size":1517,"mtime":1638235062000,"results":"174","hashOfConfig":"150"},{"size":330,"mtime":1637145168000,"results":"175","hashOfConfig":"150"},{"size":568,"mtime":1637145168000,"results":"176","hashOfConfig":"150"},{"size":3143,"mtime":1638235062000,"results":"177","hashOfConfig":"150"},{"size":80,"mtime":1637302048000,"results":"178","hashOfConfig":"150"},{"size":501,"mtime":1637145168000,"results":"179","hashOfConfig":"150"},{"size":673,"mtime":1638677020000,"results":"180","hashOfConfig":"150"},{"size":768,"mtime":1638235062000,"results":"181","hashOfConfig":"150"},{"size":1422,"mtime":1641964642864,"results":"182","hashOfConfig":"150"},{"size":829,"mtime":1642306581095,"results":"183","hashOfConfig":"150"},{"size":1383,"mtime":1638235062000,"results":"184","hashOfConfig":"150"},{"size":1074,"mtime":1640064872000,"results":"185","hashOfConfig":"150"},{"size":212,"mtime":1637145168000,"results":"186","hashOfConfig":"150"},{"size":212,"mtime":1637145168000,"results":"187","hashOfConfig":"150"},{"size":2029,"mtime":1642306684447,"results":"188","hashOfConfig":"150"},{"size":428,"mtime":1638235062000,"results":"189","hashOfConfig":"150"},{"size":1605,"mtime":1640939432000,"results":"190","hashOfConfig":"150"},{"size":2184,"mtime":1641252456513,"results":"191","hashOfConfig":"150"},{"size":2744,"mtime":1642291182561,"results":"192","hashOfConfig":"150"},{"size":212,"mtime":1637145168000,"results":"193","hashOfConfig":"150"},{"size":170,"mtime":1641793626944,"results":"194","hashOfConfig":"150"},{"size":2222,"mtime":1643141112654,"results":"195","hashOfConfig":"150"},{"size":589,"mtime":1637145168000,"results":"196","hashOfConfig":"150"},{"size":546,"mtime":1640959910000,"results":"197","hashOfConfig":"150"},{"size":1658,"mtime":1637145168000,"results":"198","hashOfConfig":"150"},{"size":3124,"mtime":1642456502358,"results":"199","hashOfConfig":"150"},{"size":722,"mtime":1637145168000,"results":"200","hashOfConfig":"150"},{"size":1036,"mtime":1637145168000,"results":"201","hashOfConfig":"150"},{"size":2659,"mtime":1641804063587,"results":"202","hashOfConfig":"150"},{"size":245,"mtime":1637302058000,"results":"203","hashOfConfig":"150"},{"size":6332,"mtime":1637145168000,"results":"204","hashOfConfig":"150"},{"size":1307,"mtime":1637145168000,"results":"205","hashOfConfig":"150"},{"size":1206,"mtime":1640064872000,"results":"206","hashOfConfig":"150"},{"size":3460,"mtime":1641964730204,"results":"207","hashOfConfig":"150"},{"size":570,"mtime":1637145168000,"results":"208","hashOfConfig":"150"},{"size":1490,"mtime":1643264754916,"results":"209","hashOfConfig":"150"},{"size":1336,"mtime":1638235062000,"results":"210","hashOfConfig":"150"},{"size":2282,"mtime":1637145168000,"results":"211","hashOfConfig":"150"},{"size":2986,"mtime":1637145168000,"results":"212","hashOfConfig":"150"},{"size":6591,"mtime":1638235062000,"results":"213","hashOfConfig":"150"},{"size":2512,"mtime":1642895529432,"results":"214","hashOfConfig":"150"},{"size":1655,"mtime":1637145168000,"results":"215","hashOfConfig":"150"},{"size":85,"mtime":1637145168000,"results":"216","hashOfConfig":"150"},{"size":607,"mtime":1640064872000,"results":"217","hashOfConfig":"150"},{"size":216,"mtime":1637145168000,"results":"218","hashOfConfig":"150"},{"size":1682,"mtime":1638235062000,"results":"219","hashOfConfig":"150"},{"size":646,"mtime":1642136141314,"results":"220","hashOfConfig":"150"},{"size":652,"mtime":1640905946000,"results":"221","hashOfConfig":"150"},{"size":653,"mtime":1643187353940,"results":"222","hashOfConfig":"150"},{"size":4738,"mtime":1641804612063,"results":"223","hashOfConfig":"150"},{"size":885,"mtime":1643265642203,"results":"224","hashOfConfig":"150"},{"size":811,"mtime":1643142564628,"results":"225","hashOfConfig":"150"},{"size":9109,"mtime":1642854360168,"results":"226","hashOfConfig":"150"},{"size":6346,"mtime":1641804183754,"results":"227","hashOfConfig":"150"},{"size":406,"mtime":1637145170000,"results":"228","hashOfConfig":"150"},{"size":250,"mtime":1637145168000,"results":"229","hashOfConfig":"150"},{"size":2910,"mtime":1641804172447,"results":"230","hashOfConfig":"150"},{"size":2210,"mtime":1642904537518,"results":"231","hashOfConfig":"150"},{"size":3751,"mtime":1641804278773,"results":"232","hashOfConfig":"150"},{"size":1876,"mtime":1637145170000,"results":"233","hashOfConfig":"150"},{"size":1528,"mtime":1637145170000,"results":"234","hashOfConfig":"150"},{"size":813,"mtime":1637145168000,"results":"235","hashOfConfig":"150"},{"size":1777,"mtime":1638235062000,"results":"236","hashOfConfig":"150"},{"size":191,"mtime":1638235062000,"results":"237","hashOfConfig":"150"},{"size":3898,"mtime":1643142435754,"results":"238","hashOfConfig":"150"},{"size":1418,"mtime":1637145170000,"results":"239","hashOfConfig":"150"},{"size":13726,"mtime":1642485224796,"results":"240","hashOfConfig":"150"},{"size":8380,"mtime":1642767943290,"results":"241","hashOfConfig":"150"},{"size":2269,"mtime":1642895743704,"results":"242","hashOfConfig":"150"},{"size":2650,"mtime":1638235062000,"results":"243","hashOfConfig":"150"},{"size":7362,"mtime":1637145170000,"results":"244","hashOfConfig":"150"},{"size":7650,"mtime":1639110996000,"results":"245","hashOfConfig":"150"},{"size":1225,"mtime":1642460926669,"results":"246","hashOfConfig":"150"},{"size":3197,"mtime":1637145170000,"results":"247","hashOfConfig":"150"},{"size":3784,"mtime":1642904463566,"results":"248","hashOfConfig":"150"},{"size":1478,"mtime":1638235062000,"results":"249","hashOfConfig":"150"},{"size":7925,"mtime":1642487490541,"results":"250","hashOfConfig":"150"},{"size":9315,"mtime":1642488103088,"results":"251","hashOfConfig":"150"},{"size":1468,"mtime":1637145168000,"results":"252","hashOfConfig":"150"},{"size":1388,"mtime":1642903534216,"results":"253","hashOfConfig":"150"},{"size":3679,"mtime":1638442932000,"results":"254","hashOfConfig":"150"},{"size":2997,"mtime":1642488473754,"results":"255","hashOfConfig":"150"},{"size":2666,"mtime":1642487945454,"results":"256","hashOfConfig":"150"},{"size":4594,"mtime":1642915573911,"results":"257","hashOfConfig":"150"},{"size":1080,"mtime":1637145168000,"results":"258","hashOfConfig":"150"},{"size":3313,"mtime":1637145168000,"results":"259","hashOfConfig":"150"},{"size":1258,"mtime":1637145168000,"results":"260","hashOfConfig":"150"},{"size":4245,"mtime":1637145168000,"results":"261","hashOfConfig":"150"},{"size":8795,"mtime":1637145168000,"results":"262","hashOfConfig":"150"},{"size":207,"mtime":1637145168000,"results":"263","hashOfConfig":"150"},{"size":3079,"mtime":1642461672880,"results":"264","hashOfConfig":"150"},{"size":11547,"mtime":1643218158614,"results":"265","hashOfConfig":"150"},{"size":3680,"mtime":1641804460553,"results":"266","hashOfConfig":"150"},{"size":4207,"mtime":1642803257275,"results":"267","hashOfConfig":"150"},{"size":582,"mtime":1643187371822,"results":"268","hashOfConfig":"150"},{"size":1393,"mtime":1638683668000,"results":"269","hashOfConfig":"150"},{"size":11204,"mtime":1642460193820,"results":"270","hashOfConfig":"150"},{"size":5077,"mtime":1642856458534,"results":"271","hashOfConfig":"150"},{"size":3677,"mtime":1642856817853,"results":"272","hashOfConfig":"150"},{"size":1113,"mtime":1642855948366,"results":"273","hashOfConfig":"150"},{"size":2293,"mtime":1642856643361,"results":"274","hashOfConfig":"150"},{"size":2718,"mtime":1642856240421,"results":"275","hashOfConfig":"150"},{"size":621,"mtime":1643220346315,"results":"276","hashOfConfig":"150"},{"size":10480,"mtime":1643183307106,"results":"277","hashOfConfig":"150"},{"size":3560,"mtime":1642469358089,"results":"278","hashOfConfig":"150"},{"size":5964,"mtime":1642469250977,"results":"279","hashOfConfig":"150"},{"size":3484,"mtime":1643143053691,"results":"280","hashOfConfig":"150"},{"size":5527,"mtime":1642802697700,"results":"281","hashOfConfig":"150"},{"size":3029,"mtime":1642803065927,"results":"282","hashOfConfig":"150"},{"size":209,"mtime":1637145168000,"results":"283","hashOfConfig":"150"},{"size":212,"mtime":1637145168000,"results":"284","hashOfConfig":"150"},{"size":1015,"mtime":1638856342000,"results":"285","hashOfConfig":"150"},{"size":11355,"mtime":1643219823092,"results":"286","hashOfConfig":"150"},{"size":5911,"mtime":1642902996026,"results":"287","hashOfConfig":"150"},{"size":222,"mtime":1638861084000,"results":"288","hashOfConfig":"150"},{"size":1177,"mtime":1642857170734,"results":"289","hashOfConfig":"150"},{"size":2318,"mtime":1643142899668,"results":"290","hashOfConfig":"150"},{"size":1037,"mtime":1637145168000,"results":"291","hashOfConfig":"150"},{"size":3106,"mtime":1643178211533,"results":"292","hashOfConfig":"150"},{"size":1351,"mtime":1640939648000,"results":"293","hashOfConfig":"150"},{"size":891,"mtime":1637145170000,"results":"294","hashOfConfig":"150"},{"size":724,"mtime":1637145168000,"results":"295","hashOfConfig":"150"},{"size":626,"mtime":1637145168000,"results":"296","hashOfConfig":"150"},{"size":399,"mtime":1637145168000,"results":"297","hashOfConfig":"150"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u01upw",{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564"},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572"},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602"},{"filePath":"603","messages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605"},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617"},{"filePath":"618","messages":"619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\App.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\serviceWorker.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\configs\\AppConfig.js",["639"],"import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE, DIR_LTR, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Booking Web App';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n/*\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light',\r\n\tdirection: DIR_LTR\r\n};\r\n*/\r\nexport const THEME_CONFIG = {\r\n\t\"navType\": NAV_TYPE_TOP,\r\n\t\"sideNavTheme\": SIDE_NAV_LIGHT,\r\n\t\"navCollapsed\": false,\r\n\t\"topNavColor\": \"#3e82f7\",\r\n\t\"headerNavColor\": \"\",\r\n\t\"locale\": \"da\",\r\n\t\"currentTheme\": \"light\",\r\n\t\"direction\": DIR_LTR\r\n}\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\store\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\configs\\EnvironmentConfig.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\sagas\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\constants\\ThemeConstant.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\hooks\\useBodyClass.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\Auth.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\User.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\Booking.js",["640","641","642","643","644"],"import {\r\n    GET_DBA_LISTING_DATA, HIDE_BOOKING_MESSAGE, BOOKINGS_SUCCESS, RESET_BOOKING_DATA,\r\n    GET_DBA_LISTING_DATA_SUCCESS, SHOW_BOOKING_MESSAGE, UPDATE_BOOKING, BOOKING_UPDATE_SUCCESS, ADD_BOOKING_ITEM, REMOVE_TAG_TO_BOOKING_ITEM,\r\n    GET_DBA_DATA_ERROR, SAVE_DELIVERY_DETAILS, SAVE_PICKUP_DETAILS, SAVE_NEW_BOOKING, BOOKING_ERROR, BOOKING_SUCCESS, GET_BOOKINGS, DELETE_BOOKING, BOOKING_DELETE_SUCCESS, SHOW_BOOKING_LIST_MESSAGE, HIDE_BOOKING_LIST_MESSAGE, REMOVE_BOOKING_ITEM, ADD_TAG_TO_BOOKING_ITEM\r\n} from \"../constants/Booking\";\r\nconst initialState = {\r\n    details: undefined,\r\n    images: [],\r\n    message: \"\",\r\n    url: \"\",\r\n    showMessage: false,\r\n    success: false,\r\n    loading: false,\r\n    deliveryDetails: undefined,\r\n    newBookingData: undefined\r\n}\r\nconst listInitialState = {\r\n    results: [],\r\n    loading: false,\r\n    success: false,\r\n    totalResults: 0,\r\n    showMessage: false,\r\n    message: \"\"\r\n\r\n}\r\nexport const bookingList = (state = listInitialState, action) => {\r\n    switch (action.type) {\r\n        case BOOKING_UPDATE_SUCCESS:\r\n            state.results = state.results.map(item => {\r\n                return item.id == action.data.id ? action.data : item;\r\n            })\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case BOOKING_DELETE_SUCCESS:\r\n            state.results = state.results.filter(item => {\r\n                return item.id != action.data\r\n            })\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case UPDATE_BOOKING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case DELETE_BOOKING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case GET_BOOKINGS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case BOOKINGS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                results: action.results,\r\n                limit: action.limit,\r\n                totalResults: action.totalResults,\r\n                loading: false,\r\n            }\r\n        case SHOW_BOOKING_LIST_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.message,\r\n                showMessage: true,\r\n\r\n            }\r\n        case HIDE_BOOKING_LIST_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: '',\r\n                showMessage: false,\r\n                loading: false,\r\n                success: false\r\n\r\n            }\r\n        case RESET_BOOKING_DATA:\r\n            return {\r\n                ...initialState\r\n            }\r\n        case ADD_TAG_TO_BOOKING_ITEM:\r\n            state.results = state.results.map(item => {\r\n                if (item.id === action.data.id) {\r\n                    const tag = action.data.tag;\r\n                    item = { ...item, ...tag };\r\n                }\r\n                return item;\r\n            })\r\n            return {\r\n                ...state,\r\n                totalResults: state.results.length\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst booking = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DBA_LISTING_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case GET_DBA_DATA_ERROR:\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    details: undefined,\r\n                    images: [],\r\n                    url: \"\",\r\n                },\r\n                message: action.message,\r\n                loading: false,\r\n                success: false,\r\n                showMessage: true\r\n            }\r\n        case SHOW_BOOKING_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.message,\r\n                showMessage: true,\r\n\r\n            }\r\n        case HIDE_BOOKING_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: '',\r\n                showMessage: false,\r\n                loading: false,\r\n                success: false\r\n\r\n            }\r\n        case GET_DBA_LISTING_DATA:\r\n            return {\r\n                ...state,\r\n                url: action.url,\r\n                loading: true\r\n            }\r\n        case SAVE_DELIVERY_DETAILS:\r\n            return {\r\n                ...state,\r\n                deliveryDetails: action.details\r\n            }\r\n        case SAVE_PICKUP_DETAILS:\r\n            return {\r\n                ...state,\r\n                details: action.details\r\n            }\r\n        case SAVE_NEW_BOOKING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n\r\n            }\r\n        case BOOKING_ERROR:\r\n            return {\r\n                ...state,\r\n                message: action.message,\r\n                loading: false,\r\n                success: false,\r\n                showMessage: true\r\n            }\r\n        case BOOKING_SUCCESS:\r\n            return {\r\n                ...state,\r\n                message: action.message,\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        default: return {\r\n            ...state\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default booking;","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\Calendar.js",["645","646","647","648","649","650"],"import moment from \"moment\"\r\nimport {\r\n    CREATE_CALENDAR_DATE, HIDE_CALENDAR_MESSAGE, GET_CALENDAR_DATES, CALENDAR_SUCCESS, CALENDAR_ERROR,\r\n    GET_CALENDAR_DATES_ERROR, GET_CALENDAR_DATES_SUCCESS, CREATE_CALENDAR_HOUR, SELECT_DATE, DELETE_CALENDAR_HOUR\r\n} from \"../constants/Calendar\"\r\nconst initialState = {\r\n    date: {},\r\n    loading: false,\r\n    success: false,\r\n    message: \"\",\r\n    dates: undefined,\r\n    selectedDate: moment(),\r\n    availableDate: undefined\r\n}\r\n\r\nconst calendar = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_CALENDAR_DATES:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                data: action.data\r\n            }\r\n        case GET_CALENDAR_DATES_SUCCESS:\r\n            const availableDate = action.data.find(item => item.date == moment().format('YYYY-MM-DD'))\r\n            return {\r\n                ...state,\r\n                dates: action.data,\r\n                loading: false,\r\n                success: true,\r\n                availableDate\r\n            }\r\n        case GET_CALENDAR_DATES_ERROR:\r\n            return {\r\n                ...state,\r\n                dates: undefined,\r\n                loading: false,\r\n                success: false,\r\n                showMessage: true,\r\n                message: action.message\r\n            }\r\n        case CREATE_CALENDAR_DATE:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CREATE_CALENDAR_HOUR:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case DELETE_CALENDAR_HOUR:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case CALENDAR_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                showMessage: true,\r\n                date: {},\r\n                message: action.message\r\n            }\r\n        case CALENDAR_SUCCESS:\r\n            if (action.data.type == \"hour\") {\r\n                state = updateDateHours(state, action.data);\r\n            }\r\n\r\n            else {\r\n                state = updateCalendarDates(state, action.data);\r\n                state.availableDate = action.data;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n\r\n            }\r\n        case HIDE_CALENDAR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                showMessage: false,\r\n            }\r\n        case SELECT_DATE:\r\n            return {\r\n                ...state,\r\n                selectedDate: action.selectedDate,\r\n                availableDate: action.availableDate\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nfunction updateCalendarDates(state, date) {\r\n    let found = false;\r\n    state.dates = state.dates.map(element => {\r\n\r\n        if (element.id == date.id) {\r\n            found = true;\r\n            return date;\r\n        }\r\n        else {\r\n            found = false\r\n            return element;\r\n        }\r\n\r\n    });\r\n    if (found == false)\r\n        state.dates.push(date);\r\n    return state;\r\n}\r\n\r\nfunction updateDateHours(state, data) {\r\n    state.dates = state.dates.map(item => {\r\n        if (item.id === data.dateId) {\r\n            const { from, to, id, _id } = data;\r\n            if (data.action == \"delete\") {\r\n                item.hours = item.hours.filter(hour => {\r\n                    return hour._id != id\r\n                })\r\n            }\r\n            else {\r\n                item.hours.push({\r\n                    from, to, _id\r\n                })\r\n            }\r\n        }\r\n        return item;\r\n    })\r\n    return state;\r\n\r\n}\r\nexport default calendar;","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\MyCalendar.js",["651","652","653","654"],"import {\r\n    MY_CALENDAR_ADD_BOOKING, GET_MY_CALENDAR_BOOKINGS_ERROR,\r\n    MY_CALENDAR_SUCCESS,\r\n    MY_CALENDAR_ERROR, GET_MY_CALENDAR_BOOKINGS_SUCCESS, GET_MY_CALENDAR_BOOKINGS, SHOW_MESSAGE\r\n} from \"../constants/MyCalendar\";\r\nimport { getBookings } from \"redux/actions\";\r\nconst initialState = {\r\n    success: false,\r\n    loading: false,\r\n    message: \"\",\r\n    showMessage: false,\r\n    myCalendarBookings: []\r\n}\r\n\r\nexport const myCalendar = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_MY_CALENDAR_BOOKINGS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                myCalendarBookings: action.data.results\r\n            }\r\n        case MY_CALENDAR_SUCCESS:\r\n            if (action.action == \"delete\") {\r\n                state.myCalendarBookings = state.myCalendarBookings.filter(item => item.id != action.data.id);\r\n            }\r\n            else\r\n                state.myCalendarBookings.push(action.data);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case MY_CALENDAR_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                message: action.message,\r\n                showMessage: true\r\n            }\r\n        case GET_MY_CALENDAR_BOOKINGS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case MY_CALENDAR_ADD_BOOKING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case SHOW_MESSAGE:\r\n            return {\r\n                ...state,\r\n                showMessage: action.showMessage,\r\n                success: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default myCalendar;","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\routeCreator.js",["655"],"import {\r\n    ADD_DESTINATION, DESTINATION_SUCCESS, GET_MY_LOCATION, GET_MY_LOCATION_ERROR, GET_MY_LOCATION_SUCCESS,\r\n    HIDE_MESSAGE, REMOVE_DESTINATION, SHOW_MESSAGE, DESTINATION_ERROR, ROUTE_DATA_ERROR, ROUTE_DATA_SUCCESS, DIRECTION_ERROR, DIRECTION_SUCCESS\r\n} from \"../constants/routeCreator\";\r\nconst initialState = {\r\n    success: false,\r\n    loading: false,\r\n    message: \"\",\r\n    myLocation: {},\r\n    isShowMessage: false,\r\n    destinations: [],\r\n    routeData: undefined,\r\n    directions: {}\r\n}\r\n\r\nexport const RouteCreator = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_MY_LOCATION:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_MY_LOCATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                myLocation: action.data\r\n            }\r\n        case GET_MY_LOCATION_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                message: action.data\r\n            }\r\n        case SHOW_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.data,\r\n                loading: false,\r\n                isShowMessage: true,\r\n            }\r\n        case HIDE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                isShowMessage: false,\r\n            }\r\n        case ADD_DESTINATION:\r\n\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n\r\n            }\r\n        case REMOVE_DESTINATION:\r\n            state.destinations = state.destinations.filter(item => {\r\n                return item.id != action.data\r\n            })\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case DESTINATION_SUCCESS:\r\n            // state.destinations.push(action.data);\r\n            state.destinations = action.data;\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case DESTINATION_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false\r\n            }\r\n        case ROUTE_DATA_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false\r\n            }\r\n        case ROUTE_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                routeData: action.data,\r\n                destinations: action.data.destination,\r\n                myLocation: action.data.myLocation ? action.data.myLocation : {}\r\n            }\r\n        case DIRECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: false,\r\n                directions: {}\r\n            }\r\n        case DIRECTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                success: true,\r\n                directions: action.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default RouteCreator;","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\reducers\\Theme.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\sagas\\Auth.js",["656"],"import { all, takeEvery, put, fork, call, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK,\r\n\tVERIFY_EMAIL\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\nimport JwtAuthService from 'services/JwtAuthService';\r\nimport StorageService from 'services/StorageService';\r\nexport function* verifyEmail() {\r\n\tyield takeEvery(VERIFY_EMAIL, function* ({ payload }) {\r\n\r\n\t\ttry {\r\n\t\t\tconst user = yield call(JwtAuthService.verifyEmail, payload);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\r\n\t\t\t\tStorageService.save(AUTH_TOKEN, user.tokens);\r\n\t\t\t\tyield put(authenticated(user.user));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err.message));\r\n\t\t}\r\n\t});\r\n}\r\nexport function* signInWithFBEmail() {\r\n\tyield takeEvery(SIGNIN, function* ({ payload }) {\r\n\r\n\t\ttry {\r\n\t\t\tconst user = yield call(JwtAuthService.login, payload);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\r\n\t\t\t\tStorageService.save(AUTH_TOKEN, user.tokens);\r\n\t\t\t\tyield put(authenticated(user.user));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err.message));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n\tyield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n\tyield takeEvery(SIGNUP, function* ({ payload }) {\r\n\t\ttry {\r\n\t\t\tdelete payload.confirm;\r\n\t\t\tconst user = yield call(JwtAuthService.signUp, payload);\r\n\t\t\tyield put(showAuthMessage(\"Registration Succesful\"));\r\n\t\t\tyield put(signUpSuccess(user.tokens))\r\n\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err.message));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n\tyield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n\tyield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n\t]);\r\n}\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\sagas\\User.js",["657","658"],"import { all, takeEvery, put, fork, call, takeLatest } from 'redux-saga/effects';\r\nimport { GET_USER } from '../constants/User';\r\nimport { getUser, userSuccess } from '../actions/User';\r\nimport UserService from 'services/UserService';\r\nexport function* fetchUser() {\r\n    yield takeLatest(GET_USER, function* (payload) {\r\n        try {\r\n            const user = yield call(UserService.me);\r\n            yield put(userSuccess(user))\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    })\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(fetchUser),\r\n    ]);\r\n}","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\sagas\\Booking.js",["659","660","661","662"],"import { all, takeEvery, put, fork, call, takeLatest } from 'redux-saga/effects';\r\nimport { DELETE_BOOKING, GET_BOOKINGS, GET_DBA_LISTING_DATA, GET_DBA_LISTING_DATA_SUCCESS, SAVE_NEW_BOOKING, UPDATE_BOOKING } from \"../constants/Booking\";\r\nimport { bookingsSuccess, getDBAListingDataSuccess, bookingUpdateSuccess, showBookingListMessage, showBookingMessage, getDBAListingDataError, bookingError, bookingSuccess, bookingsDeleteSuccess } from '../actions/Booking';\r\n\r\nimport BookingService from 'services/BookingService';\r\nexport function* getDBAListingData() {\r\n    yield takeEvery(GET_DBA_LISTING_DATA, function* ({ url }) {\r\n        try {\r\n            const data = yield call(BookingService.getDBAListingData, url);\r\n            yield put(getDBAListingDataSuccess(data));\r\n            yield put(showBookingMessage([\"URL succesfully scrapped.\"]));\r\n\r\n        } catch (err) {\r\n            yield put(getDBAListingDataError(err.message));\r\n        }\r\n    });\r\n}\r\n\r\nexport function* saveNewBooking() {\r\n    yield takeEvery(SAVE_NEW_BOOKING, function* (data) {\r\n        try {\r\n\r\n            const { details: pickup, deliveryDetails: shipping, url, images } = data;\r\n            const res = yield call(BookingService.add, {\r\n                shipping,\r\n                pickup, url,\r\n                images\r\n            });\r\n            yield put(bookingSuccess(res));\r\n            yield put(showBookingMessage([\"Booking saved.\"]));\r\n\r\n        } catch (err) {\r\n            yield put(bookingError(err.message));\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\nexport function* getBookings1() {\r\n    yield takeEvery(GET_BOOKINGS, function* (data) {\r\n        try {\r\n            const res = yield call(BookingService.getBookings, data.data);\r\n            yield put(bookingsSuccess(res));\r\n        } catch (err) {\r\n            console.log(err)\r\n            //yield put(bookingError(err.message));\r\n        }\r\n    });\r\n}\r\nexport function* updateBooking() {\r\n    yield takeEvery(UPDATE_BOOKING, function* (data) {\r\n        try {\r\n            const res = yield call(BookingService.updateBooking, data.data);\r\n            yield put(bookingUpdateSuccess(res));\r\n\r\n        } catch (err) {\r\n            yield put(bookingError(err.message));\r\n        }\r\n    });\r\n}\r\nexport function* deleteBooking() {\r\n    yield takeEvery(DELETE_BOOKING, function* (data) {\r\n        try {\r\n\r\n            const res = yield call(BookingService.deleteBooking, data.data.id);\r\n            yield put(bookingsDeleteSuccess(data.data.id));\r\n            yield put(showBookingListMessage(\"Booking deleted.\"));\r\n        } catch (err) {\r\n            if (err.message == 'Unauthorized')\r\n                yield put(showBookingListMessage('You cannot delete this booking anymore.'));\r\n            else\r\n                yield put(showBookingListMessage(err.message));\r\n        }\r\n    });\r\n}\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(getDBAListingData),\r\n        fork(saveNewBooking),\r\n        fork(updateBooking),\r\n        fork(getBookings1),\r\n        fork(deleteBooking)\r\n    ]);\r\n}\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\sagas\\Calendar.js",["663","664","665"],"import { all, takeEvery, put, fork, call, takeLatest } from 'redux-saga/effects';\r\nimport { calendarError, calendarSuccess, ON, onGetDatesError, onGetDatesSuccess } from '../actions/Calendar';\r\nimport CalendarService from '../../services/CalendarService';\r\nimport { CREATE_CALENDAR_DATE, CREATE_CALENDAR_HOUR, DELETE_CALENDAR_HOUR, GET_CALENDAR_DATES } from '../constants/Calendar';\r\nimport { rest } from 'lodash';\r\nexport function* getCalendarDates() {\r\n    yield takeEvery(GET_CALENDAR_DATES, function* () {\r\n        try {\r\n            const data = yield call(CalendarService.getDates);\r\n            yield put(onGetDatesSuccess(data));\r\n        } catch (err) {\r\n            yield put(onGetDatesError(err.message));\r\n        }\r\n    });\r\n}\r\n\r\nexport function* createCalendarDate() {\r\n    yield takeEvery(CREATE_CALENDAR_DATE, function* ({ data: { date, available } }) {\r\n        try {\r\n            const res = yield call(CalendarService.createDate, { date, available });\r\n            yield put(calendarSuccess(res));\r\n        } catch (err) {\r\n            yield put(calendarError(err.message));\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport function* createCalendarHour() {\r\n    yield takeEvery(CREATE_CALENDAR_HOUR, function* (data) {\r\n        try {\r\n            const res = yield call(CalendarService.createHour, data);\r\n            res.type = \"hour\";\r\n            res.dateId = data.dateId;\r\n            yield put(calendarSuccess(res));\r\n        } catch (err) {\r\n            yield put(calendarError(err.message));\r\n        }\r\n    });\r\n\r\n}\r\nexport function* deleteCalendarHour() {\r\n    yield takeEvery(DELETE_CALENDAR_HOUR, function* (data) {\r\n        try {\r\n            const res = yield call(CalendarService.deleteHour, data);\r\n            res.type = \"hour\";\r\n            res.action = \"delete\";\r\n            yield put(calendarSuccess(res));\r\n        } catch (err) {\r\n            yield put(calendarError(err.message));\r\n        }\r\n    });\r\n}\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(createCalendarDate),\r\n        fork(getCalendarDates),\r\n        fork(createCalendarHour),\r\n        fork(deleteCalendarHour),\r\n    ]);\r\n}","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\sagas\\MyCalendar.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\sagas\\RouteCreator.js",["666","667","668","669","670","671","672","673"],"import { all, takeEvery, put, fork, call, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n    ADD_DESTINATION, DESTINATION_SUCCESS, GET_MY_LOCATION, GET_MY_LOCATION_ERROR, GET_MY_LOCATION_SUCCESS,\r\n    HIDE_MESSAGE, REMOVE_DESTINATION, SHOW_MESSAGE, DESTINATION_ERROR, GET_ROUTE_DATA, UPDATE_ROUTE\r\n} from \"../constants/routeCreator\";\r\nimport { destinationError, destinationSuccess, showMessage, routeDataSuccess, routeDataError } from \"../actions/RouteCreator\";\r\nimport RouteCreatorService from \"services/RouteCreator\";\r\nexport function* addDestination() {\r\n    yield takeEvery(ADD_DESTINATION, function* ({ data }) {\r\n        try {\r\n\r\n            const res = yield call(RouteCreatorService.addDestination, data);\r\n            yield put(destinationSuccess(res));\r\n            yield put(showMessage(\"Destination added\"));\r\n\r\n        } catch (err) {\r\n            yield put(destinationError(err.message));\r\n            yield put(showMessage(err.message));\r\n        }\r\n    });\r\n}\r\nexport function* updateRoute() {\r\n    yield takeEvery(UPDATE_ROUTE, function* ({ id, data }) {\r\n        try {\r\n\r\n            const res = yield call(RouteCreatorService.updateRoute, id, data);\r\n            yield put(routeDataSuccess(res));\r\n            yield put(showMessage(\"Updated\"));\r\n\r\n        } catch (err) {\r\n            yield put(routeDataError(err.message));\r\n            yield put(showMessage(err.message));\r\n        }\r\n    });\r\n}\r\nexport function* getData() {\r\n    yield takeEvery(GET_ROUTE_DATA, function* ({ data }) {\r\n        try {\r\n\r\n            const res = yield call(RouteCreatorService.data, data);\r\n            yield put(routeDataSuccess(res));\r\n            //   yield put(showMessage(\"Destination added\"));\r\n\r\n        } catch (err) {\r\n            yield put(routeDataError(err.message));\r\n            yield put(showMessage(err.message));\r\n        }\r\n    });\r\n}\r\nexport function* removeDestination() {\r\n    yield takeEvery(REMOVE_DESTINATION, function* ({ data }) {\r\n        try {\r\n\r\n            const res = yield call(RouteCreatorService.removeDestination, data);\r\n            yield put(destinationSuccess(res));\r\n            yield put(showMessage(\"Destination removed\"));\r\n\r\n        } catch (err) {\r\n            yield put(destinationError(err.message));\r\n            yield put(showMessage(err.message));\r\n        }\r\n    });\r\n}\r\nexport default function* rootSaga() {\r\n    yield all([\r\n\r\n        fork(addDestination),\r\n        fork(removeDestination),\r\n        fork(updateRoute),\r\n        fork(getData)\r\n    ]);\r\n}","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\cart\\reducers.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\lang\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\layouts\\auth-layout\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\layouts\\app-layout\\index.js",["674","675"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig, { navigationConfigClient } from \"configs/NavigationConfig\";\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location, direction }) => {\r\n  const userData = useSelector(state => state.user.userData);\r\n  if (userData && userData.role == \"admin\") {\r\n    var navigation = navigationConfig;\r\n  }\r\n  else {\r\n    var navigation = navigationConfigClient;\r\n  }\r\n  const currentRouteInfo = utils.getRouteInfo(navigation, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = screens.length === 0 ? false : !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if (isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if (direction === DIR_LTR) {\r\n      return { paddingLeft: getLayoutGutter() }\r\n    }\r\n    if (direction === DIR_RTL) {\r\n      return { paddingRight: getLayoutGutter() }\r\n    }\r\n    return { paddingLeft: getLayoutGutter() }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile} />\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo} /> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo} /> : null}\r\n        <Layout className=\"app-layout\" style={getLayoutDirectionGutter()}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } = theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\constants\\User.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\constants\\Theme.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\constants\\Calendar.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\constants\\Auth.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\constants\\Booking.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\constants\\routeCreator.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\cart\\actions.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\MyCalendarService.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\lang\\entries\\ja_JP.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\lang\\entries\\da_DK.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\RouteCreator.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\StorageService.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\UserService.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\BookingService.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\RouteCreator.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\lang\\entries\\fr_FR.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\configs\\NavigationConfig.js",["676","677","678"],"import {\r\n  DashboardOutlined,\r\n  EnvironmentOutlined, AppstoreOutlined, UserOutlined, BranchesOutlined, ScheduleOutlined, SettingOutlined, UnorderedListOutlined, CalendarOutlined\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\n\r\n\r\nconst adminMenu = [{\r\n  key: 'dashboards',\r\n  path: `${APP_PREFIX_PATH}/dashboards`,\r\n  title: 'sidenav.dashboard',\r\n  icon: AppstoreOutlined,\r\n  breadcrumb: true,\r\n  submenu: []\r\n},\r\n{\r\n  key: 'bookings',\r\n  path: `${APP_PREFIX_PATH}/bookings`,\r\n  title: 'sidenav.bookings',\r\n  icon: ScheduleOutlined,\r\n  breadcrumb: false,\r\n  submenu: [\r\n    {\r\n      key: 'bookings-list',\r\n      path: `${APP_PREFIX_PATH}/bookings-list`,\r\n      title: 'sidenav.bookings.list',\r\n      icon: UnorderedListOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'bookings-map',\r\n      path: `${APP_PREFIX_PATH}/bookings-map`,\r\n      title: 'sidenav.bookings.map',\r\n      icon: EnvironmentOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n  ]\r\n},\r\n{\r\n  key: 'myroute',\r\n  path: `${APP_PREFIX_PATH}/my-routes`,\r\n  title: 'sidenav.routeMaker',\r\n  icon: BranchesOutlined,\r\n  breadcrumb: false,\r\n  submenu: []\r\n},\r\n// {\r\n//   key: 'calendar',\r\n//   path: `${APP_PREFIX_PATH}/calendar`,\r\n//   title: 'sidenav.calendar',\r\n//   icon: CalendarOutlined,\r\n//   breadcrumb: true,\r\n//   submenu: []\r\n// },\r\n{\r\n  key: 'accounts',\r\n  path: `${APP_PREFIX_PATH}/accounts`,\r\n  title: 'sidenav.accounts',\r\n  icon: UserOutlined,\r\n  breadcrumb: true,\r\n  submenu: []\r\n},\r\n{\r\n  key: 'settings',\r\n  path: `${APP_PREFIX_PATH}/settings`,\r\n  title: 'sidenav.settings',\r\n  icon: SettingOutlined,\r\n  breadcrumb: true,\r\n  submenu: []\r\n}\r\n]\r\nconst clientMenu = [{\r\n  key: 'dashboards',\r\n  path: `${APP_PREFIX_PATH}/dashboards`,\r\n  title: 'sidenav.dashboard',\r\n  icon: AppstoreOutlined,\r\n  breadcrumb: true,\r\n  submenu: []\r\n},\r\n{\r\n  key: 'bookings',\r\n  path: `${APP_PREFIX_PATH}/bookings-list`,\r\n  title: 'sidenav.bookings',\r\n  icon: ScheduleOutlined,\r\n  breadcrumb: false,\r\n  submenu: [\r\n  ]\r\n},\r\n\r\n]\r\n\r\nconst navigationConfig = [\r\n  ...adminMenu\r\n]\r\n\r\nexport const navigationConfigClient = [...clientMenu];\r\nexport default navigationConfig;\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\Footer.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\PageHeader.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\MobileNav.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\HeaderNav.js",["679","680","681","682"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavNotification from './NavNotification';\r\nimport NavProfile from './NavProfile';\r\nimport NavLanguage from './NavLanguage';\r\n\r\n\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme, direction } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchActive = () => {\r\n    setSearchActive(true)\r\n  }\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if (!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = () => {\r\n    if (!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff')\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if (isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if (navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{ backgroundColor: headerNavColor }}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode} />\r\n        <div className=\"nav\" style={{ width: `calc(100% - ${getNavWidth()})` }}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">\r\n              {\r\n                isNavTop && !isMobile ?\r\n                  null\r\n                  :\r\n                  <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => { onToggle() }}>\r\n                    {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                  </li>\r\n              }\r\n\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            {//<NavNotification />\r\n              <NavLanguage />\r\n            }\r\n            <NavProfile />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction } = theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme, direction }\r\n};\r\n\r\nexport default connect(mapStateToProps, { toggleCollapsedNav, onMobileNavToggle })(HeaderNav);","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\TopNav.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\SideNav.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\auth\\FetchInterceptor.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\User.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\utils\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\Theme.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\MyCalendar.js",["683"],"import {\r\n    MY_CALENDAR_ADD_BOOKING, GET_MY_CALENDAR_BOOKINGS_ERROR,\r\n    MY_CALENDAR_SUCCESS,\r\n    MY_CALENDAR_ERROR, GET_MY_CALENDAR_BOOKINGS_SUCCESS, GET_MY_CALENDAR_BOOKINGS, SHOW_MESSAGE, MY_CALENDAR_DELETE_BOOKING\r\n} from \"../constants/MyCalendar\";\r\n\r\nexport const getMyCalendarBookings = (data) => {\r\n    return {\r\n        type: GET_MY_CALENDAR_BOOKINGS,\r\n        data\r\n    }\r\n};\r\nexport const getMyCalendarBookingsSuccess = (data) => {\r\n    return {\r\n        type: GET_MY_CALENDAR_BOOKINGS_SUCCESS,\r\n        data\r\n    }\r\n};\r\nexport const myCalendarAddBooking = (data) => {\r\n    return {\r\n        type: MY_CALENDAR_ADD_BOOKING,\r\n        data\r\n\r\n    }\r\n};\r\nexport const myCalendarDeleteBooking = (data) => {\r\n    return {\r\n        type: MY_CALENDAR_DELETE_BOOKING,\r\n        data\r\n\r\n    }\r\n};\r\nexport const myCalendarSuccess = (data, action) => {\r\n    return {\r\n        type: MY_CALENDAR_SUCCESS,\r\n        data,\r\n        action\r\n\r\n    }\r\n};\r\nexport const myCalendarError = (message) => {\r\n    return {\r\n        type: MY_CALENDAR_ERROR,\r\n        message\r\n\r\n    }\r\n};\r\nexport const myCalendarShowMessage = (showMessage) => {\r\n    return {\r\n        type: SHOW_MESSAGE,\r\n        showMessage\r\n\r\n    }\r\n};","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\Booking.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\shared-components\\Loading\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\NavLanguage.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\NavNotification.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\MenuContent.js",["684","685","686","687"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig, { navigationConfigClient } from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport { useSelector } from \"react-redux\";\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n  const { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  const closeMobileNav = () => {\r\n    if (isMobile) {\r\n      onMobileNavToggle(false)\r\n    }\r\n  }\r\n  const userData = useSelector(state => state.user.userData);\r\n\r\n  if (userData && userData.role == \"admin\") {\r\n    var navigation = navigationConfig;\r\n  }\r\n  else {\r\n    var navigation = navigationConfigClient;\r\n  }\r\n\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigation.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  const userData = useSelector(state => state.user.userData);\r\n  if (userData && userData.role == \"admin\") {\r\n    var navigation = navigationConfig;\r\n  }\r\n  else {\r\n    var navigation = navigationConfigClient;\r\n  }\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigation.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\NavProfile.js",["688","689","690","691"],"import React, { } from \"react\";\r\nimport { Menu, Dropdown, Avatar } from \"antd\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n  EditOutlined,\r\n  SettingOutlined,\r\n  ShopOutlined,\r\n  QuestionCircleOutlined,\r\n  LogoutOutlined\r\n} from '@ant-design/icons';\r\nimport Icon from 'components/util-components/Icon';\r\nimport { signOut } from 'redux/actions/Auth';\r\nimport { useSelector } from \"react-redux\";\r\nimport user from \"redux/reducers/User\";\r\n\r\n\r\nexport const NavProfile = ({ intl, signOut }) => {\r\n  const userData = useSelector((state) => state.user.userData);\r\n  const menuItem = [\r\n\r\n\r\n    {\r\n      title: intl.formatMessage({ id: 'text.accountSettings' }),\r\n      icon: SettingOutlined,\r\n      path: \"/\"\r\n    },\r\n\r\n  ]\r\n  if (userData) {\r\n    var profileImg = userData.avatar || \"/img/avatars/avatar.png\";\r\n    var profileMenu = (\r\n      <div className=\"nav-profile nav-dropdown\">\r\n        <div className=\"nav-profile-header\">\r\n          <div className=\"d-flex\">\r\n            <Avatar size={45} src={profileImg} />\r\n            <div className=\"pl-3\">\r\n              <h4 className=\"mb-0\">{userData.name}</h4>\r\n              <span className=\"text-muted\">{userData.email}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"nav-profile-body\">\r\n          <Menu>\r\n            {menuItem.map((el, i) => {\r\n              return (\r\n                <Menu.Item key={i}>\r\n                  <Link to={\"/app/accounts/\" + userData.id}>\r\n                    <Icon className=\"mr-3\" type={el.icon} />\r\n                    <span className=\"font-weight-normal\">{el.title}</span>\r\n                  </Link>\r\n                </Menu.Item>\r\n              );\r\n            })}\r\n            <Menu.Item key={menuItem.length + 1} onClick={e => signOut()}>\r\n              <span>\r\n                <LogoutOutlined className=\"mr-3\" />\r\n                <span className=\"font-weight-normal\">{intl.formatMessage({ id: 'text.signOut' })}</span>\r\n              </span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <Dropdown placement=\"bottomRight\" overlay={profileMenu} trigger={[\"click\"]}>\r\n      <Menu className=\"d-flex align-item-center\" mode=\"horizontal\">\r\n        <Menu.Item key=\"profile\">\r\n          <Avatar src={profileImg} />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nexport default connect(null, { signOut })(injectIntl(NavProfile))\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\Logo.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\history.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\constants\\MyCalendar.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\util-components\\IntlMessage\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\AppBreadcrumb.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\myRoute\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\accounts\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\settings\\index.js",["692"],"import { useState, useEffect } from \"react\";\r\nimport {\r\n    Tabs, Calendar, Row, Col, Switch, Tooltip,\r\n    Empty,\r\n} from \"antd\";\r\nimport { connect } from 'react-redux';\r\nimport IntlMessage from \"components/util-components/IntlMessage\";\r\nimport { getCalendarDates, createCalendarDate, createCalendarHour, onSelectDate } from \"redux/actions/Calendar\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CREATE_CALENDAR_DATE } from \"../../../redux/constants/Calendar\";\r\nimport { COLOR_GREEN, COLOR_RED, } from 'constants/ThemeConstant';\r\nimport TimeScheduler from './timeScheduler';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nconst MainSettings = (props) => {\r\n    const { dates, getCalendarDates, onSelectDate, loading } = props;\r\n\r\n    const [state] = useState({\r\n        dates: dates\r\n    });\r\n\r\n    const dateCellRender = (value) => {\r\n        const date = dates.find(item => item.date === value.format('YYYY-MM-DD'));\r\n\r\n        return <CalendarCell date={value} available={date ? date.available : false} loading={loading} />\r\n    }\r\n    const onDateSelect = (selectedDate, e) => {\r\n        const availableDate = dates.find(item => item.date === selectedDate.format('YYYY-MM-DD'))\r\n        onSelectDate({ selectedDate, availableDate })\r\n    }\r\n    const onDateChange = (value, e) => {\r\n        console.log(value)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getCalendarDates();\r\n    }, [state.dates]);\r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"1\" >\r\n                <TabPane tab={<IntlMessage id=\"button.calendar\" />} key=\"1\">\r\n\r\n                    <Row>\r\n                        <Col xs={24} md={14} >\r\n                            <div>\r\n                                {dates ?\r\n\r\n                                    <Calendar onChange={onDateChange} fullscreen={true} dateFullCellRender={dateCellRender} onSelect={onDateSelect} />\r\n                                    : <Empty />\r\n                                }\r\n\r\n                            </div>\r\n                        </Col><Col xs={24} md={10}>\r\n\r\n                            {\r\n                                dates ?\r\n                                    <div className=\"m-1 m-md-4 mt-2 mt-md-4 mt-lg-1 pt-2 \">\r\n                                        <TimeScheduler\r\n                                        />\r\n                                    </div>\r\n                                    : <Empty />\r\n                            /*dates ?\r\n                                <div className=\"m-1 m-md-4 mt-2 mt-md-4 mt-lg-1 pt-2 \">\r\n                                    <TimeScheduler selectedDate={state.selectedDate} date={\r\n                                        dates.find(item => item.date===state.selectedDate.format('YYYY-MM-DD'))\r\n                                    } />\r\n                                </div>\r\n                                : <Empty />\r\n                                */}</Col>\r\n                    </Row>\r\n\r\n                </TabPane>\r\n                <TabPane tab={<IntlMessage id=\"button.otherSettings\" />} key=\"2\">\r\n                    {<IntlMessage id=\"button.otherSettings\" />}\r\n                </TabPane>\r\n            </Tabs>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n/**\r\n * Calendar custom cell render Component\r\n */\r\nconst CalendarCell = ({ date, available = false, loading }) => {\r\n    const dispatch = useDispatch();\r\n    const [myLoading, setLoading] = useState(false);\r\n    const onChange = (value) => {\r\n        setLoading(true);\r\n        dispatch({ type: CREATE_CALENDAR_DATE, data: { available: value, date: date.format('YYYY-MM-DD') } });\r\n    }\r\n\r\n    return <div className=\"w-100 p-1\" >\r\n        <Tooltip placement=\"top\" title={available ? <IntlMessage id=\"button.available\" /> : <IntlMessage id=\"button.unAvailable\" />} arrowPointAtCenter={true}>\r\n            <div className=\"w-100 p-1\" style={{\r\n                backgroundColor: available ? COLOR_GREEN : COLOR_RED, borderRadius: \"5px\", border: \"1px solid #d1d4e3\",\r\n\r\n\r\n            }}> <div style={{ textAlign: \"center\", }}>\r\n                    {date.date()}\r\n                </div>\r\n                <div className=\"\" style={{ display: \"flex\", justifyContent: \"end\", alignItems: \"center\" }}>\r\n                    <Switch size=\"small\" checked={available} onChange={onChange} loading={loading ? myLoading : loading} />\r\n\r\n                </div></div> </Tooltip>\r\n\r\n\r\n    </div >\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = ({ calendar }, ownProps) => {\r\n    const { dates, date, selectedDate, loading } = calendar;\r\n    return {\r\n        dates, date, selectedDate, loading\r\n    }\r\n}\r\nconst mapActionsToProps = {\r\n    createCalendarDate, getCalendarDates, createCalendarHour, onSelectDate\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(MainSettings)","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\index.js",["693","694","695"],"import { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ClientBookingCreate from \"./clientCreate\";\r\nimport { getCalendarDates } from \"redux/actions/Calendar\";\r\n\r\nconst BookingCreate = ({ getCalendarDates, dates, ...rest }) => {\r\n    const [state, setState] = useState({\r\n        dates: dates\r\n    });\r\n    const [link, setLink] = useState('');\r\n    useEffect(() => {\r\n        getCalendarDates();\r\n    }, [state.dates]);\r\n\r\n    useEffect(() => {\r\n        const query = rest.location.search;\r\n        const name = new URLSearchParams(query).get('name');\r\n        const id = new URLSearchParams(query).get('id');\r\n        if (name && id) {\r\n            setLink(`https://www.dba.dk/${name}/id-${id}`);\r\n        }\r\n    }, [])\r\n\r\n    return (<ClientBookingCreate link={link} />);\r\n\r\n}\r\n\r\nexport default connect(null, { getCalendarDates })(BookingCreate);","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\index.js",["696","697"],"import React, { lazy, Suspense } from \"react\";\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { useSelector } from \"react-redux\";\r\nconst Dashboards = ({ match }) => {\r\n  const userData = useSelector(state => state.user.userData);\r\n  let index = \"empty\";\r\n  if (userData && userData.role == \"client\")\r\n    index = \"client\";\r\n  else if (userData && userData.role == \"admin\")\r\n    index = \"default\";\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\" />}>\r\n      <Switch>\r\n        <Route path={`${match.url}/${index}`} component={lazy(() => import(`./${index}`))} />\r\n        <Redirect from={`${match.url}`} to={`${match.url}/${index}`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n};\r\n\r\nexport default Dashboards;\r\n\r\n\r\n\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\map\\index.js",["698","699","700","701"],"import { useState, useEffect } from \"react\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Link } from 'react-router-dom';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { ClockCircleOutlined, EnvironmentFilled, PlusOutlined } from '@ant-design/icons';\r\nimport { Tag, Tooltip, Input, Empty, Col, Row, Button, Select, Popover } from 'antd';\r\nimport { statusOptions } from \"../../../../constants/Options\";\r\nimport { connect } from \"react-redux\";\r\nimport { getBookings } from \"redux/actions/Booking\";\r\nimport { STATUS_COLORS } from \"constants/ThemeConstant\";\r\nimport mapStyle from './mapstyle';\r\nimport { injectIntl } from \"react-intl\";\r\nconst { Search } = Input;\r\n\r\nconst CustomMarker = ({ data }) => {\r\n    const ItemHeader = ({ name, address, ownerName }) => (\r\n        <div>\r\n\r\n            <span className=\"text-muted\">{ownerName}</span><br />\r\n            <span className=\"text-muted\">{address}</span>\r\n        </div>\r\n    )\r\n    const ItemInfo = ({ pickupDate, status, address, name, statusColor, selectedHour }) => (\r\n        <>\r\n\r\n            <Flex alignItems=\"center\" justifyContent=\"between\">\r\n\r\n                <div className=\"mr-3 mt-3\">\r\n                    <Tooltip title=\"Pickup Date\">\r\n                        <ClockCircleOutlined className=\"text-muted font-size-md text-primary\" />\r\n                        <span className=\"ml-1 text-muted\">{pickupDate}  </span>\r\n                        <span className=\"ml-1 text-muted\">{selectedHour.from} - {selectedHour.to}</span>\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <Tag className={STATUS_COLORS[\"COLOR_\" + status]} >\r\n\r\n                        <span className={\"ml-2 font-weight-semibold \"}>{status}</span>\r\n                    </Tag>\r\n                </div>\r\n            </Flex>\r\n        </>\r\n    )\r\n    const createInfoWindowContent = (data) => {\r\n        return <>\r\n            <Flex alignItems=\"center\" justifyContent=\"start\">\r\n                <img style={{ width: \"80px\", maxHeight: \"80px\", marginRight: \"10px\", borderRadius: \"10px\" }} src={data.images.length > 0 ? data.images[0] : \"\"} />\r\n                <div style={{ flexGrow: 1, padding: \"5px\" }}><Flex alignItems=\"center\" justifyContent=\"between\">\r\n\r\n                    <ItemHeader name={data.pickup.title} ownerName={data.pickup.name} address={data.pickup.location} />\r\n\r\n                </Flex>\r\n                </div>\r\n            </Flex>\r\n            <div className=\"mt-2\">\r\n                <ItemInfo\r\n                    pickupDate={data.pickup.pickupDate}\r\n                    selectedHour={data.pickup.selectedHour}\r\n                    status={data.status || \"Recieved\"}\r\n                    statusColor={data.statusColor || \"bg-warning\"}\r\n\r\n                />\r\n            </div>\r\n        </>\r\n\r\n    }\r\n    return <Popover content={createInfoWindowContent(data)} title={data.title}>\r\n        <div style={{ position: \"relative\", marginLeft: \"-20px\", marginTop: \"-40px\" }}>\r\n            <Button block type=\"text\"  ><div className={STATUS_COLORS[\"COLOR_\" + data.status]} style={{ display: \"flex \", alignItems: \"center\", justifyContent: \"space-around\", fontSize: \"28px\" }} ><EnvironmentFilled /></div></Button>\r\n        </div>\r\n    </Popover>\r\n\r\n}\r\nconst updateMap = ({ map, maps }, results) => {\r\n    if (map) {\r\n        let bounds = new maps.LatLngBounds();\r\n        results.forEach(item => {\r\n\r\n            map.setOptions({\r\n                styles: mapStyle\r\n            })\r\n            bounds.extend({ lat: item.latitude, lng: item.longitude });\r\n        });\r\n        map.fitBounds(bounds);\r\n    }\r\n}\r\nconst BookingMap = ({ intl, loading, results, success, getBookings }) => {\r\n    const [gMap, setGmap] = useState({});\r\n    const [query, setQuery] = useState({});\r\n    if (results.length > 0)\r\n        results = results.map(item => {\r\n            item = { ...item, ...item.pickup };\r\n            return item;\r\n        });\r\n    useEffect(async () => {\r\n        getBookings(query);\r\n\r\n    }, [query]);\r\n    updateMap(gMap, results);\r\n    const markers = results.map((item, index) => {\r\n        return <CustomMarker data={item} lat={item.latitude} lng={item.longitude} key={index} />\r\n    })\r\n\r\n\r\n    const loadMap = (map, maps) => {\r\n        setGmap({ map, maps });\r\n        let bounds = new maps.LatLngBounds();\r\n        results.forEach(item => {\r\n            /*  let content = 's';\r\n  \r\n              let marker = new maps.Marker({\r\n                  position: { lat: item.latitude, lng: item.longitude },\r\n                  map,\r\n                  draggable: false\r\n              });\r\n              \r\n              const infowindow = new maps.InfoWindow({\r\n                  content: content// createInfoWindowContent(item),\r\n              });\r\n            marker.addListener(\"click\", () => {\r\n                  infowindow.open({\r\n                      anchor: marker,\r\n                      map,\r\n                      shouldFocus: false,\r\n                  });\r\n              });*/\r\n            map.setOptions({\r\n                styles: mapStyle\r\n            })\r\n            bounds.extend({ lat: item.latitude, lng: item.longitude });\r\n        })\r\n\r\n        map.fitBounds(bounds);\r\n    };\r\n    const tagRender = (props) => {\r\n        const { label, value, closable, onClose } = props;\r\n        const onPreventMouseDown = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        };\r\n        return (\r\n            <Tag\r\n                className={STATUS_COLORS[\"COLOR_\" + value]}\r\n                onMouseDown={onPreventMouseDown}\r\n                closable={closable}\r\n                onClose={onClose}\r\n                style={{ marginRight: 3 }}\r\n            >\r\n                {label}\r\n            </Tag>\r\n        );\r\n    }\r\n    const onChangeFilter = (value) => {\r\n        setQuery({ ...query, filterByStatus: value });\r\n    }\r\n    const onChangeSort = (value) => {\r\n        setQuery({ ...query, sortBy: value });\r\n\r\n    }\r\n    const onChangeSearch = (value) => {\r\n        setQuery({ ...query, keyword: value });\r\n    }\r\n    statusOptions.map(item => {\r\n        item.label = intl.formatMessage({ id: 'text.' + item.value })\r\n        return item;\r\n    })\r\n    return (<div>\r\n        <Flex justifyContent=\"between\" alignItems=\"center\" className=\"py-4\">\r\n            <h2>{intl.formatMessage({ id: 'text.bookings' })}</h2>\r\n            <div>\r\n                <Link to={\"./bookings-create\"}>\r\n                    <Button type=\"primary\" className=\"ml-2\">\r\n                        <PlusOutlined />\r\n                        <span>{intl.formatMessage({ id: 'text.new' })}</span>\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        </Flex>\r\n        <Row justify=\"space-between\">\r\n            <Col>\r\n                <div className=\"p-2\">\r\n                    <Row align=\"middle \">\r\n                        <Col>\r\n                            <span>{intl.formatMessage({ id: 'text.filterBy' })}:</span>\r\n                        </Col>\r\n                        <Col>\r\n                            <Select className=\"ml-2\"\r\n                                mode=\"multiple\"\r\n                                showArrow\r\n                                tagRender={tagRender}\r\n                                onChange={onChangeFilter}\r\n                                placeholder={intl.formatMessage({ id: 'text.selectStatus' })}\r\n                                style={{ width: '100%', minWidth: '150px' }}\r\n                                options={statusOptions}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <span className=\"pl-4 pr-3\">- {intl.formatMessage({ id: 'text.and' })} -</span>\r\n                        </Col>\r\n                        <Col>\r\n                            <Search loading={loading} onSearch={onChangeSearch} size=\"middle\" placeholder={intl.formatMessage({ id: 'text.inputZipCode' })} style={{ width: \"170px\" }} />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n\r\n        </Row>\r\n        {results.length > 0 ?\r\n            <div style={{ height: '500px', width: '100%' }}>\r\n\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: \"AIzaSyBYHbKZtVrRwnBoYhEamqgMQWhVDtNLTrg\" }}\r\n                    defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\r\n                    defaultZoom={1}\r\n                    yesIWantToUseGoogleMapApiInternals\r\n                    onGoogleApiLoaded={({ map, maps }) => loadMap(map, maps)}\r\n                    defaultOptions={{ mapId: \"12f7b45ccae6f788\" }}\r\n                >\r\n                    {markers}\r\n                </GoogleMapReact>\r\n            </div> : <Empty />\r\n        }\r\n    </div>);\r\n\r\n}\r\n\r\nconst mapStateToProps = ({ bookingList }) => {\r\n    const { results, loading, success } = bookingList;\r\n    return {\r\n        results, loading, success\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    getBookings\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(injectIntl(BookingMap));\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\authentication\\reset-password\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\authentication\\login\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\util-components\\Icon\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\authentication\\verify-email\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\authentication\\register-1\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\authentication\\forgot-password\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\errors\\error-page-1\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\errors\\error-page-2\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\shared-components\\Flex\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\Auth.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\empty\\index.js",["702"],"import React, { Component } from \"react\";\r\nimport { Empty, Spin } from \"antd\";\r\n\r\nexport class Basic extends Component {\r\n  render() {\r\n    return <Spin />;\r\n  }\r\n}\r\n\r\nexport default Basic;\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\default\\index.js",["703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718"],"import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Button, Card, Avatar, Dropdown, Table, Tooltip, Menu, Tag } from 'antd';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport { statusOptions, sortOptions } from \"../../../../constants/Options\";\r\nimport { STATUS_COLORS } from 'constants/ThemeConstant';\r\nimport { connect } from \"react-redux\";\r\nimport { getBookings } from \"redux/actions/Booking\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  NewMembersData,\r\n  RecentTransactionData\r\n} from './DefaultDashboardData';\r\nimport {\r\n  EyeOutlined,\r\n  EllipsisOutlined,\r\n  ReloadOutlined, RightOutlined\r\n} from '@ant-design/icons';\r\nimport utils from 'utils';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport UserService from \"services/UserService\";\r\nimport { injectIntl } from 'react-intl';\r\n\r\n\r\nexport const DefaultDashboard = ({ intl, results, success, getBookings }) => {\r\n  const bookingTableColumns = [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'id'\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n\r\n    },\r\n    {\r\n      title: 'Phone',\r\n      dataIndex: 'phone',\r\n\r\n    },\r\n    {\r\n      title: 'Item',\r\n      dataIndex: 'title',\r\n\r\n    },\r\n    {\r\n      title: 'Location',\r\n      dataIndex: 'location',\r\n    },\r\n    {\r\n      title: 'Pickup Date',\r\n      dataIndex: 'pickupDate',\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      render: (text, record) => {\r\n        return <Tag\r\n          className={\"w-100 \" + STATUS_COLORS[\"COLOR_\" + text]}\r\n\r\n        >\r\n          {intl.formatMessage({ id: 'text.' + text })}\r\n        </Tag>\r\n      }\r\n    }\r\n  ]\r\n  const [newMembersData, setMembersData] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  if (results.length > 0)\r\n    results = results.map(item => {\r\n      item = { ...item, ...item.pickup };\r\n      return item;\r\n    });\r\n  useEffect(async () => {\r\n    getBookings({});\r\n    const users = await UserService.latest();\r\n    setMembersData(users.results);\r\n  }, [loaded]);\r\n  bookingTableColumns.map(item => {\r\n    item.title = intl.formatMessage({ id: 'text.' + item.dataIndex })\r\n    return item;\r\n  });\r\n  return (\r\n    <>\r\n\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={7}>\r\n          <Card title={intl.formatMessage({ id: 'text.latestRegistered' })} >\r\n            <div className=\"mt-3\">\r\n              {\r\n                newMembersData.map((elm, i) => (\r\n                  <div key={i} className={`d-flex align-items-center justify-content-between mb-4`}>\r\n                    <AvatarStatus id={i} src=\"/img/avatars/avatar.png\" name={elm.name} subTitle={elm.email} />\r\n                    <div>\r\n                      <Tooltip placement=\"left\" title={\"View user profile\"}><Link to={\"/app/accounts/\" + elm.id}>\r\n                        <Button size=\"small\" shape=\"circle\" icon={<RightOutlined />} ></Button>\r\n                      </Link>\r\n                      </Tooltip>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              }\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={17}>\r\n          <Card title={intl.formatMessage({ id: 'text.latestBookings' })} >\r\n            <Table\r\n              className=\"no-border-last\"\r\n              columns={bookingTableColumns}\r\n              dataSource={results}\r\n              rowKey='id'\r\n              pagination={false}\r\n              size={\"small\"}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = ({ bookingList }) => {\r\n  const { results, loading, success } = bookingList;\r\n  return {\r\n    results, loading, success\r\n  }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n  getBookings\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(injectIntl(DefaultDashboard));","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\default\\DefaultDashboardData.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\myRoute\\list.js",["719","720","721","722","723","724","725"],"import React, { Component } from 'react'\r\nimport { Table, Tag, Tooltip, Button, Input, Modal, Alert, Row, Col, Select, Form } from 'antd';\r\nimport { EyeOutlined, DeleteOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport DataService from 'services/RouteCreator';\r\nimport { motion } from \"framer-motion\"\r\nimport { Link } from 'react-router-dom';\r\nimport { MyRouteFilterOptions, MyRouteSortOptions } from \"constants/Options\";\r\nimport { STATUS_COLORS } from 'constants/ThemeConstant';\r\nimport { injectIntl } from 'react-intl'\r\n\r\nconst { Search } = Input;\r\nconst { TextArea } = Input;\r\nexport class MyRouteList extends Component {\r\n    form = React.createRef();\r\n    state = {\r\n        records: [],\r\n        submitConfirmVisible: false,\r\n        newRecordVisible: false,\r\n        selectedRecord: null,\r\n        loading: false,\r\n        showMessage: false,\r\n        message: \"\",\r\n        pagination: {\r\n            current: 1,\r\n            pageSize: 10,\r\n        },\r\n        query: {\r\n            sortBy: \"name\",\r\n            sortType: \"asc\",\r\n        }\r\n    }\r\n\r\n    deleteRecord = id => {\r\n        const rec = this.state.records.find(item => item.id == id)\r\n        this.setState({ submitConfirmVisible: true, selectedRecord: rec, error: false, message: \"\" });\r\n\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        const data = await DataService.list(this.state.query);\r\n\r\n        this.setState({\r\n            records: data.results\r\n        })\r\n    }\r\n\r\n    async onSubmitConfirm(type) {\r\n        if (type == \"ok\") {\r\n            this.setState({ submitConfirmVisible: false, loading: true });\r\n            try {\r\n                const result = await DataService.delete(this.state.selectedRecord.id);\r\n                this.setState({\r\n                    records: this.state.records.filter(item => item.id !== this.state.selectedRecord.id),\r\n                });\r\n                this.setState({ error: false, message: this.props.intl.formatMessage({ id: 'text.deleted' }), showMessage: true });\r\n            } catch (err) {\r\n                this.setState({ error: true, message: err.message, showMessage: true });\r\n            }\r\n            this.setState({ loading: false });\r\n            if (this.state.showMessage)\r\n                setTimeout(() => {\r\n                    this.setState({ showMessage: false });\r\n                }, 4000);\r\n        }\r\n        else\r\n            this.setState({ submitConfirmVisible: false });\r\n    }\r\n    async newRecordConfirm(type) {\r\n        if (type == \"ok\") {\r\n            try {\r\n\r\n                const values = await this.form.current.validateFields();\r\n                this.setState({ loading: true });\r\n                await DataService.add(values);\r\n                this.setState({ newRecordVisible: false });\r\n                const data = await DataService.list(this.state.query);\r\n                this.setState({\r\n                    records: data.results, loading: false\r\n                })\r\n            } catch (err) {\r\n                this.setState({ error: true, message: err.message, showMessage: true, loading: false });\r\n            }\r\n        }\r\n        else\r\n            this.setState({ newRecordVisible: false });\r\n    }\r\n    tagRender = (props) => {\r\n        const { label, value, closable, onClose } = props;\r\n        const onPreventMouseDown = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        };\r\n        return (\r\n            <Tag\r\n                className={STATUS_COLORS[\"COLOR_\" + value]}\r\n                onMouseDown={onPreventMouseDown}\r\n                closable={closable}\r\n                onClose={onClose}\r\n                style={{ marginRight: 3 }}\r\n            >\r\n                {label}\r\n            </Tag>\r\n        );\r\n    }\r\n    onChangeSort = async (value) => {\r\n        const data = await DataService.list({ ...this.state.query, sortBy: value });\r\n        this.setState({\r\n            records: data.results,\r\n            query: { sortBy: value }\r\n        })\r\n    }\r\n    onChangeSearch = async (value) => {\r\n        const data = await DataService.list({ ...this.state.query, keyword: value });\r\n        this.setState({\r\n            records: data.results,\r\n            query: { keyword: value }\r\n        })\r\n\r\n    }\r\n    onChangeFilter = async (value) => {\r\n        const data = await DataService.list({ ...this.state.query, filterByStatus: value });\r\n        this.setState({\r\n            records: data.results,\r\n            query: { filterByStatus: value }\r\n        })\r\n\r\n    }\r\n    onChangeSortType = async (value) => {\r\n        const data = await DataService.list({ ...this.state.query, sortType: value });\r\n        this.setState({\r\n            records: data.results,\r\n            query: { sortType: value }\r\n        })\r\n\r\n    }\r\n    createNew = () => {\r\n        this.setState({ newRecordVisible: true });\r\n    }\r\n    MyRouteSortOptions = MyRouteSortOptions.map(item => {\r\n        item.label = this.props.intl.formatMessage({ id: 'text.' + item.value })\r\n        return item;\r\n    })\r\n    render() {\r\n\r\n\r\n        const { loading, records, selectedRecord, newRecordVisible, pagination, submitConfirmVisible, error, message, showMessage } = this.state;\r\n        const tableColumns = [\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.name' }),\r\n                dataIndex: 'name',\r\n\r\n\r\n            },\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.comments' }),\r\n                dataIndex: 'comments',\r\n\r\n\r\n            },\r\n\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.status' }),\r\n                dataIndex: 'status',\r\n                render: status => (\r\n                    <Tag className=\"text-capitalize\" color={status === 'Ready' ? 'cyan' : 'red'}>{status}</Tag>\r\n                ),\r\n\r\n            },\r\n            {\r\n                title: '',\r\n                dataIndex: 'actions',\r\n                render: (_, elm) => (\r\n                    <div className=\"text-right d-flex justify-content-end\">\r\n                        <Tooltip title={this.props.intl.formatMessage({ id: 'text.view' })}>\r\n                            <Link to={`./my-routes/${elm.id}`}>\r\n                                <Button type=\"link\" className=\"mr-2\" icon={<EyeOutlined />} size=\"small\" />\r\n                            </Link>\r\n                        </Tooltip>\r\n                        <Tooltip title={this.props.intl.formatMessage({ id: 'text.delete' })}>\r\n                            <Button type=\"link\" danger icon={<DeleteOutlined />} onClick={() => { this.deleteRecord(elm.id) }} size=\"small\" />\r\n                        </Tooltip>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <>\r\n                <Row className='mb-3'>\r\n                    <Col flex=\"auto\"><PageHeader title={this.props.intl.formatMessage({ id: 'text.myRoutes' })} display={true} trans={false} /></Col>\r\n                    <Col>\r\n                        <Button type=\"primary\" className=\"ml-2\" onClick={() => { this.createNew() }}>\r\n                            <PlusOutlined />\r\n                            <span>{this.props.intl.formatMessage({ id: 'text.new' })}</span>\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {showMessage ?\r\n                    <motion.div\r\n                        initial={{ opacity: 0, marginBottom: 0 }}\r\n                        animate={{\r\n                            opacity: showMessage ? 1 : 0,\r\n                            marginBottom: showMessage ? 20 : 0\r\n                        }}>\r\n                        <Alert type={error == false ? \"success\" : \"error\"} showIcon message={message}></Alert>\r\n                    </motion.div>\r\n                    : \"\"}\r\n                <Row justify=\"space-between\">\r\n                    <Col>\r\n                        <div className=\"p-2\">\r\n                            <Row align=\"middle \">\r\n                                <Col>\r\n                                    <span>{this.props.intl.formatMessage({ id: 'text.filterBy' })}:</span>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"ml-2\"\r\n                                        mode=\"multiple\"\r\n                                        showArrow\r\n                                        size=\"small\"\r\n                                        tagRender={this.tagRender}\r\n                                        onChange={this.onChangeFilter}\r\n                                        placeholder={this.props.intl.formatMessage({ id: 'text.selectStatus' })}\r\n                                        style={{ width: '100%', minWidth: '150px' }}\r\n                                        options={MyRouteFilterOptions}\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <span className=\"pl-4 pr-3\">- {this.props.intl.formatMessage({ id: 'text.and' })} -</span>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Search size=\"small\" loading={loading} onSearch={this.onChangeSearch} size=\"small\" placeholder={this.props.intl.formatMessage({ id: 'text.inputName' })} style={{ width: \"170px\" }} />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"p-2\">\r\n                            <Row align=\"middle \">\r\n                                <Col>\r\n                                    <span>{this.props.intl.formatMessage({ id: 'text.sortBy' })}:</span>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"ml-2\"\r\n                                        size=\"small\"\r\n                                        showArrow\r\n                                        onChange={this.onChangeSort}\r\n                                        defaultValue={this.props.intl.formatMessage({ id: 'text.name' })}\r\n                                        style={{ width: '100%', minWidth: '150px' }}\r\n                                        options={MyRouteSortOptions}\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"ml-3\"\r\n                                        showArrow\r\n                                        size=\"small\"\r\n                                        onChange={this.onChangeSortType}\r\n                                        defaultValue=\"desc\"\r\n                                        style={{ width: '80px' }}\r\n                                        options={[{ label: \"Desc\", value: \"desc\" }, { label: \"Asc\", value: \"asc\" }]}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Table columns={tableColumns} dataSource={records} rowKey='id'\r\n                    pagination={pagination} size=\"small\"\r\n\r\n                />\r\n\r\n\r\n\r\n                <Modal\r\n                    title={this.props.intl.formatMessage({ id: 'text.record' })}\r\n                    visible={submitConfirmVisible}\r\n                    onOk={() => { this.onSubmitConfirm(\"ok\") }}\r\n                    onCancel={() => { this.onSubmitConfirm(\"cancel\") }}\r\n                    okText=\"Delete\"\r\n                    cancelText=\"Cancel\"\r\n                >\r\n                    <p>{this.props.intl.formatMessage({ id: 'text.delete' })}?</p>\r\n                </Modal>\r\n                <Modal\r\n                    title={this.props.intl.formatMessage({ id: 'text.newRecord' })}\r\n                    visible={newRecordVisible}\r\n                    onOk={() => { this.newRecordConfirm(\"ok\") }}\r\n                    onCancel={() => { this.newRecordConfirm(\"cancel\") }}\r\n                    okText=\"Submit\"\r\n                    cancelText=\"Cancel\"\r\n                    confirmLoading={this.state.loading}\r\n                >\r\n                    <Form ref={this.form} layout=\"vertical\" name=\"register-form\" >\r\n                        <Form.Item\r\n                            name=\"name\"\r\n                            label={this.props.intl.formatMessage({ id: 'text.name' })}\r\n                            hasFeedback\r\n                            rules={[{\r\n                                required: true,\r\n                                message: 'Please input name'\r\n                            }, {\r\n                                min: 5,\r\n                                message: 'minimum characters is 5'\r\n                            }, {\r\n                                max: 200,\r\n                                message: 'maximum characters is 200'\r\n                            }\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"comments\"\r\n                            label={this.props.intl.formatMessage({ id: 'text.comments' })}\r\n\r\n                            hasFeedback\r\n                        >\r\n                            <TextArea ></TextArea>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default injectIntl(MyRouteList)\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\myRoute\\myRoute.js",["726","727","728","729","730","731","732","733","734","735","736","737"],"import { useState, useEffect } from \"react\";\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Col, Row, Card, Tooltip, Tag, Button, Popover, Alert, Empty } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport BookingList from \"./bookingList\";\r\nimport { ClockCircleOutlined, EnvironmentFilled, PlusOutlined } from '@ant-design/icons';\r\nimport { STATUS_COLORS } from \"constants/ThemeConstant\";\r\nimport { getRouteData, directionError, directionSuccess } from \"redux/actions\";\r\nimport Flex from 'components/shared-components/Flex';\r\nimport CreateDirection from \"./createDirection\";\r\nimport { motion } from 'framer-motion';\r\nimport { injectIntl } from 'react-intl'\r\nconst CustomMarker = injectIntl(({ intl, data }) => {\r\n    const ItemHeader = ({ name, address, ownerName }) => (\r\n        <div>\r\n\r\n            <span className=\"text-muted\">{ownerName}</span><br />\r\n            <span className=\"text-muted\">{address}</span>\r\n        </div>\r\n    )\r\n    const ItemInfo = ({ pickupDate, status, address, name, statusColor, selectedHour }) => (\r\n        <>\r\n\r\n            <Flex alignItems=\"center\" justifyContent=\"between\">\r\n\r\n                <div className=\"mr-3 mt-3\">\r\n                    <Tooltip title={intl.formatMessage({ id: 'text.pickupDate' })}>\r\n                        <ClockCircleOutlined className=\"text-muted font-size-md text-primary\" />\r\n                        <span className=\"ml-1 text-muted\">{pickupDate}  </span>\r\n                        <span className=\"ml-1 text-muted\">{selectedHour.from} - {selectedHour.to}</span>\r\n                    </Tooltip>\r\n                </div>\r\n                <div className=\"mt-3\">\r\n                    <Tag className={STATUS_COLORS[\"COLOR_\" + status]} >\r\n\r\n                        <span className={\"ml-2 font-weight-semibold \"}>{status}</span>\r\n                    </Tag>\r\n                </div>\r\n            </Flex>\r\n        </>\r\n    )\r\n    const createInfoWindowContent = (data) => {\r\n        return <>\r\n            <Flex alignItems=\"center\" justifyContent=\"start\">\r\n                <img style={{ width: \"80px\", maxHeight: \"80px\", marginRight: \"10px\", borderRadius: \"10px\" }} src={data.images.length > 0 ? data.images[0] : \"\"} />\r\n                <div style={{ flexGrow: 1, padding: \"5px\" }}><Flex alignItems=\"center\" justifyContent=\"between\">\r\n\r\n                    <ItemHeader name={data.pickup.title} ownerName={data.pickup.name} address={data.pickup.location} />\r\n\r\n                </Flex>\r\n                </div>\r\n            </Flex>\r\n            <div className=\"mt-2\">\r\n                <ItemInfo\r\n                    pickupDate={data.pickup.pickupDate}\r\n                    selectedHour={data.pickup.selectedHour}\r\n                    status={data.status || \"Recieved\"}\r\n                    statusColor={data.statusColor || \"bg-warning\"}\r\n\r\n                />\r\n            </div>\r\n        </>\r\n\r\n    }\r\n    return <Popover content={createInfoWindowContent(data)} title={data.title}>\r\n        <div style={{ position: \"relative\", marginLeft: \"-20px\", marginTop: \"-40px\" }}>\r\n            <Button block type=\"text\"  ><div className={STATUS_COLORS[\"COLOR_\" + data.status]} style={{ display: \"flex \", alignItems: \"center\", justifyContent: \"space-around\", fontSize: \"28px\" }} ><EnvironmentFilled /></div></Button>\r\n        </div>\r\n    </Popover>\r\n\r\n})\r\nexport const RouteCreator = ({ intl, routeData, directionError, directionSuccess, hideMessage, match, results, message, success, getRouteData, destinations, myLocation }) => {\r\n    const routeId = match.params.id;\r\n    const [gMap, setGmap] = useState({\r\n        bookings: [],\r\n        markers: []\r\n    });\r\n    const [markers, setMarkers] = useState([]);\r\n    const loadMap = (map, maps) => {\r\n        if (maps) {\r\n            const directionService = new maps.DirectionsService();\r\n            const directionRenderer = new maps.DirectionsRenderer();\r\n            setGmap({ ...gMap, map, maps, directionService, directionRenderer });\r\n        }\r\n\r\n    };\r\n\r\n    const createRoute = (myLocation, destinations) => {\r\n\r\n\r\n        gMap.directionRenderer.setMap(gMap.map);\r\n\r\n\r\n        let waypoints = [];\r\n        if (destinations.length > 1) {\r\n            waypoints = destinations.map(item => {\r\n                return {\r\n                    location: new gMap.maps.LatLng(item.pickup.latitude, item.pickup.longitude),\r\n                    stopover: true\r\n                }\r\n            })\r\n            var destination = destinations[destinations.length - 1];\r\n\r\n            // waypoints.shift();\r\n            waypoints.pop();\r\n\r\n        }\r\n        else {\r\n            var destination = destinations[0];\r\n        }\r\n\r\n        if (!myLocation.latitude) {\r\n            if (gMap.directionRenderer != null) {\r\n                gMap.directionRenderer.setMap(null);\r\n\r\n            }\r\n        }\r\n        else\r\n            gMap.directionService.route(\r\n                {\r\n                    origin: { lat: myLocation.latitude, lng: myLocation.longitude },\r\n                    destination: { lat: destination.pickup.latitude, lng: destination.pickup.longitude },\r\n                    travelMode: gMap.maps.TravelMode.DRIVING,\r\n                    waypoints: waypoints\r\n                },\r\n                (result, status) => {\r\n                    if (status === \"OK\") {\r\n                        gMap.directionRenderer.setDirections(result);\r\n                        directionSuccess(result);\r\n                        console.error(`ok fetching directions ${result}`);\r\n                    } else {\r\n                        console.error(`error fetching directions ${result}`);\r\n                        directionError();\r\n                    }\r\n                }\r\n            );\r\n    }\r\n    useEffect(async () => {\r\n        let markers = gMap.bookings.map((item, index) => {\r\n            return <CustomMarker data={item} lat={item.pickup.latitude} lng={item.pickup.longitude} key={index} />\r\n        })\r\n        setMarkers(markers);\r\n        updateBounds();\r\n    }, [gMap]);\r\n\r\n    useEffect(async () => {\r\n        getRouteData(routeId);\r\n    }, []);\r\n    useEffect(async () => {\r\n        if (gMap.map)\r\n            createRoute(myLocation, destinations);\r\n    }, [destinations, myLocation, gMap]);\r\n\r\n\r\n    const updateBounds = () => {\r\n        if (gMap.maps) {\r\n            let bounds = new gMap.maps.LatLngBounds();\r\n            gMap.bookings.forEach(item => {\r\n                bounds.extend({ lat: item.pickup.latitude, lng: item.pickup.longitude });\r\n            })\r\n            if (gMap.bookings.length > 0)\r\n                gMap.map.fitBounds(bounds);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {routeData === undefined && success === false ? <Empty /> :\r\n                <Row>\r\n                    <Col md={9} className=\"pr-4\" >\r\n                        <Card className=\"p-2\"  >\r\n                            <CreateDirection routeId={routeId} />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={15} >\r\n                        <div className=\"w-100\">\r\n                            <div style={{ height: '500px', width: '100%' }} >\r\n\r\n                                <GoogleMapReact\r\n                                    bootstrapURLKeys={{ key: \"AIzaSyBYHbKZtVrRwnBoYhEamqgMQWhVDtNLTrg\" }}\r\n                                    defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\r\n                                    defaultZoom={1}\r\n                                    yesIWantToUseGoogleMapApiInternals\r\n                                    onGoogleApiLoaded={({ map, maps }) => loadMap(map, maps)}\r\n                                    defaultOptions={{ mapId: \"12f7b45ccae6f788\" }}\r\n                                >\r\n                                    {markers}\r\n                                </GoogleMapReact>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ routeCreator }) => {\r\n    const { myLocation, isShowMessage, success, message, loading, routeData, destinations } = routeCreator;\r\n    return { myLocation, isShowMessage, success, message, loading, routeData, destinations };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getRouteData, directionSuccess, directionError\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(RouteCreator))\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\client\\index.js",["738","739"],"import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport PageHeaderAlt from '../../../../components/layout-components/PageHeaderAlt';\r\nimport { Input, Row, Col, Card, Collapse } from 'antd';\r\nimport { connect } from \"react-redux\";\r\nimport IntlMessage from \"components/util-components/IntlMessage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { injectIntl } from 'react-intl';\r\nclass ClientHome extends Component {\r\n\tonClick(event) {\r\n\t\tconsole.log(event)\r\n\t}\r\n\trender() {\r\n\t\tconst userData = this.props.userData || {};\r\n\t\tconst { intl } = this.props;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<PageHeaderAlt className=\"bg-primary\" overlap>\r\n\t\t\t\t\t<div className=\"container text-center\">\r\n\t\t\t\t\t\t<div className=\"py-lg-4\">\r\n\t\t\t\t\t\t\t<h1 className=\"text-white \">{intl.formatMessage({ id: 'text.welcome' })} {userData.name}</h1>\r\n\t\t\t\t\t\t\t<Row type=\"flex\" justify=\"center\">\r\n\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={12}>\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-white w-75 text-center mt-2 mb-4 mx-auto\">\r\n\t\t\t\t\t\t\t\t\t\t{intl.formatMessage({ id: 'text.enjoy' })}\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<Row type=\"flex\" justify=\"center\" className=\"mb-5\">\r\n\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={12}>\r\n\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</PageHeaderAlt>\r\n\t\t\t\t<div className=\"container my-4\">\r\n\t\t\t\t\t<Row gutter={16}>\r\n\r\n\t\t\t\t\t\t<Col xs={24} sm={24} md={12} >\r\n\t\t\t\t\t\t\t<Link to={\"../bookings-create\"}>\r\n\t\t\t\t\t\t\t\t<Card hoverable >\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src=\"/img/others/pricing_img.png\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"mt-4\">{<IntlMessage id=\"button.createBooking\" />}</h3>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xs={24} sm={24} md={12} >\r\n\t\t\t\t\t\t\t<Link to={\"../bookings-list\"}>\r\n\t\t\t\t\t\t\t\t<Card hoverable>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src=\"/img/others/pricing_img_3.png\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"mt-4\">{<IntlMessage id=\"button.showBookings\" />}</h3>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tuserData: state.user.userData\r\n\t}\r\n}\r\nexport default connect(mapStateToProps)(injectIntl(ClientHome))","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\client\\SalesDashboardData.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\analytic\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\map\\mapstyle.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\constants\\Options.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\dashboards\\analytic\\AnalyticDashboardData.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\components\\RegisterForm.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\JwtAuthService.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\myRoute\\createDirection.js",["740","741","742","743","744","745","746","747","748","749"],"import { Input, Row, Col, Button, Tooltip, Alert, Tabs } from 'antd'\r\nimport React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getMyLocationError, getMyLocationSuccess, getMyLocation, showMessage, hideMessage, updateRoute } from \"redux/actions/RouteCreator\";\r\nimport {\r\n    AimOutlined, NodeExpandOutlined, PlusOutlined\r\n} from '@ant-design/icons';\r\nimport BookingList from './bookingList';\r\nimport { motion } from 'framer-motion';\r\nimport RouteCreatorService from \"services/RouteCreator\";\r\nimport Destinations from \"./destinations\";\r\nimport Directions from './directions';\r\nimport { injectIntl } from 'react-intl'\r\n\r\nconst { Search } = Input;\r\nexport const CreateDirection = ({ intl, routeId, isShowMessage, updateRoute, routeData, success, hideMessage, loading, destinations, message }) => {\r\n    const [state, setState] = useState({\r\n        show: \"main\"\r\n    });\r\n    const onBookingListClose = () => {\r\n        setState({ ...state, show: \"main\" });\r\n    }\r\n    const onDirectionClose = () => {\r\n        setState({ ...state, show: \"main\" });\r\n    }\r\n    const onNewDestination = () => {\r\n        setState({ ...state, show: \"destination\" });\r\n    }\r\n    const onShowDirection = () => {\r\n        setState({ ...state, show: \"directions\" });\r\n    }\r\n    useEffect(async () => {\r\n        if (isShowMessage) {\r\n            setTimeout(() => {\r\n                hideMessage();\r\n            }, 2000)\r\n        }\r\n    }, [isShowMessage]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isShowMessage ? <motion.div\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{\r\n                        opacity: isShowMessage ? 1 : 0,\r\n                    }}>\r\n                    <Alert type={success ? \"success\" : \"error\"} showIcon message={message}></Alert>\r\n                </motion.div> : \"\"\r\n            }\r\n            {state.show == \"main\" && <div>\r\n                <Row align=\"middle \" justify=\"space-between\" className=\"pb-3\">\r\n                    <Col>\r\n                        <span className=\"text-gray-light\">{routeData.name}</span>\r\n                    </Col>\r\n\r\n                    { //<Col><Button >Save</Button></Col>\r\n                    }\r\n                </Row>\r\n\r\n                <ConnectedStartLocation routeId={routeId} />\r\n\r\n                <AddDestination destinations={destinations} onNewDestination={onNewDestination} onShowDirection={onShowDirection} />\r\n\r\n                <Destinations routeId={routeId} />\r\n\r\n\r\n            </div>\r\n            }{\r\n                state.show == \"destination\" &&\r\n                <motion.div\r\n                    initial={{ x: -50, }}\r\n                    transition={{ ease: \"easeOut\", duration: 0.5 }}\r\n                    animate={{\r\n                        x: state.show == 'destination' ? 0 : -50\r\n\r\n                    }}>\r\n                    <BookingList routeId={routeId} onClose={onBookingListClose} />\r\n                </motion.div>\r\n            }\r\n            {\r\n                state.show == \"directions\" &&\r\n                <motion.div\r\n                    initial={{ x: -50, }}\r\n                    transition={{ ease: \"easeOut\", duration: 0.5 }}\r\n                    animate={{\r\n                        x: state.show == 'directions' ? 0 : -50\r\n\r\n                    }}>\r\n                    <Directions routeId={routeId} onClose={onDirectionClose} />\r\n                </motion.div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst StartLocation = ({ intl, routeId, getMyLocationSuccess, updateRoute, getMyLocationError, isShowMessage, showMessage, loading, hideMessage, myLocation }) => {\r\n    const navSuccess = (position) => {\r\n\r\n        const { latitude, longitude } = position.coords;\r\n        const t = {\r\n            latitude: 55.676098,\r\n            longitude: 12.568337\r\n        };\r\n        getMyLocationSuccess({ latitude, longitude, address: \"my location\" });\r\n        updateRoute(routeId, { latitude, longitude, address: \"my location\" })\r\n    }\r\n    const navError = (err) => {\r\n        getMyLocationError(err.message);\r\n        showMessage(err.message);\r\n    }\r\n    const onClick = () => {\r\n        RouteCreatorService.getMyLocation(navSuccess, navError);\r\n    }\r\n    const onSearch = async (value) => {\r\n        try {\r\n            const res = await RouteCreatorService.geoCodeAddress(value);\r\n            getMyLocationSuccess({ latitude: res.latitude, longitude: res.longitude, address: value });\r\n            updateRoute(routeId, { latitude: res.latitude, longitude: res.longitude, address: value })\r\n\r\n        } catch (err) {\r\n            getMyLocationError(err.message);\r\n            showMessage(err.message);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (isShowMessage)\r\n            setTimeout(() => {\r\n                hideMessage();\r\n            }, 2000);\r\n    }, [isShowMessage]);\r\n    return <>\r\n        <Row>\r\n            <Col >\r\n                <Tooltip title={intl.formatMessage({ id: 'text.getMyLocation' })} placement='rightTop'>\r\n                    <Button loading={loading} onClick={onClick} size='small' type=\"text\" shape=\"circle\" icon={<AimOutlined />} />\r\n\r\n                </Tooltip>\r\n            </Col>\r\n            <Col flex=\"auto\">\r\n                <Tooltip title=\"Search\" placement='rightTop'>\r\n                    <Search onSearch={onSearch} className=\"ml-1\" size=\"small\" placeholder={intl.formatMessage({ id: 'text.searchStartingLocation' })} />\r\n                </Tooltip>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n}\r\nconst AddDestination = injectIntl(({ intl, onNewDestination, onShowDirection, destinations }) => {\r\n\r\n    const onClick = () => {\r\n        onNewDestination()\r\n    }\r\n    const onClickDirections = () => {\r\n        onShowDirection()\r\n    }\r\n    return <>\r\n        <Row align='middle' justify=\"space-between\" className='mt-2 mb-2'>\r\n            <Col>\r\n                <Row>\r\n                    <Col >\r\n                        <Tooltip title={intl.formatMessage({ id: 'text.addDestination' })} placement='rightTop'>\r\n                            <Button onClick={onClick} size='small' shape=\"circle\" type=\"text\" icon={<PlusOutlined />} />\r\n                        </Tooltip>\r\n\r\n                    </Col>\r\n                    <Col flex=\"auto\">\r\n                        <div onClick={onClick} className=\"font-weight-semibold ml-1 text-primary mt-2\" style={{ cursor: \"pointer\" }}>{intl.formatMessage({ id: 'text.addDestination' })}</div>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col>  {\r\n                destinations.length > 0 &&\r\n                <Row justify=\"end\">\r\n                    <Col >\r\n                        <Tooltip title={intl.formatMessage({ id: 'text.viewDirections' })} placement='rightTop'>\r\n                            <Button onClick={onClickDirections} size='small' shape=\"circle\" type=\"text\" icon={<NodeExpandOutlined />} />\r\n                        </Tooltip>\r\n\r\n                    </Col>\r\n                    <Col flex=\"auto\">\r\n\r\n                        <div onClick={onClickDirections} className=\"font-weight-semibold ml-1 text-primary mt-2\" style={{ cursor: \"pointer\" }}>{intl.formatMessage({ id: 'text.directions' })}</div>\r\n\r\n\r\n                    </Col>\r\n                </Row>}\r\n            </Col>\r\n        </Row>\r\n    </>\r\n})\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = ({ routeCreator }) => {\r\n    const { myLocation, isShowMessage, success, message, loading, routeData, directions, destinations } = routeCreator;\r\n    return { myLocation, isShowMessage, success, message, loading, routeData, directions, destinations };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getMyLocationError, getMyLocationSuccess, showMessage, hideMessage, getMyLocation, updateRoute\r\n}\r\nconst ConnectedStartLocation = connect(mapStateToProps, mapDispatchToProps)(injectIntl(StartLocation));\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(CreateDirection))\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\myRoute\\bookingList.js",["750","751","752","753","754","755"],"import { connect } from 'react-redux';\r\nimport { useState, useEffect } from \"react\";\r\nimport { myCalendarAddBooking } from 'redux/actions/MyCalendar';\r\nimport { getBookings, addDestination, addTagBookingItem } from 'redux/actions';\r\nimport moment from \"moment\";\r\nimport { CloseOutlined, RightOutlined } from '@ant-design/icons';\r\nimport { Table, Tag, Tooltip, Card, Col, Row, Input, Image, Button, Select } from 'antd';\r\nimport { statusOptions, sortOptions } from \"constants/Options\";\r\nimport { STATUS_COLORS } from 'constants/ThemeConstant';\r\nimport { injectIntl } from 'react-intl'\r\n\r\nconst { Search } = Input;\r\n\r\n\r\nconst ActionColumnRender = ({ intl, routeId, addDestination, addTagBookingItem, record }) => {\r\n\r\n\r\n    const onAdd = async () => {\r\n        const x = await addDestination({\r\n            routeId,\r\n            destinationId: record.id\r\n        });\r\n\r\n        //  addTagBookingItem({ id: record.id, tag: { destination: true } });\r\n    }\r\n\r\n    return <div>\r\n        <Tooltip placement=\"left\" title={intl.formatMessage({ id: 'text.addToRoute' })}>\r\n            <Button onClick={onAdd} size=\"small\" shape=\"circle\" icon={<RightOutlined />} ></Button>\r\n        </Tooltip>\r\n    </div>\r\n}\r\n\r\n\r\nconst BookingList = ({ intl, routeId, visible = true, onClose, title = intl.formatMessage({ id: 'text.selectDestination' }), loading, results, totalResults, getBookings, selectedTimeFrame, destinations }) => {\r\n    const bookingTableColumns = [\r\n        {\r\n            title: intl.formatMessage({ id: 'text.item' }),\r\n            dataIndex: 'title',\r\n            render: (text, record) => {\r\n                return <div style={{ width: \"120px\" }} className=\"text-truncate\">\r\n                    {text}\r\n                </div>\r\n            }\r\n        },\r\n        {\r\n            title: intl.formatMessage({ id: 'text.location' }),\r\n            dataIndex: 'location',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            render: (text, record) => {\r\n                return <Tag\r\n                    className={STATUS_COLORS[\"COLOR_\" + text]} size={\"small\"}\r\n                >\r\n                    <div style={{ width: \"35px\", }} className=\"text-truncate\">{intl.formatMessage({ id: 'text.' + text })}</div>\r\n                </Tag>\r\n\r\n            }\r\n\r\n        },\r\n        {\r\n            title: intl.formatMessage({ id: 'text.action' }),\r\n            dataIndex: '',\r\n            key: 'x',\r\n            render: (text, record) => {\r\n                return <ActionColumnRenderConnected routeId={routeId} text={text} record={record} selectedTimeFrame={selectedTimeFrame} />\r\n            }\r\n\r\n        },\r\n    ]\r\n\r\n    const [query, setQuery] = useState({ sortBy: \"Submitted\", sortType: \"Desc\", filterByStatus: [\"Submitted\", 'Booked'], filterByRoute: routeId });\r\n    const [state, setState] = useState({ visible });\r\n    let tableResults = results.filter(item => item.destination !== true);\r\n    const [tableState, setTableState] = useState({\r\n        data: [],\r\n        pagination: {\r\n            current: 1,\r\n            pageSize: 10,\r\n            total: tableResults.length\r\n        },\r\n        loading: false,\r\n\r\n    });\r\n    if (tableResults.length > 0)\r\n        tableResults = tableResults.map(item => {\r\n            item = { ...item, ...item.pickup };\r\n            return item;\r\n        });\r\n    useEffect(async () => {\r\n        getBookings(query);\r\n    }, [query, destinations]);\r\n    const tagRender = (props) => {\r\n        const { label, value, closable, onClose } = props;\r\n        const onPreventMouseDown = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        };\r\n        return (\r\n            <Tag\r\n                className={STATUS_COLORS[\"COLOR_\" + value]}\r\n                onMouseDown={onPreventMouseDown}\r\n                closable={closable}\r\n                onClose={onClose}\r\n                style={{ marginRight: 3 }}\r\n                size={\"small\"}\r\n            >\r\n                {label}\r\n            </Tag>\r\n        );\r\n    }\r\n\r\n    const onChangeSearch = (value) => {\r\n        setQuery({ ...query, keyword: value });\r\n    }\r\n    const onChangeFilter = (value) => {\r\n        setQuery({ ...query, filterByStatus: value });\r\n    }\r\n    const onTableChange = (pagination, filters, sorter, extra) => {\r\n        if (extra.action == 'paginate') {\r\n            setTableState({ ...tableState, pagination: { ...tableState.pagination, current: pagination.current } })\r\n            setQuery({ ...query, page: pagination.current });\r\n        }\r\n\r\n    }\r\n    const closeMe = () => {\r\n        setState({ ...state, visible: false });\r\n        if (onClose)\r\n            onClose();\r\n    }\r\n\r\n    statusOptions.map(item => {\r\n        item.label = intl.formatMessage({ id: 'text.' + item.value })\r\n        return item;\r\n    })\r\n    return (<>\r\n\r\n        {state.visible ?\r\n            <div >\r\n                <Row align=\"middle \" justify=\"space-between\" className=\"pb-3\">\r\n                    <Col>\r\n                        <span className=\"text-gray-light\">{title}</span>\r\n                    </Col><Col><Button onClick={closeMe} shape='circle' size=\"small\" type=\"text\"><CloseOutlined /></Button></Col>\r\n                </Row>\r\n                <Row align=\"middle \" justify=\"space-between\" gutter={[0, 12]}>\r\n                    <Col flex=\"auto\">\r\n\r\n                        <Select\r\n                            mode=\"multiple\"\r\n                            showArrow\r\n                            size={\"small\"}\r\n                            tagRender={tagRender}\r\n                            onChange={onChangeFilter}\r\n                            placeholder={intl.formatMessage({ id: 'text.selectStatus' })}\r\n                            style={{ display: \"relative\", width: \"100%\" }}\r\n                            options={statusOptions}\r\n                            value={query.filterByStatus}\r\n                        />\r\n\r\n                    </Col>\r\n                    <Col className=\"font-size-xs pl-2 pr-2\" >\r\n                        - {intl.formatMessage({ id: 'text.and' })} -\r\n                    </Col>\r\n                    <Col flex=\"140px\">\r\n                        <Search loading={loading} onSearch={onChangeSearch} size=\"small\" placeholder={intl.formatMessage({ id: 'text.inputZipCode' })} style={{ width: \"100%\" }} />\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n\r\n                <Table\r\n                    columns={bookingTableColumns}\r\n                    rowKey={record => record.id}\r\n                    dataSource={tableResults}\r\n                    size={\"small\"}\r\n                    showHeader={false}\r\n                    className=\"w-100\"\r\n                    pagination={tableState.pagination}\r\n                    onChange={onTableChange}\r\n                    expandable={{\r\n                        expandedRowRender: record => <BookingDetails booking={record} />,\r\n                        rowExpandable: record => record.name !== 'Not Expandable',\r\n                    }}\r\n                />\r\n            </div> : \"\"\r\n        }\r\n    </>);\r\n}\r\n\r\nconst BookingDetails = ({ booking }) => {\r\n    const { pickup, shipping, images } = booking;\r\n    return <PickupDetails details={pickup} images={images} />\r\n\r\n}\r\n\r\nconst PickupDetails = injectIntl(({ intl, details, images }) => {\r\n    const [visible, setVisible] = useState(false);\r\n    return <Card className=\"p-1 \"  >\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>\r\n                <h6>\r\n                    {intl.formatMessage({ id: 'text.pickupInformtion' })}\r\n                </h6>\r\n\r\n                <article >\r\n\r\n                    <div >\r\n                        <h5>{details.name}</h5>\r\n                        <h5>{intl.formatMessage({ id: 'text.item' })} : {details.title}</h5>\r\n                        <h5>{intl.formatMessage({ id: 'text.pickupDate' })}: {details.pickupDate} {moment(details.selectedHour, [\"HH\"]).format(\"h:mm A\")}</h5>\r\n                        <p>\r\n                            {details.location}\r\n                        </p>\r\n                    </div>\r\n                </article>\r\n            </div>\r\n            <Image\r\n                preview={{ visible: false }}\r\n                width={100}\r\n                src={images[0]}\r\n                onClick={() => setVisible(true)}\r\n            />\r\n            <div style={{ display: 'none' }}>\r\n                <Image.PreviewGroup preview={{ visible, onVisibleChange: vis => setVisible(vis) }}>\r\n\r\n                    {\r\n                        images.map((item, index) => {\r\n                            return <Image width={150} src={item} key={index} />\r\n                        })\r\n                    }\r\n                </Image.PreviewGroup>\r\n            </div>\r\n        </div>\r\n    </Card>\r\n})\r\n\r\n\r\nconst mapStateToProps = ({ bookingList, routeCreator }) => {\r\n    const { results, loading, success, totalResults } = bookingList;\r\n    const { destinations } = routeCreator;\r\n\r\n    return {\r\n        results, totalResults, loading, success, destinations\r\n    }\r\n}\r\n\r\n\r\nconst ActionColumnRenderConnected = connect(mapStateToProps, { myCalendarAddBooking, addDestination, addTagBookingItem })(injectIntl(ActionColumnRender));\r\nexport default connect(mapStateToProps, { getBookings })(injectIntl(BookingList));\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\layout-components\\PageHeaderAlt.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\authentication\\login-1\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\constants\\ChartConstant.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\myRoute\\directions.js",["756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772"],"import { connect } from 'react-redux';\r\nimport { useState, useEffect } from \"react\";\r\nimport { myCalendarAddBooking } from 'redux/actions/MyCalendar';\r\nimport { getBookings, addDestination, addTagBookingItem } from 'redux/actions';\r\nimport moment from \"moment\";\r\nimport { CloseOutlined, ArrowUpOutlined, RightCircleTwoTone } from '@ant-design/icons';\r\nimport { Table, Tag, Tooltip, Card, Col, Row, Input, Image, Button, Select } from 'antd';\r\nimport { statusOptions, sortOptions } from \"constants/Options\";\r\nimport { STATUS_COLORS } from 'constants/ThemeConstant';\r\nimport parser from \"html-react-parser\";\r\nimport Item from 'antd/lib/list/Item';\r\nimport { injectIntl } from 'react-intl'\r\n\r\nconst Steps = ({ steps }) => {\r\n    return (\r\n        steps.map((item, i) => (\r\n\r\n            <Row align=\"middle \" justify=\"space-between\" key={\"ss\" + i}>\r\n                <Col flex={\"30px\"}>\r\n                    <RightCircleTwoTone />\r\n                </Col >\r\n                <Col flex={\"auto\"}>\r\n                    {parser(item.instructions)}\r\n                </Col>\r\n            </Row>\r\n\r\n        ))\r\n\r\n\r\n    );\r\n}\r\nconst Directions = ({ intl, routeId, visible = true, onClose, title = intl.formatMessage({ id: 'text.selectDestination' }), directions }) => {\r\n    const [state, setState] = useState({ visible });\r\n    const { legs } = directions.routes[0];\r\n\r\n    const closeMe = () => {\r\n        setState({ ...state, visible: false });\r\n        if (onClose)\r\n            onClose();\r\n    }\r\n    return (<>\r\n\r\n        {state.visible && <>\r\n            <div >\r\n                <Row align=\"middle \" justify=\"space-between\" className=\"pb-3\">\r\n                    <Col>\r\n                        <span className=\"text-gray-light\">{intl.formatMessage({ id: 'text.directions' })}</span>\r\n                    </Col><Col><Button onClick={closeMe} shape='circle' size=\"small\" type=\"text\"><CloseOutlined /></Button></Col>\r\n                </Row>\r\n            </div>\r\n            <div>\r\n                {\r\n                    legs.map((item, i) => (\r\n                        <div key={\"XXX\" + i}>\r\n                            <h4>{item.duration.text} ({item.distance.text})</h4>\r\n                            <Row >\r\n                                <Col><h5>{item.start_address}</h5>\r\n                                    <Steps steps={item.steps} />\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Row >\r\n                                <Col>\r\n                                    <h5>{item.end_address}</h5>\r\n\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n        }\r\n    </>);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = ({ routeCreator }) => {\r\n    const { directions } = routeCreator;\r\n\r\n    return {\r\n        directions\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { getBookings })(injectIntl(Directions));\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\myRoute\\destinations.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\auth-views\\components\\LoginForm.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\shared-components\\AvatarStatus\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\shared-components\\ChartWidget\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\shared-components\\DonutChartWidget\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\shared-components\\RegiondataWidget\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\assets\\svg\\icon.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\util-components\\CustomIcon\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\accounts\\list\\UserView.js",["773","774","775","776","777","778","779"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n\tAvatar, Drawer, Divider, Card, Tabs,\r\n\tAlert\r\n} from 'antd';\r\nimport UserProfile from './userProfile';\r\nimport UserBooking from './userBooking';\r\nimport UserSecurity from './userSecurity';\r\nimport UserService from 'services/UserService';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport { motion } from 'framer-motion';\r\nimport IntlMessage from \"components/util-components/IntlMessage\";\r\nimport { injectIntl } from 'react-intl'\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nexport const UserView = ({ match, intl }) => {\r\n\tconst [userData, setUserData] = useState({});\r\n\tconst userId = match.params.id;\r\n\tconst [state, setState] = useState({\r\n\t\tloading: false, message: \"\", showMessage: false, error: false\r\n\t});\r\n\tconst hideMessage = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetState({ ...state, showMessage: false, error: false, message: \"\" });\r\n\t\t}, 2000);\r\n\t}\r\n\tconst showMessage = (message) => {\r\n\t\tsetState({ ...state, showMessage: true, error: true, message: message });\r\n\t}\r\n\tuseEffect(async () => {\r\n\t\ttry {\r\n\t\t\tconst data = await UserService.getData(userId);\r\n\t\t\tsetUserData(data);\r\n\t\t} catch (err) {\r\n\t\t\tshowMessage(err.message);\r\n\t\t\thideMessage();\r\n\t\t}\r\n\r\n\t}, []);\r\n\r\n\tuseEffect(async () => {\r\n\t\tif (state.showMessage)\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetState({ showMessage: false, message: \"\", error: false });\r\n\t\t\t}, 4000);\r\n\t})\r\n\r\n\tconst onUpdate = async (values) => {\r\n\t\ttry {\r\n\t\t\tsetState({\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t});\r\n\r\n\t\t\tconst res = await UserService.update(userId, values);\r\n\t\t\tsetState({\r\n\t\t\t\t...state,\r\n\t\t\t\terror: false,\r\n\t\t\t\tmessage: \"Success\",\r\n\t\t\t\tloading: false,\r\n\t\t\t\tshowMessage: true\r\n\t\t\t});\r\n\t\t\tsetUserData(res);\r\n\r\n\t\t} catch (err) {\r\n\t\t\tsetState({\r\n\t\t\t\t...state,\r\n\t\t\t\terror: true,\r\n\t\t\t\tmessage: err.message,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tshowMessage: true\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<> <PageHeader title={userData.name} display={true} trans={false} />\r\n\t\t\t{\r\n\t\t\t\tstate.showMessage ? <motion.div\r\n\t\t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }}\r\n\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\topacity: state.showMessage ? 1 : 0,\r\n\t\t\t\t\t\tmarginBottom: state.showMessage ? 20 : 0\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<Alert type={state.error ? \"error\" : \"success\"} showIcon message={state.message}></Alert>\r\n\t\t\t\t</motion.div> : \"\"\r\n\t\t\t}\r\n\t\t\t<Card>\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\">\r\n\t\t\t\t\t<TabPane tab={intl.formatMessage({ id: 'text.bookings' })} key=\"1\">\r\n\t\t\t\t\t\t<UserBooking userId={userId}></UserBooking>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab={intl.formatMessage({ id: 'text.profile' })} key=\"2\"><UserProfile userId={userId} onUpdate={onUpdate} userData={userData}></UserProfile>\r\n\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab={intl.formatMessage({ id: 'text.security' })} key=\"3\">\r\n\t\t\t\t\t\t<UserSecurity userId={userId} onUpdate={onUpdate}></UserSecurity>\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</Card>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(UserView))\r\n\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\clientCreate.js",["780","781","782","783","784","785","786","787","788","789","790","791","792","793"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Steps, Row, Col, Form,\r\n    Button, Modal,\r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { LinkOutlined } from '@ant-design/icons';\r\nimport Step6 from './step6';\r\nimport Step5 from './step5';\r\nimport Step4 from './step4';\r\nimport Step3 from './step3';\r\nimport Step2 from './step2';\r\nimport Step1 from './step1';\r\nimport {\r\n    showBookingMessage, saveNewBooking, hideBookingMessage, bookingError,\r\n    getDBAListingData, getDBAListingDataSuccess, savePickUpDetails, saveDeliveryDetails, resetBookingData\r\n} from 'redux/actions';\r\nimport { DEFAULT_LAT_LNG } from 'constants/ApiConstant';\r\nimport moment from 'moment';\r\nimport { injectIntl } from 'react-intl';\r\nconst { Step } = Steps;\r\nconst layout = {\r\n    labelCol: { span: 24 },\r\n    wrapperCol: { span: 24 },\r\n};\r\n\r\nconst Wizard = (props) => {\r\n    const { showMessage, hideBookingMessage, message, getDBAListingData, loading, showBookingMessage, bookingError,\r\n        success, details, images, savePickUpDetails, saveDeliveryDetails, saveNewBooking, resetBookingData, url, dates, intl } = props;\r\n    let { deliveryDetails } = props;\r\n    const [form1] = Form.useForm();\r\n    form1.setFieldsValue({dbaLink: props.link});\r\n    const [form2] = Form.useForm();\r\n    const [form3] = Form.useForm();\r\n    const [state, setState] = useState({\r\n        dbaLink: \"\",\r\n        current: 0,\r\n        loading: false,\r\n        submitConfirmVisible: false,\r\n        submitted: false,\r\n        pickupDate: moment().format('YYYY-MM-DD'),\r\n        selectedHour: undefined,\r\n        longitude: 0,\r\n        latitude: 0\r\n    });\r\n\r\n    deliveryDetails = deliveryDetails === undefined ? DEFAULT_LAT_LNG : deliveryDetails;\r\n\r\n\r\n    const onChangeSteps = (current) => {\r\n        setState({ ...state, ...{ current } })\r\n    }\r\n\r\n    const onNext = async () => {\r\n        if (state.current == 0) {\r\n            let data = await form1.validateFields([\"dbaLink\"]);\r\n            if (data) {\r\n                setState({ ...state, ...{ dbaLink: data.dbaLink } });\r\n                getDBAListingData(data.dbaLink);\r\n            }\r\n        }\r\n        else if (state.current == 1) {\r\n            let data = await form2.validateFields(['name', 'title', 'phone', 'location', 'price', \"zip\"]);\r\n            if (data) {\r\n                setState({ ...state, ...{ current: state.current + 1 } });\r\n                savePickUpDetails({ ...details, ...data });\r\n\r\n            }\r\n        }\r\n        else if (state.current == 2) {\r\n            if (state.selectedHour && state.pickupDate != \"\") {\r\n                setState({ ...state, ...{ current: state.current + 1 } });\r\n                savePickUpDetails({ ...details, selectedHour: state.selectedHour, pickupDate: state.pickupDate })\r\n            }\r\n            else {\r\n                bookingError('error');\r\n            }\r\n        }\r\n        else if (state.current == 3) {\r\n            let data = await form3.validateFields(['name', 'phone', 'location', \"zip\"]);\r\n            if (data) {\r\n                setState({ ...state, ...{ current: state.current + 1 } });\r\n                saveDeliveryDetails({ ...deliveryDetails, ...data });\r\n\r\n            }\r\n        }\r\n        else if (state.current == 4) {\r\n            setState({ ...state, submitConfirmVisible: true });\r\n        }\r\n        else {\r\n            setState({ ...state, current: state.current + 1 });\r\n        }\r\n    }\r\n\r\n    const onPrev = () => {\r\n        setState({ ...state, current: state.current - 1 })\r\n    }\r\n\r\n    const onClickEdit = (type) => {\r\n        if (type == \"shipping\")\r\n            setState({ ...state, current: 2 })\r\n        else if (type == \"pickup\")\r\n            setState({ ...state, current: 1 })\r\n\r\n    }\r\n\r\n    const onSubmitConfirm = (type) => {\r\n        if (type == \"ok\") {\r\n            saveNewBooking({\r\n                details,\r\n                deliveryDetails,\r\n                images,\r\n                url\r\n            })\r\n            setState({ ...state, submitted: true, submitConfirmVisible: false });\r\n        }\r\n        else\r\n            setState({ ...state, submitted: false, submitConfirmVisible: false });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (showMessage)\r\n            setTimeout(() => {\r\n                hideBookingMessage();\r\n            }, 2000);\r\n    }, [showMessage]);\r\n\r\n    useEffect(() => {\r\n        if (success && (state.current == 0 || state.current == 4)) {\r\n            setTimeout(() => {\r\n                hideBookingMessage();\r\n                setState({ ...state, ...{ current: state.current + 1 } })\r\n            }, 1000);\r\n\r\n        }\r\n\r\n    }, [success]);\r\n    const onDateSelect = (value) => {\r\n        setState({ ...state, pickupDate: value.format('YYYY-MM-DD') })\r\n    }\r\n\r\n    const onHourSelect = (hour) => {\r\n        setState({ ...state, selectedHour: hour });\r\n    }\r\n\r\n    const onRequestAgain = () => {\r\n        setState({\r\n            dbaLink: \"\",\r\n            current: 0,\r\n            loading: false,\r\n            submitConfirmVisible: false,\r\n            submitted: false,\r\n            pickupDate: moment().format('YYYY-MM-DD'),\r\n            selectedHour: undefined,\r\n            longitude: 0,\r\n            latitude: 0\r\n        });\r\n        resetBookingData();\r\n        form1.resetFields();\r\n        form2.resetFields();\r\n        form3.resetFields();\r\n\r\n    }\r\n    const onMarkerDragEnd = (location) => {\r\n        savePickUpDetails({ ...details, latitude: location.lat(), longitude: location.lng() })\r\n    }\r\n    const onMarkerDragEnd2 = (location) => {\r\n        saveDeliveryDetails({ ...deliveryDetails, latitude: location.lat(), longitude: location.lng() })\r\n    }\r\n\r\n\r\n    const steps = [\r\n        {\r\n            title: intl.formatMessage({ id: 'text.addListingUrl' }),\r\n            icon: LinkOutlined,\r\n            image: \"/img/wizards/1.svg\",\r\n            formTitle: \"1. \" + intl.formatMessage({ id: 'text.inputListing' }),\r\n            description: \"Input listing url from dba.dk\",\r\n            form: (\r\n                <Step1 intl={intl} success={success} message={message} layout={layout} showMessage={showMessage} form={form1} />)\r\n        },\r\n        {\r\n            title: intl.formatMessage({ id: 'text.pickupInformtion' }),\r\n            icon: LinkOutlined,\r\n            image: \"/img/wizards/2.svg\",\r\n            formTitle: \"2. \" + intl.formatMessage({ id: 'text.reviewPickupInfo' }),\r\n            form:\r\n                <>{\r\n                    details ?\r\n                        <Step2 intl={intl} details={details} images={images} layout={layout} form={form2} onMarkerDragEnd={onMarkerDragEnd} />\r\n                        : \"\"\r\n                }\r\n                </>\r\n        },\r\n        {\r\n            title: intl.formatMessage({ id: 'text.pickupInformtion' }),\r\n            icon: LinkOutlined,\r\n            image: \"/img/wizards/2.svg\",\r\n            formTitle: \"3. \" + intl.formatMessage({ id: 'text.setPickupDate' }),\r\n            form:\r\n                <Step3 intl={intl} onHourSelect={onHourSelect} onDateSelect={onDateSelect} state={state} dates={dates} showMessage={showMessage} success={success} message={message} />\r\n        },\r\n        {\r\n            title: intl.formatMessage({ id: 'text.shippingInformtion' }),\r\n            icon: LinkOutlined,\r\n            image: \"/img/wizards/1-1.svg\",\r\n            formTitle: \"4. \" + intl.formatMessage({ id: 'text.shippingInformtion' }),\r\n            form: (\r\n\r\n\r\n                <Step4 intl={intl} form={form3} deliveryDetails={deliveryDetails} layout={layout} onMarkerDragEnd={onMarkerDragEnd2} showMessage={showMessage} success={success} message={message} />\r\n\r\n            )\r\n        },\r\n        {\r\n            title: \"Review Booking\",\r\n            icon: LinkOutlined,\r\n            image: \"/img/wizards/3.svg\",\r\n            formTitle: \"5. \" + intl.formatMessage({ id: 'text.reviewOrder' }),\r\n            form: (\r\n\r\n                <Step5 intl={intl} showMessage={showMessage} message={message} success={success} details={details} deliveryDetails={deliveryDetails} onClickEdit={onClickEdit} />\r\n            )\r\n        },\r\n        {\r\n            title: intl.formatMessage({ id: 'text.bookingSuccess' }),\r\n            icon: LinkOutlined,\r\n            image: \"/img/wizards/4.svg\",\r\n            form: <Step6 intl={intl} onRequestAgain={onRequestAgain} />\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"ml-4\">{intl.formatMessage({ id: 'text.createBooking' })}</h2>\r\n            <Row>\r\n                <Col xs={24} >\r\n                    <div className=\"m-4\">\r\n                        <div  >\r\n                            <Steps onChange={onChangeSteps} current={state.current}>\r\n                                <Step />\r\n                                <Step disabled={!details} />\r\n                                <Step disabled={!details} />\r\n                                <Step disabled={!details} />\r\n                                <Step disabled={!details} />\r\n                                <Step disabled={!state.submitted} />\r\n                            </Steps>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={24} >\r\n                    <div className=\"pl-5 pr-5 w-100\" >\r\n                        <h3>{steps[state.current].formTitle}</h3>\r\n                        {steps[state.current].form}\r\n                    </div>\r\n                    <div className=\"pl-4 pr-4\" >\r\n                        <Row justify=\"space-between\">\r\n                            <Col>\r\n                                {\r\n                                    state.current > 0 ?\r\n                                        <Button type=\"light\" loading={loading} onClick={onPrev}  >\r\n                                            {intl.formatMessage({ id: 'text.prev' })}\r\n                                        </Button> : \"\"\r\n                                }\r\n\r\n                            </Col>\r\n                            <Col >{\r\n                                state.current < 5 ?\r\n                                    <Button type=\"primary\" className=\"primary\" loading={loading} onClick={onNext} >\r\n                                        {intl.formatMessage({ id: 'text.next' })}\r\n                                    </Button> : \"\"\r\n                            }\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Modal\r\n                title={intl.formatMessage({ id: 'text.booking' })}\r\n                visible={state.submitConfirmVisible}\r\n                onOk={() => { onSubmitConfirm(\"ok\") }}\r\n                onCancel={() => { onSubmitConfirm(\"cancel\") }}\r\n                okText=\"Submit\"\r\n                cancelText=\"Cancel\"\r\n            >\r\n                <p> {intl.formatMessage({ id: 'text.submit' })}?</p>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ booking, calendar }) => {\r\n    const { details, images, showMessage, message, loading, success, deliveryDetails, url } = booking;\r\n    const { dates } = calendar;\r\n    return {\r\n        details, images, showMessage, message, loading, success, deliveryDetails, url, dates\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n\r\n    showBookingMessage, bookingError, hideBookingMessage, getDBAListingData, getDBAListingDataSuccess, savePickUpDetails, saveDeliveryDetails, saveNewBooking, resetBookingData\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(Wizard));","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\settings\\timeScheduler.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\bookingView.js",["794","795","796","797","798","799","800","801"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    Avatar, Drawer, Divider, Card, Tabs,\r\n    Alert\r\n} from 'antd'; import PageHeader from 'components/layout-components/PageHeader';\r\nimport { motion } from 'framer-motion';\r\nimport BookingService from 'services/BookingService';\r\nimport BookingPickup from './bookingPickup';\r\nimport BookingPickupDate from './bookingPickupDate';\r\nimport BookingShipping from './bookingShipping';\r\nimport { injectIntl } from 'react-intl';\r\nconst { TabPane } = Tabs;\r\n\r\nexport const BookingView = ({ intl, match }) => {\r\n    const [bookingData, setBookingData] = useState({ pickup: {}, shipping: {} });\r\n    const [state, setState] = useState({\r\n        loading: false, message: \"\", showMessage: false, error: false\r\n    });\r\n    const bookingId = match.params.id;\r\n    const hideMessage = () => {\r\n        setTimeout(() => {\r\n            setState({ ...state, showMessage: false, error: false, message: \"\" });\r\n        }, 4000);\r\n    }\r\n    const showMessage = (message) => {\r\n        setState({ ...state, showMessage: true, error: true, message: message });\r\n    }\r\n    useEffect(async () => {\r\n        try {\r\n            const data = await BookingService.getData(bookingId);\r\n            setBookingData(data);\r\n        } catch (err) {\r\n            showMessage(err.message);\r\n            hideMessage();\r\n        }\r\n\r\n    }, []);\r\n    useEffect(async () => {\r\n        if (state.showMessage)\r\n            setTimeout(() => {\r\n                setState({ showMessage: false, message: \"\", error: false });\r\n            }, 4000);\r\n    })\r\n    const onUpdate = async (values, type) => {\r\n        try {\r\n            setState({\r\n                ...state,\r\n                loading: true,\r\n            });\r\n            if (type == \"pickup\") {\r\n                const res = await BookingService.updatePickup(bookingId, values);\r\n                setBookingData(res);\r\n            }\r\n            else if (type == \"shipping\") {\r\n                const res = await BookingService.updateShipping(bookingId, values);\r\n                setBookingData(res);\r\n            }\r\n            setState({\r\n                ...state,\r\n                error: false,\r\n                message: \"Success\",\r\n                loading: false,\r\n                showMessage: true\r\n            });\r\n\r\n\r\n        } catch (err) {\r\n            setState({\r\n                ...state,\r\n                error: true,\r\n                message: err.message,\r\n                loading: false,\r\n                showMessage: true\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <> <PageHeader title={bookingData.pickup.name} display={true} trans={false} />\r\n            {\r\n                state.showMessage ? <motion.div\r\n                    initial={{ opacity: 0, marginBottom: 0 }}\r\n                    animate={{\r\n                        opacity: state.showMessage ? 1 : 0,\r\n                        marginBottom: state.showMessage ? 20 : 0\r\n                    }}>\r\n                    <Alert type={state.error ? \"error\" : \"success\"} showIcon message={state.message}></Alert>\r\n                </motion.div> : \"\"\r\n            }\r\n            <Card>\r\n                <Tabs defaultActiveKey=\"1\">\r\n                    <TabPane tab={intl.formatMessage({ id: 'text.pickupInformtion' })} key=\"1\">\r\n                        <BookingPickup bookingData={bookingData} loading={state.loading} onUpdate={onUpdate} />\r\n                    </TabPane>\r\n                    <TabPane tab={intl.formatMessage({ id: 'text.pickupDate' })} key=\"2\">\r\n                        <BookingPickupDate pickupData={bookingData.pickup} loading={state.loading} onUpdate={onUpdate} />\r\n                    </TabPane>\r\n\r\n                    <TabPane tab={intl.formatMessage({ id: 'text.shippingInformtion' })} key=\"3\">\r\n                        <BookingShipping bookingData={bookingData} loading={state.loading} onUpdate={onUpdate} />\r\n                    </TabPane>\r\n                </Tabs>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(BookingView))\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\index.js",["802","803","804","805","806"],"import { Component } from \"react\";\r\nimport ClientBookingList from \"./clientList\";\r\nimport AdminBookingList from \"./adminList\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Empty, Spin } from \"antd\";\r\nexport const BookingList = () => {\r\n    const userData = useSelector(state => state.user.userData);\r\n    let index = \"empty\";\r\n    if (userData && userData.role == \"client\")\r\n        return (<ClientBookingList />)\r\n\r\n    else if (userData && userData.role == \"admin\")\r\n        return (<AdminBookingList />)\r\n    else return (<Spin></Spin>)\r\n}\r\n\r\nexport default BookingList;","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\redux\\actions\\Calendar.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\accounts\\list\\index.js",["807","808","809","810","811","812","813"],"import React, { Component } from 'react'\r\nimport { Table, Tag, Tooltip, Button, Input, Modal, Alert, Row, Col, Select } from 'antd';\r\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport IntlMessage from \"components/util-components/IntlMessage\";\r\nimport { injectIntl } from 'react-intl'\r\nimport UserService from 'services/UserService';\r\nimport { motion } from \"framer-motion\"\r\nimport { Link } from 'react-router-dom';\r\nimport { UserFilterOptions, UserSortOptions } from \"../../../../constants/Options\";\r\nimport { STATUS_COLORS } from 'constants/ThemeConstant';\r\n\r\nconst { Search } = Input;\r\n\r\n\r\nexport class UserList extends Component {\r\n\r\n    state = {\r\n        users: [],\r\n        userProfileVisible: false,\r\n        submitConfirmVisible: false,\r\n        selectedUser: null,\r\n        loading: false,\r\n        showMessage: false,\r\n        message: \"\",\r\n        pagination: {\r\n            current: 1,\r\n            pageSize: 10,\r\n        },\r\n        query: {\r\n            sortBy: \"name\",\r\n            sortType: \"asc\",\r\n\r\n        }\r\n    }\r\n\r\n    deleteUser = userId => {\r\n        const user = this.state.users.find(item => item.id == userId)\r\n        this.setState({ submitConfirmVisible: true, selectedUser: user, error: false, message: \"\" });\r\n\r\n    }\r\n\r\n    showUserProfile = userInfo => {\r\n        this.setState({\r\n            userProfileVisible: true,\r\n            selectedUser: userInfo\r\n        });\r\n    };\r\n\r\n    closeUserProfile = () => {\r\n        this.setState({\r\n            userProfileVisible: false,\r\n            selectedUser: null\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const data = await UserService.list(this.state.query);\r\n        this.setState({\r\n            users: data.results\r\n        })\r\n    }\r\n\r\n    async onSubmitConfirm(type) {\r\n        if (type == \"ok\") {\r\n            this.setState({ submitConfirmVisible: false, loading: true });\r\n            try {\r\n                const result = await UserService.delete(this.state.selectedUser.id);\r\n                this.setState({\r\n                    users: this.state.users.filter(item => item.id !== this.state.selectedUser.id),\r\n                });\r\n                this.setState({ error: false, message: \"Deleted\", showMessage: true });\r\n            } catch (err) {\r\n                this.setState({ error: true, message: err.message, showMessage: true });\r\n            }\r\n            this.setState({ loading: false });\r\n            if (this.state.showMessage)\r\n                setTimeout(() => {\r\n                    this.setState({ showMessage: false });\r\n                }, 4000);\r\n        }\r\n        else\r\n            this.setState({ submitConfirmVisible: false });\r\n    }\r\n    tagRender = (props) => {\r\n        const { label, value, closable, onClose } = props;\r\n        const onPreventMouseDown = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        };\r\n        return (\r\n            <Tag\r\n                className={STATUS_COLORS[\"COLOR_\" + value]}\r\n                onMouseDown={onPreventMouseDown}\r\n                closable={closable}\r\n                onClose={onClose}\r\n                style={{ marginRight: 3 }}\r\n            >\r\n                {label}\r\n            </Tag>\r\n        );\r\n    }\r\n    onChangeSort = async (value) => {\r\n        const data = await UserService.list({ ...this.state.query, sortBy: value });\r\n        this.setState({\r\n            users: data.results,\r\n            query: { sortBy: value }\r\n        })\r\n    }\r\n    onChangeSearch = async (value) => {\r\n        const data = await UserService.list({ ...this.state.query, keyword: value });\r\n        this.setState({\r\n            users: data.results,\r\n            query: { keyword: value }\r\n        })\r\n\r\n    }\r\n    onChangeFilter = async (value) => {\r\n        const data = await UserService.list({ ...this.state.query, filterByStatus: value });\r\n        this.setState({\r\n            users: data.results,\r\n            query: { filterByStatus: value }\r\n        })\r\n\r\n    }\r\n    onChangeSortType = async (value) => {\r\n        const data = await UserService.list({ ...this.state.query, sortType: value });\r\n        this.setState({\r\n            users: data.results,\r\n            query: { sortType: value }\r\n        })\r\n\r\n    }\r\n    UserFilterOptions = UserFilterOptions.map(item => {\r\n        item.label = this.props.intl.formatMessage({ id: 'text.' + item.value })\r\n        return item;\r\n    })\r\n    UserSortOptions = UserSortOptions.map(item => {\r\n        item.label = this.props.intl.formatMessage({ id: 'text.' + item.value })\r\n        return item;\r\n    })\r\n    render() {\r\n        const { loading, users, userProfileVisible, selectedUser, pagination, submitConfirmVisible, error, message, showMessage } = this.state;\r\n        const tableColumns = [\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.user' }),\r\n                dataIndex: 'name',\r\n\r\n\r\n            },\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.email' }),\r\n                dataIndex: 'email',\r\n\r\n\r\n            },\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.role' }),\r\n                dataIndex: 'role',\r\n\r\n            },\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.lastLogin' }),\r\n                dataIndex: 'lastLogin',\r\n                render: date => (\r\n                    <span>{moment(date).format(\"MM/DD/YYYY\")} </span>\r\n                ),\r\n\r\n            },\r\n            {\r\n                title: this.props.intl.formatMessage({ id: 'text.status' }),\r\n                dataIndex: 'status',\r\n                render: status => (\r\n                    <Tag className=\"text-capitalize\" color={status === 'Active' ? 'cyan' : 'red'}>{status}</Tag>\r\n                ),\r\n\r\n            },\r\n            {\r\n                title: '',\r\n                dataIndex: 'actions',\r\n                render: (_, elm) => (\r\n                    <div className=\"text-right d-flex justify-content-end\">\r\n                        <Tooltip title={this.props.intl.formatMessage({ id: 'text.view' })}>\r\n                            <Link to={`./accounts/${elm.id}`}>\r\n                                <Button type=\"link\" className=\"mr-2\" icon={<EyeOutlined />} size=\"small\" />\r\n                            </Link>\r\n                        </Tooltip>\r\n                        <Tooltip title={this.props.intl.formatMessage({ id: 'text.delete' })}>\r\n                            <Button type=\"link\" danger icon={<DeleteOutlined />} onClick={() => { this.deleteUser(elm.id) }} size=\"small\" />\r\n                        </Tooltip>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <>\r\n                {showMessage ?\r\n                    <motion.div\r\n                        initial={{ opacity: 0, marginBottom: 0 }}\r\n                        animate={{\r\n                            opacity: showMessage ? 1 : 0,\r\n                            marginBottom: showMessage ? 20 : 0\r\n                        }}>\r\n                        <Alert type={error == false ? \"success\" : \"error\"} showIcon message={message}></Alert>\r\n                    </motion.div>\r\n                    : \"\"}\r\n                <Row justify=\"space-between\">\r\n                    <Col>\r\n                        <div className=\"p-2\">\r\n                            <Row align=\"middle \">\r\n                                <Col>\r\n                                    <span><IntlMessage id=\"text.filterBy\" /></span>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"ml-2\"\r\n                                        mode=\"multiple\"\r\n                                        showArrow\r\n                                        size=\"small\"\r\n                                        tagRender={this.tagRender}\r\n                                        onChange={this.onChangeFilter}\r\n                                        placeholder={this.props.intl.formatMessage({ id: 'text.selectRoleOrStatus' })}\r\n                                        style={{ width: '100%', minWidth: '150px' }}\r\n                                        options={UserFilterOptions}\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <span className=\"pl-4 pr-3\">- <IntlMessage id=\"text.and\" /> -</span>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Search size=\"small\" loading={loading} onSearch={this.onChangeSearch} size=\"small\" placeholder={this.props.intl.formatMessage({ id: 'text.inputName' })} style={{ width: \"170px\" }} />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"p-2\">\r\n                            <Row align=\"middle \">\r\n                                <Col>\r\n                                    <span><IntlMessage id=\"text.sortBy\" /></span>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"ml-2\"\r\n                                        size=\"small\"\r\n                                        showArrow\r\n                                        onChange={this.onChangeSort}\r\n                                        defaultValue=\"name\"\r\n                                        style={{ width: '100%', minWidth: '150px' }}\r\n                                        options={UserSortOptions}\r\n                                    />\r\n                                </Col>\r\n                                <Col>\r\n                                    <Select className=\"ml-3\"\r\n                                        showArrow\r\n                                        size=\"small\"\r\n                                        onChange={this.onChangeSortType}\r\n                                        defaultValue=\"desc\"\r\n                                        style={{ width: '80px' }}\r\n                                        options={[{ label: \"Desc\", value: \"desc\" }, { label: \"Asc\", value: \"asc\" }]}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Table columns={tableColumns} dataSource={users} rowKey='id'\r\n                    pagination={pagination} size=\"small\"\r\n\r\n                />\r\n\r\n\r\n\r\n                <Modal\r\n                    title=\"User\"\r\n                    visible={submitConfirmVisible}\r\n                    onOk={() => { this.onSubmitConfirm(\"ok\") }}\r\n                    onCancel={() => { this.onSubmitConfirm(\"cancel\") }}\r\n                    okText=\"Delete\"\r\n                    cancelText=\"Cancel\"\r\n                >\r\n                    <p><IntlMessage id=\"text.delete\" />?</p>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default injectIntl(UserList)\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\step3.js",["814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830"],"import {\r\n    Steps, Row, Col, Form, Input, Calendar,\r\n    Button, Divider, Alert, Image, Card, Tabs, Empty, Modal, Badge, Result, TimePicker\r\n} from 'antd';\r\n\r\nimport { ClockCircleOutlined, LinkOutlined, CheckCircleTwoTone } from '@ant-design/icons';\r\nimport { useState, useEffect } from \"react\";\r\nimport moment from 'moment';\r\nimport { motion } from 'framer-motion';\r\nimport { COLOR_GRAY, COLOR_GREEN } from 'constants/ThemeConstant';\r\nconst Step3 = ({ intl, onHourSelect, onDateSelect, state, dates, showMessage, success, message }) => {\r\n\r\n    const [selectedRange, setSelectedRange] = useState({});\r\n\r\n    const hourButtons = (Array.from(Array(24).keys())).map(i => {\r\n        let hour = i + 1;\r\n        let hourText = moment(hour, [\"HH\"]).format(\"h:mm A\");\r\n        const bgColor = state.selectedHour == hour ? \"#86bbf2\" : \"#caffc4\";\r\n        if (state.selectedHour === hour) {\r\n            return <Badge count={<CheckCircleTwoTone twoToneColor=\"#2e4ae0\" style={{ top: \"10px\", right: \"10px\" }} />}>\r\n                <Button className=\"m-1\" onClick={() => { onHourSelect(hour) }} style={{ width: \"100px\", backgroundColor: bgColor }} key={i} > {hourText}</Button>\r\n\r\n            </Badge>\r\n        }\r\n        else {\r\n            return <Button className=\"m-2\" onClick={() => { onHourSelect(hour) }} style={{ width: \"100px\", backgroundColor: bgColor }} key={i} > {hourText}</Button>\r\n\r\n        }\r\n    })\r\n    let date = dates.find(item => item.date == state.pickupDate);\r\n    const availableHours = date ? date.hours.map((item, index) => {\r\n        return <div className=\"p-1 m-1 pl-3 pr-3\" key={\"availableHours\" + index}\r\n            style={{\r\n                display: \"flex\", fontSize: \"16px\", justifyContent: \"space-between\",\r\n                alignItems: \"center\", width: \"255px\", borderRadius: \"10px\", border: \"1px solid #e6ebf1\", backgroundColor: COLOR_GREEN\r\n            }}>\r\n            <span><ClockCircleOutlined /> {item.from}</span> - <span>{item.to}</span>\r\n\r\n        </div>\r\n    }) : \"\"\r\n\r\n\r\n\r\n\r\n    const dateSelect = (value) => {\r\n        onDateSelect(value);\r\n\r\n\r\n    }\r\n    const onSelectHour = (time) => {\r\n        if (time) {\r\n            onHourSelect({\r\n                from: time[0].format(\"h:mm a\"),\r\n                to: time[1].format(\"h:mm a\")\r\n            })\r\n            setSelectedRange({\r\n                from: time[0].format(\"h:mm a\"),\r\n                to: time[1].format(\"h:mm a\")\r\n            });\r\n        }\r\n\r\n    }\r\n    const dateCellRender = (value) => {\r\n        const bookingDates = dates\r\n\r\n        var bgColor = \"#f6cdcd\";\r\n\r\n        for (var i = 0; i < bookingDates.length; i++) {\r\n            const item = bookingDates[i];\r\n            if (moment(value.format('YYYY-MM-DD')).isSame(item.date) && item.available) {\r\n                bgColor = \"#caffc4\";\r\n            }\r\n            else if (moment(value.format('YYYY-MM-DD')).isSame(item.date)) {\r\n\r\n                bgColor = \"#f6cdcd\";\r\n            }\r\n        }\r\n        if (state.pickupDate == value.format('YYYY-MM-DD')) {\r\n            bgColor = \"#86bbf2\";\r\n        }\r\n        const status = <div className=\"w-100 h-100 p-2\" >\r\n            <div style={{\r\n                backgroundColor: bgColor, borderRadius: \"5px\", border: \"1px solid #d1d4e3\",\r\n                padding: \"10px\",\r\n                display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\"\r\n            }}>\r\n                {value.date()}\r\n            </div>\r\n        </div>\r\n\r\n        return (\r\n            status\r\n        );\r\n    }\r\n\r\n    return <Row>\r\n\r\n        <Col md={12}>\r\n            <div className=\"p-1 p-md-2 \" >\r\n                <Calendar fullscreen={false} dateFullCellRender={dateCellRender} onSelect={dateSelect} />\r\n            </div>\r\n        </Col>\r\n        <Col md={12}> <div className=\"p-1 p-md-2 p-lg-5\" >\r\n            {showMessage ?\r\n\r\n                <motion.div\r\n                    initial={{ opacity: 0, marginBottom: 0 }}\r\n                    animate={{\r\n                        opacity: showMessage ? 1 : 0,\r\n                        marginBottom: showMessage ? 20 : 0\r\n                    }}>\r\n                    <Alert type={success ? \"success\" : \"error\"} showIcon message={message}></Alert>\r\n                </motion.div>\r\n                : \"\"}\r\n            {state.pickupDate ?\r\n                <div>\r\n\r\n                    <Divider orientation=\"left\" >{intl.formatMessage({ id: 'text.sekectedDate' })} <span style={{ color: \"#4b64e8\" }}>{state.pickupDate}</span></Divider>\r\n                    <h5>{intl.formatMessage({ id: 'text.chooseTime' })}</h5>\r\n                    <TimePicker.RangePicker minuteStep={10} onChange={onSelectHour} format={\"h:mm a\"} />\r\n                    <Divider orientation=\"left\" ></Divider>\r\n                    <h5>{intl.formatMessage({ id: 'text.pickupHours' })}<span style={{ color: \"#4b64e8\" }}>{state.pickupDate}</span></h5>\r\n                    <div >\r\n                        {availableHours}\r\n                    </div>\r\n                </div>\r\n\r\n                : \"\"\r\n            } </div></Col>\r\n\r\n    </Row>\r\n}\r\n\r\nexport default Step3;\r\n\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\step5.js",["831","832","833","834","835","836","837","838","839","840","841"],"import {\r\n    Steps, Row, Col, Form, Input, Calendar,\r\n    Button, Divider, Alert, Image, Card, Tabs, Empty, Modal, Badge, Result\r\n} from 'antd';\r\nimport FeatherIcon from 'feather-icons-react';\r\nimport { motion } from 'framer-motion';\r\nimport moment from 'moment';\r\nconst Step5 = ({ intl, details, deliveryDetails, onClickEdit, message, showMessage, success }) => {\r\n    return <Row>\r\n        <Col sm={24} lg={12}>{showMessage ?\r\n            <motion.div\r\n                initial={{ opacity: 0, marginBottom: 0 }}\r\n                animate={{\r\n                    opacity: showMessage ? 1 : 0,\r\n                    marginBottom: showMessage ? 20 : 0\r\n                }}>\r\n                <Alert type={success ? \"success\" : \"error\"} showIcon message={message}></Alert>\r\n            </motion.div>\r\n            : \"\"}\r\n            <Card className=\"p-1 m-3\" >\r\n                <div >\r\n                    <h5 style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <span>{intl.formatMessage({ id: 'text.pickupInformtion' })}</span>\r\n                        <Button type=\"link\" onClick={() => { onClickEdit(\"pickup\") }} >\r\n                            <FeatherIcon icon=\"edit\" />\r\n                            {intl.formatMessage({ id: 'text.edit' })}\r\n                        </Button>\r\n                    </h5>\r\n                </div>\r\n                <article >\r\n                    {details && details.selectedHour ?\r\n                        <div >\r\n                            <h5>{details.name}</h5>\r\n                            <h5>{intl.formatMessage({ id: 'text.item' })} : {details.title}</h5>\r\n                            <h5>{intl.formatMessage({ id: 'text.phone' })}: {details.phone}</h5>\r\n                            <h5>{intl.formatMessage({ id: 'text.price' })} : {details.price}</h5>\r\n                            {//<h5>Pickup Date : {details.pickupDate} {moment(details.selectedHour, [\"HH\"]).format(\"h:mm A\")}</h5>\r\n                            }\r\n                            <h5>{intl.formatMessage({ id: 'text.pickupDate' })} : {details.pickupDate} {details.selectedHour.from} - {details.selectedHour.to}</h5>\r\n                            <p>\r\n                                {details.location}\r\n                            </p>\r\n                        </div>\r\n                        : <Empty />\r\n                    }\r\n                </article>\r\n            </Card>\r\n        </Col>\r\n        <Col sm={24} lg={12}>\r\n            <Card className=\"p-1  m-3\" >\r\n                <div >\r\n                    <h5 style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <span>{intl.formatMessage({ id: 'text.shippingInformtion' })}</span>\r\n                        <Button type=\"link\" onClick={() => { onClickEdit(\"shipping\") }} style={{ cursor: \"pointer\" }}>\r\n                            <FeatherIcon icon=\"edit\" className=\"primary\" />\r\n                            {intl.formatMessage({ id: 'text.edit' })}\r\n                        </Button>\r\n                    </h5>\r\n                </div>\r\n\r\n                <article >\r\n                    {deliveryDetails && deliveryDetails.location ?\r\n                        <div >\r\n                            <h5>{deliveryDetails.name}</h5>\r\n                            <h5>{intl.formatMessage({ id: 'text.phone' })}: {deliveryDetails.phone}</h5>\r\n                            <p>\r\n                                {deliveryDetails.location}\r\n                            </p>\r\n                        </div>\r\n                        : <Empty />\r\n                    }                    </article>\r\n            </Card>\r\n        </Col></Row>\r\n}\r\n\r\nexport default Step5;\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\step1.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\step4.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\step2.js",["842"],"import {\r\n    Form, Input,\r\n    Image, Tabs, Col, Row,\r\n} from 'antd';\r\nimport GoogleMapLocation from './googleMapLocation';\r\n\r\nimport { rulesPickup } from './rules';\r\nconst Step2 = ({ intl, details, form, layout, onMarkerDragEnd, images }) => {\r\n\r\n\r\n    return <Row xs={24} >\r\n\r\n        <Col xs={12}> <div className=\"p-4\">\r\n            <h4  >{intl.formatMessage({ id: 'text.details' })}</h4>\r\n            <Form form={form} name=\"pickupDetails\" {...layout} initialValues={details}>\r\n                <Form.Item name=\"name\" label={intl.formatMessage({ id: 'text.name' })} rules={rulesPickup.name}>\r\n                    <Input placeholder={intl.formatMessage({ id: 'text.name' })} className=\" m-0\" />\r\n                </Form.Item>\r\n                <Row>\r\n                    <Col sm={16}>\r\n                        <Form.Item name=\"location\" label={intl.formatMessage({ id: 'text.location' })} rules={rulesPickup.location} >\r\n                            <Input placeholder=\"Address\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col sm={8}><Form.Item name=\"zip\" className=\"pl-1\" label={intl.formatMessage({ id: 'text.zip' })} rules={rulesPickup.zip} >\r\n                        <Input placeholder={intl.formatMessage({ id: 'text.zip' })} />\r\n                    </Form.Item></Col>\r\n                </Row>\r\n\r\n\r\n                <GoogleMapLocation longitude={details.longitude} latitude={details.latitude} onMarkerDragEnd={onMarkerDragEnd} />\r\n                <Form.Item name=\"phone\" label={intl.formatMessage({ id: 'text.phone' })} rules={rulesPickup.phone}>\r\n                    <Input placeholder={intl.formatMessage({ id: 'text.phone' })} />\r\n                </Form.Item>\r\n                <Form.Item name=\"title\" label={intl.formatMessage({ id: 'text.title' })} rules={rulesPickup.title}>\r\n                    <Input placeholder={intl.formatMessage({ id: 'text.title' })} />\r\n                </Form.Item>\r\n                <Form.Item name=\"price\" label={intl.formatMessage({ id: 'text.price' })}>\r\n                    <Input placeholder={intl.formatMessage({ id: 'text.price' })} />\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n        </Col>\r\n        <Col xs={12} >\r\n            <div className=\"p-4\">\r\n                <h4 className=\"mb-4\">{intl.formatMessage({ id: 'text.images' })}</h4>\r\n                <Image.PreviewGroup>\r\n                    {\r\n                        images.map((item, index) => {\r\n                            return <Image width={150} src={item} key={index} />\r\n                        })\r\n                    }\r\n                </Image.PreviewGroup>\r\n            </div>\r\n        </Col>\r\n    </Row>\r\n\r\n}\r\n\r\nexport default Step2;\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\step6.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\accounts\\list\\userBooking.js",["843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862"],"import { connect } from 'react-redux';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport IntlMessage from \"components/util-components/IntlMessage\";\r\nimport { injectIntl } from 'react-intl'\r\nimport { updateBooking, getBookings } from \"redux/actions/Booking\";\r\nimport moment from \"moment\";\r\nimport { LoadingOutlined, CheckCircleTwoTone, PlusOutlined } from '@ant-design/icons';\r\nimport { Table, Tag, Space, Tooltip, Empty, Card, Col, Row, Input, Image, Button, Radio, Select } from 'antd';\r\nimport BookingService from 'services/BookingService';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { statusOptions, sortOptions } from \"../../../../constants/Options\";\r\nimport { STATUS_COLORS } from 'constants/ThemeConstant';\r\nimport { debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\nimport { debounce } from 'lodash';\r\n\r\nconst { Search } = Input;\r\nexport var bookingTableColumns = [\r\n    {\r\n        title: 'ID',\r\n        dataIndex: 'id',\r\n\r\n    },\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n\r\n    },\r\n    {\r\n        title: 'Phone',\r\n        dataIndex: 'phone',\r\n\r\n    },\r\n    {\r\n        title: 'Item',\r\n        dataIndex: 'title',\r\n\r\n    },\r\n    {\r\n        title: 'Location',\r\n        dataIndex: 'location',\r\n    },\r\n    {\r\n        title: 'Pickup Date',\r\n        dataIndex: 'pickupDate',\r\n    },\r\n\r\n    {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        render: (text, record) => {\r\n            return <StatusColumnConnected text={text} record={record} />\r\n        }\r\n    },\r\n]\r\n\r\nconst StatusColumnRender = ({ text, record, index, updateBooking, loading }) => {\r\n    // const [status, setStatus] = useState(record.status);\r\n    const onChange = (value) => {\r\n        updateBooking({ type: \"booking\", data: { status: value }, id: record.id });\r\n    }\r\n\r\n\r\n    return <Select className=\"ml-2\" dropdownStyle={{}}\r\n        style={{ width: \"100%\", borderRadius: \"5px\", }}\r\n        className={STATUS_COLORS[\"COLOR_\" + record.status]}\r\n        showArrow\r\n        bordered={false}\r\n        options={statusOptions}\r\n        value={record.status}\r\n        onChange={onChange}\r\n        loading={loading}\r\n        size=\"small\"\r\n\r\n    />\r\n}\r\nconst UserBookingList = ({ loading, results, success, getBookings, userId, intl }) => {\r\n    const [query, setQuery] = useState({ sortBy: intl.formatMessage({ id: 'text.submitted' }), sortType: \"Desc\", filterByUser: userId });\r\n    const [tableState, setTableState] = useState({\r\n        data: [],\r\n        pagination: {\r\n            current: 1,\r\n            pageSize: 10,\r\n        },\r\n        loading: false,\r\n\r\n    });\r\n    if (results.length > 0)\r\n        results = results.map(item => {\r\n            item = { ...item, ...item.pickup };\r\n            return item;\r\n        });\r\n    useEffect(async () => {\r\n\r\n        getBookings(query);\r\n    }, [query]);\r\n\r\n    const tagRender = (props) => {\r\n        const { label, value, closable, onClose } = props;\r\n        const onPreventMouseDown = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        };\r\n        return (\r\n            <Tag\r\n                className={STATUS_COLORS[\"COLOR_\" + value]}\r\n                onMouseDown={onPreventMouseDown}\r\n                closable={closable}\r\n                onClose={onClose}\r\n                style={{ marginRight: 3 }}\r\n            >\r\n                {label}\r\n            </Tag>\r\n        );\r\n    }\r\n\r\n    const onChangeSort = (value) => {\r\n        setQuery({ ...query, sortBy: value });\r\n\r\n    }\r\n    const onChangeSearch = (value) => {\r\n        setQuery({ ...query, keyword: value });\r\n    }\r\n    const onChangeFilter = (value) => {\r\n        setQuery({ ...query, filterByStatus: value });\r\n    }\r\n    const onChangeSortType = (value) => {\r\n        setQuery({ ...query, sortType: value });\r\n    }\r\n\r\n    statusOptions.map(item => {\r\n        item.label = intl.formatMessage({ id: 'text.' + item.value })\r\n        return item;\r\n    })\r\n\r\n    bookingTableColumns = bookingTableColumns.map(item => {\r\n        item.title = intl.formatMessage({ id: 'text.' + item.dataIndex })\r\n        return item;\r\n    })\r\n\r\n    return (<>\r\n\r\n        <Row justify=\"space-between\">\r\n            <Col>\r\n                <div className=\"p-2\">\r\n                    <Row align=\"middle \">\r\n                        <Col>\r\n                            <span>{intl.formatMessage({ id: 'text.filterBy' })}:</span>\r\n                        </Col>\r\n                        <Col>\r\n                            <Select className=\"ml-2\"\r\n                                mode=\"multiple\"\r\n                                showArrow\r\n                                tagRender={tagRender}\r\n                                onChange={onChangeFilter}\r\n                                placeholder={intl.formatMessage({ id: 'text.selectStatus' })}\r\n                                style={{ width: '100%', minWidth: '150px' }}\r\n                                options={statusOptions}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <span className=\"pl-4 pr-3\">- {intl.formatMessage({ id: 'text.and' })} -</span>\r\n                        </Col>\r\n                        <Col>\r\n                            <Search loading={loading} onSearch={onChangeSearch} size=\"middle\" placeholder={intl.formatMessage({ id: 'text.inputZipCode' })} style={{ width: \"170px\" }} />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n            <Col>\r\n                <div className=\"p-2\">\r\n                    <Row align=\"middle \">\r\n                        <Col>\r\n                            <span>Sort By:</span>\r\n                        </Col>\r\n                        <Col>\r\n                            <Select className=\"ml-2\"\r\n                                showArrow\r\n                                onChange={onChangeSort}\r\n                                defaultValue={intl.formatMessage({ id: 'text.submitted' })}\r\n                                style={{ width: '100%', minWidth: '150px' }}\r\n                                options={sortOptions}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <Select className=\"ml-3\"\r\n                                showArrow\r\n                                onChange={onChangeSortType}\r\n                                defaultValue=\"desc\"\r\n                                style={{ width: '80px' }}\r\n                                options={[{ label: \"Desc\", value: \"desc\" }, { label: \"Asc\", value: \"asc\" }]}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        <Table\r\n            columns={bookingTableColumns}\r\n            rowKey={record => record.id}\r\n            dataSource={results}\r\n            size={\"small\"}\r\n            pagination={tableState.pagination}\r\n            expandable={{\r\n                expandedRowRender: record => <BookingDetails booking={record} />,\r\n                rowExpandable: record => record.name !== 'Not Expandable',\r\n            }}\r\n        />\r\n    </>);\r\n}\r\n\r\nconst BookingDetails = ({ booking }) => {\r\n    const { pickup, shipping, images } = booking;\r\n    return <Row justify=\"start\" align=\"top\">\r\n        <Col xs={24} md={14} className=\"p-2\"> <InjectIntlPickupDetails details={pickup} images={images} /></Col>\r\n        <Col xs={24} md={10} className=\"p-2\"> <InjectIntlShippingDetails details={shipping} /></Col>\r\n    </Row>\r\n\r\n\r\n}\r\n\r\nconst PickupDetails = ({ details, images, intl }) => {\r\n    const [visible, setVisible] = useState(false);\r\n    return <Card className=\"p-1 \" >\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>\r\n                <h6>\r\n                    {intl.formatMessage({ id: 'text.pickupInformtion' })}\r\n                </h6>\r\n\r\n                <article >\r\n\r\n                    <div >\r\n                        <h5>{details.name}</h5>\r\n                        <h5>  {intl.formatMessage({ id: 'text.item' })} : {details.title}</h5>\r\n                        <h5>  {intl.formatMessage({ id: 'text.phone' })}: {details.phone}</h5>\r\n                        <h5>  {intl.formatMessage({ id: 'text.price' })} : {details.price}</h5>\r\n                        <h5>  {intl.formatMessage({ id: 'text.pickupDate' })} : {details.pickupDate} {moment(details.selectedHour, [\"HH\"]).format(\"h:mm A\")}</h5>\r\n                        <p>\r\n                            {details.location}\r\n                        </p>\r\n                    </div>\r\n                </article>\r\n            </div>\r\n            <Image\r\n                preview={{ visible: false }}\r\n                width={200}\r\n                src={images[0]}\r\n                onClick={() => setVisible(true)}\r\n            />\r\n            <div style={{ display: 'none' }}>\r\n                <Image.PreviewGroup preview={{ visible, onVisibleChange: vis => setVisible(vis) }}>\r\n\r\n                    {\r\n                        images.map((item, index) => {\r\n                            return <Image width={150} src={item} key={index} />\r\n                        })\r\n                    }\r\n                </Image.PreviewGroup>\r\n            </div>\r\n        </div>\r\n    </Card>\r\n}\r\n\r\nconst ShippingDetails = ({ details, intl }) => {\r\n    return <Card className=\"p-1 \" >\r\n        <div >\r\n            <h6>\r\n                {intl.formatMessage({ id: 'text.shippingInformtion' })}\r\n            </h6>\r\n        </div>\r\n\r\n        <article >\r\n            <div >\r\n                <h5>{details.name}</h5>\r\n                <h5> {intl.formatMessage({ id: 'text.phone' })}: {details.phone}</h5>\r\n                <p>\r\n                    {details.location}\r\n                </p>\r\n            </div>\r\n        </article>\r\n    </Card>\r\n}\r\nconst mapStateToProps = ({ bookingList }) => {\r\n    const { results, loading, success } = bookingList;\r\n    return {\r\n        results, loading, success\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    updateBooking, getBookings\r\n}\r\nconst InjectIntlPickupDetails = injectIntl(PickupDetails);\r\nconst InjectIntlShippingDetails = injectIntl(ShippingDetails);\r\n\r\nconst StatusColumnConnected = connect(mapStateToProps, mapActionsToProps)(injectIntl(StatusColumnRender));\r\nexport default connect(mapStateToProps, mapActionsToProps)(injectIntl(UserBookingList));\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\accounts\\list\\userSecurity.js",["863","864","865","866","867","868","869","870","871"],"import { useState, useEffect } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { motion } from 'framer-motion';\r\nimport { UserProfileRules } from 'constants/RulesContant';\r\nimport { Alert, Form, Input, Button, Row, Col, Select } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport UserService from \"services/UserService\";\r\nimport { hideAuthMessage } from \"redux/actions/Auth\";\r\nimport Item from \"views/app-views/components/navigation/dropdown/Item\";\r\nimport { injectIntl } from 'react-intl'\r\n\r\nconst UserSecurity = ({ message, userId = 0, onUpdate, intl }) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const [state, setState] = useState({\r\n        loading: false, message: \"\", showMessage: false, error: false\r\n    });\r\n    const onFormFinish = async (values) => {\r\n        delete values.confirm;\r\n        onUpdate(values);\r\n    }\r\n    const hideMessage = () => {\r\n        setTimeout(() => {\r\n            setState({ ...state, showMessage: false, error: false, message: \"\" });\r\n        }, 2000);\r\n    }\r\n    const showMessage = (message) => {\r\n        setState({ ...state, showMessage: true, error: true, message: message });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n                <Row justify=\"space-around\">\r\n\r\n                    <Col sm={24} xs={24} md={12} lg={8}>\r\n                        {\r\n                            state.showMessage ? <motion.div\r\n                                initial={{ opacity: 0, marginBottom: 0 }}\r\n                                animate={{\r\n                                    opacity: state.showMessage ? 1 : 0,\r\n                                    marginBottom: state.showMessage ? 20 : 0\r\n                                }}>\r\n                                <Alert type={state.error ? \"error\" : \"success\"} showIcon message={state.message}></Alert>\r\n                            </motion.div> : \"\"\r\n                        }\r\n\r\n                        <Form layout=\"vertical\" name=\"register-form\" onFinish={onFormFinish}>\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                label={intl.formatMessage({ id: 'text.password' })}\r\n                                rules={UserProfileRules.password}\r\n                                hasFeedback\r\n                            >\r\n                                <Input prefix={<LockOutlined className=\"text-primary\" />} />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item\r\n                                name=\"confirm\"\r\n                                label={intl.formatMessage({ id: 'text.confirmPassword' })}\r\n                                rules={UserProfileRules.confirm}\r\n                                hasFeedback\r\n                            >\r\n                                <Input prefix={<LockOutlined className=\"text-primary\" />} />\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" block loading={state.loading}>\r\n                                    {intl.formatMessage({ id: 'text.update' })}\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(UserSecurity))\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\accounts\\list\\userProfile.js",["872","873","874","875","876","877","878","879","880","881"],"import { useState, useEffect } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport { motion } from 'framer-motion';\r\nimport { UserProfileRules } from 'constants/RulesContant';\r\nimport { Alert, Form, Input, Button, Row, Col, Select } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport UserService from \"services/UserService\";\r\nimport { hideAuthMessage } from \"redux/actions/Auth\";\r\nimport Item from \"views/app-views/components/navigation/dropdown/Item\";\r\nimport user from \"redux/reducers/User\";\r\nimport IntlMessage from \"components/util-components/IntlMessage\";\r\nimport { injectIntl } from 'react-intl'\r\nconst UserProfile = ({ loading, message, userId = 0, userData, onUpdate, intl }) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const [state, setState] = useState({\r\n        loading: false, message: \"\", showMessage: false, error: false\r\n    });\r\n\r\n    const hideMessage = () => {\r\n        setTimeout(() => {\r\n            setState({ ...state, showMessage: false, error: false, message: \"\" });\r\n        }, 2000);\r\n    }\r\n    const showMessage = (message) => {\r\n        setState({ ...state, showMessage: true, error: true, message: message });\r\n    }\r\n\r\n\r\n    const formFields = [];\r\n    Object.keys(userData).forEach(item => {\r\n        formFields.push({\r\n            name: [item],\r\n            value: userData[item]\r\n        })\r\n    })\r\n\r\n    const onFormFinish = (values) => {\r\n        onUpdate(values);\r\n    }\r\n    return (\r\n        <div>\r\n            <>\r\n                <Row justify=\"space-around\">\r\n\r\n                    <Col sm={24} xs={24} md={12} lg={8}>\r\n                        {\r\n                            state.showMessage ? <motion.div\r\n                                initial={{ opacity: 0, marginBottom: 0 }}\r\n                                animate={{\r\n                                    opacity: state.showMessage ? 1 : 0,\r\n                                    marginBottom: state.showMessage ? 20 : 0\r\n                                }}>\r\n                                <Alert type={state.error ? \"error\" : \"success\"} showIcon message={state.message}></Alert>\r\n                            </motion.div> : \"\"\r\n                        }\r\n\r\n                        <Form layout=\"vertical\" name=\"register-form\" onFinish={onFormFinish} fields={formFields}>\r\n                            <Form.Item\r\n                                name=\"name\"\r\n                                label={intl.formatMessage({ id: 'text.name' })}\r\n                                rules={UserProfileRules.name}\r\n                                hasFeedback\r\n\r\n\r\n                            >\r\n                                <Input prefix={<MailOutlined className=\"text-primary\" />} />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"email\"\r\n                                label={intl.formatMessage({ id: 'text.email' })}\r\n                                rules={UserProfileRules.email}\r\n                                hasFeedback\r\n                            >\r\n                                <Input prefix={<MailOutlined className=\"text-primary\" />} />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"status\"\r\n                                label={intl.formatMessage({ id: 'text.status' })}\r\n\r\n                                hasFeedback\r\n                            >\r\n                                <Select\r\n\r\n                                    showArrow\r\n                                    size=\"small\"\r\n                                    options={[\r\n                                        { label: \"Active\", value: \"Active\" },\r\n                                        { label: \"Blocked\", value: \"Blocked\" }\r\n                                    ]}\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"role\"\r\n                                label={intl.formatMessage({ id: 'text.role' })}\r\n\r\n                                hasFeedback\r\n                            >\r\n                                <Select\r\n\r\n                                    showArrow\r\n                                    size=\"small\"\r\n                                    options={[\r\n                                        { label: \"Admin\", value: \"admin\" },\r\n                                        { label: \"Client\", value: \"client\" }\r\n                                    ]}\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name=\"isEmailVerified\"\r\n                                label={intl.formatMessage({ id: 'text.emailVerified' })}\r\n\r\n                                hasFeedback\r\n                            >\r\n                                <Select\r\n\r\n                                    showArrow\r\n                                    size=\"small\"\r\n                                    options={[\r\n                                        { label: \"Yes\", value: true },\r\n                                        { label: \"No\", value: false }\r\n                                    ]}\r\n                                />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item>\r\n                                <Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n                                    {intl.formatMessage({ id: 'text.update' })}\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(injectIntl(UserProfile)))\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\bookingPickup.js",["882","883","884"],"import React, { useState } from 'react'\r\nimport {\r\n    Form, Input,\r\n    Image, Tabs, Col, Row, Button\r\n} from 'antd';\r\nimport GoogleMapLocation from '../create/googleMapLocation';\r\nimport { rulesPickup } from '../create/rules';\r\nimport { injectIntl } from 'react-intl'\r\n\r\nconst layout = {\r\n    labelCol: { span: 24 },\r\n    wrapperCol: { span: 24 },\r\n};\r\nconst BookingPickup = ({ intl, loading, bookingData, onUpdate }) => {\r\n    const [details, setDetails] = useState({});\r\n\r\n    const formFields = [];\r\n    Object.keys(bookingData.pickup).forEach(item => {\r\n        formFields.push({\r\n            name: [item],\r\n            value: bookingData.pickup[item]\r\n        })\r\n    });\r\n\r\n    const onFormFinish = (values) => {\r\n        onUpdate({ ...details, ...values }, 'pickup');\r\n\r\n    }\r\n    const onMarkerDragEnd = (location) => {\r\n        setDetails({ latitude: location.lat(), longitude: location.lng() });\r\n    }\r\n\r\n\r\n    return (\r\n        <> <Row justify=\"space-around\">\r\n\r\n            <Col sm={24} xs={24} md={12} lg={8}>\r\n                <Form layout=\"horizontal\" onFinish={onFormFinish} name=\"pickupDetails\" fields={formFields}>\r\n                    <Form.Item name=\"name\" label={intl.formatMessage({ id: 'text.name' })} rules={rulesPickup.name}>\r\n                        <Input placeholder={intl.formatMessage({ id: 'text.name' })} className=\" m-0\" />\r\n                    </Form.Item>\r\n                    <Row>\r\n                        <Col sm={16}>\r\n                            <Form.Item name=\"location\" label={intl.formatMessage({ id: 'text.location' })} rules={rulesPickup.location} >\r\n                                <Input placeholder={intl.formatMessage({ id: 'text.address' })} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col sm={8}><Form.Item name=\"zip\" className=\"pl-1\" label={intl.formatMessage({ id: 'text.zip' })} rules={rulesPickup.zip} >\r\n                            <Input placeholder={intl.formatMessage({ id: 'text.zip' })} />\r\n                        </Form.Item></Col>\r\n                    </Row>\r\n\r\n\r\n                    {\r\n                        bookingData.pickup ?\r\n                            <GoogleMapLocation longitude={bookingData.pickup.longitude} latitude={bookingData.pickup.latitude} onMarkerDragEnd={onMarkerDragEnd} />\r\n                            : \"\"\r\n                    }\r\n                    <Form.Item name=\"phone\" label={intl.formatMessage({ id: 'text.phone' })} rules={rulesPickup.phone}>\r\n                        <Input placeholder={intl.formatMessage({ id: 'text.phone' })} />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"title\" label={intl.formatMessage({ id: 'text.title' })} rules={rulesPickup.title}>\r\n                        <Input placeholder={intl.formatMessage({ id: 'text.title' })} />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"price\" label={intl.formatMessage({ id: 'text.price' })}>\r\n                        <Input placeholder={intl.formatMessage({ id: 'text.price' })} />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n                            {intl.formatMessage({ id: 'text.update' })}\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default injectIntl(BookingPickup);","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\bookingPickupDate.js",["885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ClockCircleOutlined, LinkOutlined, CheckCircleTwoTone } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport {\r\n    Steps, Row, Col, Form, Input, Calendar,\r\n    Button, Divider, Alert, Image, Card, Tabs, Empty, Modal, Badge, Result, TimePicker\r\n} from 'antd';\r\nimport { motion } from 'framer-motion';\r\nimport { COLOR_GRAY, COLOR_GREEN } from 'constants/ThemeConstant';\r\nimport { getCalendarDates } from \"redux/actions/Calendar\";\r\nimport { injectIntl } from 'react-intl'\r\n\r\nexport const BookingPickupDate = ({ intl, getCalendarDates, pickupData, dates = [], loading, onUpdate }) => {\r\n    const [state, setState] = useState({\r\n        pickupDate: moment(pickupData.pickupDate).format('YYYY-MM-DD'),\r\n\r\n    });\r\n\r\n    let date = dates.find(item => item.date == state.pickupDate);\r\n    const availableHours = date ? date.hours.map((item, index) => {\r\n        return <div className=\"p-1 m-1 pl-3 pr-3\" key={\"availableHours\" + index}\r\n            style={{\r\n                display: \"flex\", fontSize: \"16px\", justifyContent: \"space-between\",\r\n                alignItems: \"center\", width: \"255px\", borderRadius: \"10px\", border: \"1px solid #e6ebf1\", backgroundColor: COLOR_GREEN\r\n            }}>\r\n            <span><ClockCircleOutlined /> {item.from}</span> - <span>{item.to}</span>\r\n\r\n        </div>\r\n    }) : \"\";\r\n\r\n    const dateSelect = (value) => {\r\n        setState({ ...state, pickupDate: value.format('YYYY-MM-DD') })\r\n    }\r\n\r\n    const onSelectHour = (time) => {\r\n        if (time) {\r\n            setState({\r\n                ...state, selectedHour: {\r\n                    from: time[0].format(\"h:mm a\"),\r\n                    to: time[1].format(\"h:mm a\")\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n    const dateCellRender = (value) => {\r\n        const bookingDates = dates\r\n\r\n        var bgColor = \"#f6cdcd\";\r\n\r\n        for (var i = 0; i < bookingDates.length; i++) {\r\n            const item = bookingDates[i];\r\n            if (moment(value.format('YYYY-MM-DD')).isSame(item.date) && item.available) {\r\n                bgColor = \"#caffc4\";\r\n            }\r\n            else if (moment(value.format('YYYY-MM-DD')).isSame(item.date)) {\r\n\r\n                bgColor = \"#f6cdcd\";\r\n            }\r\n        }\r\n        if (state.pickupDate == value.format('YYYY-MM-DD')) {\r\n            bgColor = \"#86bbf2\";\r\n        }\r\n        const status = <div className=\"w-100 h-100 p-2\" >\r\n            <div style={{\r\n                backgroundColor: bgColor, borderRadius: \"5px\", border: \"1px solid #d1d4e3\",\r\n                padding: \"10px\",\r\n                display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\"\r\n            }}>\r\n                {value.date()}\r\n            </div>\r\n        </div>\r\n\r\n        return (\r\n            status\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCalendarDates();\r\n    }, []);\r\n    useEffect(() => {\r\n        setState({ ...state, selectedHour: pickupData.selectedHour, pickupDate: pickupData.pickupDate })\r\n    }, [pickupData]);\r\n\r\n    const updatePickupDate = () => {\r\n        onUpdate({ pickupDate: state.pickupDate, selectedHour: state.selectedHour }, 'pickup');\r\n    }\r\n    return (\r\n        <Row>\r\n\r\n            <Col md={12}>\r\n                <div className=\"p-1 p-md-2 \" >\r\n                    <Calendar fullscreen={false} dateFullCellRender={dateCellRender} onSelect={dateSelect} />\r\n                </div>\r\n            </Col>\r\n            <Col md={12}> <div className=\"p-1 p-md-2 p-lg-5\" >\r\n\r\n                {state.pickupDate ?\r\n                    <div>\r\n\r\n                        <Divider orientation=\"left\" >{intl.formatMessage({ id: 'text.selectedDateIs' })}<span style={{ color: \"#4b64e8\" }}>{state.pickupDate}</span></Divider>\r\n                        <h5>{intl.formatMessage({ id: 'text.chooseTimeForPickup' })}</h5>\r\n                        {\r\n                            state.selectedHour ?\r\n                                <TimePicker.RangePicker className='mt-2'\r\n                                    minuteStep={10} onChange={onSelectHour}\r\n                                    format={\"h:mm a\"}\r\n                                    defaultValue={[\r\n                                        moment(state.selectedHour.from, \"h:mm a\"), moment(state.selectedHour.to, \"h:mm a\")\r\n                                    ]}\r\n                                /> : \"\"\r\n                        }\r\n                        <Button className='ml-md-2 ml-lg-4 mt-2' type=\"primary\" onClick={updatePickupDate} loading={loading}>\r\n                            {intl.formatMessage({ id: 'text.update' })}                        </Button>\r\n                        <Divider orientation=\"left\" ></Divider>\r\n                        <h5>{intl.formatMessage({ id: 'text.availablePickupHoursFor' })} <span style={{ color: \"#4b64e8\" }}>{state.pickupDate}</span></h5>\r\n                        <div >\r\n                            {availableHours.length > 0 ? availableHours : <Empty description={intl.formatMessage({ id: 'text.noAvailableHours' })} />}\r\n                        </div>\r\n                    </div>\r\n\r\n                    : \"\"\r\n                } </div></Col>\r\n\r\n        </Row>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ calendar }) => {\r\n    const { dates } = calendar;\r\n    return {\r\n        dates\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    getCalendarDates\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(BookingPickupDate))\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\bookingShipping.js",["903","904","905"],"import React, { useState } from 'react'\r\nimport {\r\n    Form, Input,\r\n    Image, Tabs, Col, Row, Button\r\n} from 'antd';\r\nimport GoogleMapLocation from '../create/googleMapLocation';\r\nimport { rulesDelivery } from '../create/rules';\r\nimport { injectIntl } from 'react-intl';\r\nconst layout = {\r\n    labelCol: { span: 24 },\r\n    wrapperCol: { span: 24 },\r\n};\r\nconst BookingShipping = ({ intl, loading, bookingData, onUpdate }) => {\r\n    const [details, setDetails] = useState({});\r\n    const formFields = [];\r\n    Object.keys(bookingData.shipping).forEach(item => {\r\n        formFields.push({\r\n            name: [item],\r\n            value: bookingData.shipping[item]\r\n        })\r\n    });\r\n    const onFormFinish = (values) => {\r\n        onUpdate({ ...details, ...values }, 'shipping');\r\n\r\n    }\r\n    const onMarkerDragEnd = (location) => {\r\n        setDetails({ latitude: location.lat(), longitude: location.lng() });\r\n    }\r\n\r\n    return (\r\n        <> <Row justify=\"space-around\">\r\n\r\n            <Col sm={24} xs={24} md={12} lg={8}>\r\n                <Form layout=\"horizontal\" onFinish={onFormFinish} name=\"pickupDetails\" fields={formFields}>\r\n                    <Form.Item name=\"name\" label={intl.formatMessage({ id: 'text.name' })} rules={rulesDelivery.name}>\r\n                        <Input placeholder={intl.formatMessage({ id: 'text.name' })} className=\" m-0\" />\r\n                    </Form.Item>\r\n                    <Row>\r\n                        <Col sm={16}>\r\n                            <Form.Item name=\"location\" label={intl.formatMessage({ id: 'text.location' })} rules={rulesDelivery.location} >\r\n                                <Input placeholder={intl.formatMessage({ id: 'text.address' })} />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col sm={8}><Form.Item name=\"zip\" className=\"pl-1\" label={intl.formatMessage({ id: 'text.zip' })} rules={rulesDelivery.zip} >\r\n                            <Input placeholder={intl.formatMessage({ id: 'text.zip' })} />\r\n                        </Form.Item></Col>\r\n                    </Row>\r\n                    {\r\n                        bookingData.pickup ?\r\n                            <GoogleMapLocation longitude={bookingData.pickup.longitude} latitude={bookingData.pickup.latitude} onMarkerDragEnd={onMarkerDragEnd} />\r\n                            : \"\"\r\n                    }\r\n                    <Form.Item name=\"phone\" label={intl.formatMessage({ id: 'text.phone' })} rules={rulesDelivery.phone}>\r\n                        <Input placeholder={intl.formatMessage({ id: 'text.phone' })} />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n                            {intl.formatMessage({ id: 'text.update' })}\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default injectIntl(BookingShipping);","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\lang\\entries\\zh_CN.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\lang\\entries\\en_US.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\CalendarService.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\adminList.js",["906","907","908","909","910","911","912","913","914","915","916","917"],"import { connect } from 'react-redux';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { updateBooking, getBookings, deleteBooking, hideBookingMessage } from \"redux/actions/Booking\";\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { Table, Tag, Card, Col, Row, Input, Image, Button, Select, Tooltip, Modal, Alert } from 'antd';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { statusOptions, sortOptions } from \"../../../../constants/Options\";\r\nimport { STATUS_COLORS } from 'constants/ThemeConstant';\r\nimport { debounce } from 'lodash';\r\nimport { EyeOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { motion } from 'framer-motion';\r\nimport { injectIntl } from 'react-intl'\r\nimport BookingDetails from './bookingDetails';\r\nconst { Search } = Input;\r\n\r\nconst StatusColumnRender = ({ intl, text, record, index, updateBooking, loading }) => {\r\n    // const [status, setStatus] = useState(record.status);\r\n    const onChange = (value) => {\r\n        updateBooking({ type: \"booking\", data: { status: value }, id: record.id });\r\n    }\r\n\r\n    statusOptions.map(item => {\r\n        item.label = intl.formatMessage({ id: 'text.' + item.value })\r\n        return item;\r\n    })\r\n    return <Select className=\"ml-2\" dropdownStyle={{}}\r\n        style={{ width: \"100%\", borderRadius: \"5px\", }}\r\n        className={STATUS_COLORS[\"COLOR_\" + record.status]}\r\n        showArrow\r\n        bordered={false}\r\n        options={statusOptions}\r\n        value={record.status}\r\n        onChange={onChange}\r\n        loading={loading}\r\n        size=\"small\"\r\n\r\n    />\r\n}\r\nconst AdminBookingList = ({ intl, loading, results, success, getBookings, deleteBooking, showMessage, message, totalResults }) => {\r\n    const [query, setQuery] = useState({ sortBy: \"Submitted\", sortType: \"Desc\" });\r\n    const [tableState, setTableState] = useState({\r\n        data: [],\r\n        pagination: {\r\n            current: 1,\r\n            pageSize: 10,\r\n            total: totalResults\r\n        },\r\n        loading: false,\r\n\r\n    });\r\n\r\n    const [state, setState] = useState({ submitConfirmVisible: false });\r\n    const bookingTableColumns = [\r\n        {\r\n            title: 'ID',\r\n            dataIndex: 'id',\r\n\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n\r\n        },\r\n        {\r\n            title: 'Item',\r\n            dataIndex: 'title',\r\n\r\n        },\r\n        {\r\n            title: 'Location',\r\n            dataIndex: 'location',\r\n        },\r\n        {\r\n            title: 'Pickup Date',\r\n            dataIndex: 'pickupDate',\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            render: (text, record) => {\r\n                return <StatusColumnConnected text={text} record={record} />\r\n            }\r\n        },\r\n        {\r\n            title: '',\r\n            dataIndex: 'actions',\r\n            render: (_, elm) => (\r\n                <div className=\"text-right d-flex justify-content-end\">\r\n                    <Tooltip title=\"View\">\r\n                        <Link to={`./bookings-list/${elm.id}`}>\r\n                            <Button type=\"link\" className=\"mr-2\" icon={<EyeOutlined />} size=\"small\" />\r\n                        </Link>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Delete\">\r\n                        <Button type=\"link\" danger icon={<DeleteOutlined />} onClick={() => { onDeleteBooking(elm.id) }} size=\"small\" />\r\n                    </Tooltip>\r\n                </div>\r\n            )\r\n        }\r\n    ]\r\n    bookingTableColumns.map(item => {\r\n        item.title = intl.formatMessage({ id: 'text.' + item.dataIndex })\r\n        return item;\r\n    });\r\n    if (results.length > 0)\r\n        results = results.map(item => {\r\n            item = { ...item, ...item.pickup };            \r\n            return item;\r\n        });\r\n    useEffect(async () => {\r\n        // var { limit, page, totalPages, totalResults, results } = await BookingService.getBookings({});\r\n        getBookings(query);\r\n    }, [query]);\r\n    useEffect(async () => {\r\n        setTableState({ ...tableState, pagination: { ...tableState.pagination, total: totalResults } });\r\n    }, [totalResults]);\r\n    const tagRender = (props) => {\r\n        const { label, value, closable, onClose } = props;\r\n        const onPreventMouseDown = event => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        };\r\n        return (\r\n            <Tag\r\n                className={STATUS_COLORS[\"COLOR_\" + value]}\r\n                onMouseDown={onPreventMouseDown}\r\n                closable={closable}\r\n                onClose={onClose}\r\n                style={{ marginRight: 3 }}\r\n            >\r\n                {label}\r\n            </Tag>\r\n        );\r\n    }\r\n    useEffect(async () => {\r\n        if (showMessage)\r\n            setTimeout(() => {\r\n                hideBookingMessage()\r\n            }, 4000);\r\n    })\r\n    const onChangeSort = (value) => {\r\n        setQuery({ ...query, sortBy: value });\r\n\r\n    }\r\n    const onChangeSearch = (value) => {\r\n        setQuery({ ...query, keyword: value });\r\n    }\r\n    const onChangeFilter = (value) => {\r\n        setQuery({ ...query, filterByStatus: value });\r\n    }\r\n    const onChangeSortType = (value) => {\r\n        setQuery({ ...query, sortType: value });\r\n    }\r\n\r\n    const onDeleteBooking = (id) => {\r\n        const booking = results.find(item => item.id == id);\r\n        setState({ ...state, selectedBooking: booking, submitConfirmVisible: true });\r\n    }\r\n    const onSubmitConfirm = (value) => {\r\n        if (value == \"ok\") {\r\n            deleteBooking({ id: state.selectedBooking.id });\r\n        }\r\n        setState({ ...state, submitConfirmVisible: false });\r\n    }\r\n\r\n    const onTableChange = (pagination, filters, sorter, extra) => {\r\n        if (extra.action == 'paginate') {\r\n            setTableState({ ...tableState, pagination: { ...tableState.pagination, current: pagination.current } })\r\n            setQuery({ ...query, page: pagination.current });\r\n        }\r\n\r\n    }\r\n    statusOptions.map(item => {\r\n        item.label = intl.formatMessage({ id: 'text.' + item.value })\r\n        return item;\r\n    })\r\n    return (<>\r\n        <Flex justifyContent=\"between\" alignItems=\"center\" className=\"py-4\">\r\n            <h2>{intl.formatMessage({ id: 'text.bookings' })}</h2>\r\n            <div>\r\n                <Link to={\"./bookings-create\"}>\r\n                    <Button type=\"primary\" className=\"ml-2\">\r\n                        <PlusOutlined />\r\n                        <span>{intl.formatMessage({ id: 'text.new' })}</span>\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        </Flex>\r\n        <Row justify=\"space-between\">\r\n            <Col>\r\n                <div className=\"p-2\">\r\n                    {\r\n                        showMessage ? <motion.div\r\n                            initial={{ opacity: 0, marginBottom: 0 }}\r\n                            animate={{\r\n                                opacity: showMessage ? 1 : 0,\r\n                                marginBottom: showMessage ? 20 : 0\r\n                            }}>\r\n                            <Alert type={success ? \"success\" : \"error\"} showIcon message={message}></Alert>\r\n                        </motion.div> : \"\"\r\n                    }\r\n                    <Row align=\"middle \">\r\n                        <Col>\r\n                            <span>{intl.formatMessage({ id: 'text.filterBy' })}</span>\r\n                        </Col>\r\n                        <Col>\r\n                            <Select className=\"ml-2\"\r\n                                mode=\"multiple\"\r\n                                showArrow\r\n                                tagRender={tagRender}\r\n                                onChange={onChangeFilter}\r\n                                placeholder={intl.formatMessage({ id: 'text.selectStatus' })}\r\n                                style={{ width: '100%', minWidth: '150px' }}\r\n                                options={statusOptions}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <span className=\"pl-4 pr-3\">- {intl.formatMessage({ id: 'text.and' })} -</span>\r\n                        </Col>\r\n                        <Col>\r\n                            <Search loading={loading} onSearch={onChangeSearch} size=\"middle\" placeholder={intl.formatMessage({ id: 'text.inputZipCode' })} style={{ width: \"170px\" }} />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n            <Col>\r\n                <div className=\"p-2\">\r\n                    <Row align=\"middle \">\r\n                        <Col>\r\n                            <span>{intl.formatMessage({ id: 'text.sortBy' })}:</span>\r\n                        </Col>\r\n                        <Col>\r\n                            <Select className=\"ml-2\"\r\n                                showArrow\r\n                                onChange={onChangeSort}\r\n                                defaultValue={intl.formatMessage({ id: 'text.submitted' })}\r\n                                style={{ width: '100%', minWidth: '150px' }}\r\n                                options={sortOptions}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <Select className=\"ml-3\"\r\n                                showArrow\r\n                                onChange={onChangeSortType}\r\n                                defaultValue=\"desc\"\r\n                                style={{ width: '80px' }}\r\n                                options={[{ label: \"Desc\", value: \"desc\" }, { label: \"Asc\", value: \"asc\" }]}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        <Table\r\n            columns={bookingTableColumns}\r\n            rowKey={record => record.id}\r\n            dataSource={results}\r\n            size={\"small\"}\r\n            pagination={tableState.pagination}\r\n            onChange={onTableChange}\r\n            expandable={{\r\n                expandedRowRender: record => <BookingDetails booking={record} />,\r\n                rowExpandable: record => record.name !== 'Not Expandable',\r\n            }}\r\n        />\r\n        <Modal\r\n            title=\"Booking\"\r\n            visible={state.submitConfirmVisible}\r\n            onOk={() => { onSubmitConfirm(\"ok\") }}\r\n            onCancel={() => { onSubmitConfirm(\"cancel\") }}\r\n            okText=\"Delete\"\r\n            cancelText=\"Cancel\"\r\n        >\r\n            <p>{intl.formatMessage({ id: 'text.delete' })}?</p>\r\n        </Modal>\r\n    </>);\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = ({ bookingList }) => {\r\n    const { results, loading, success, message, showMessage, totalResults } = bookingList;\r\n\r\n    return {\r\n        results, loading, success, message, showMessage, totalResults\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = {\r\n    updateBooking, getBookings, deleteBooking\r\n}\r\nconst StatusColumnConnected = connect(mapStateToProps, mapActionsToProps)(injectIntl(StatusColumnRender));\r\nexport default connect(mapStateToProps, mapActionsToProps)(injectIntl(AdminBookingList));","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\clientList.js",["918","919","920","921","922","923","924","925","926","927"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Row, Col, Tooltip, Tag, Menu, Card, Modal, Alert } from 'antd';\r\nimport { PlusOutlined, ClockCircleTwoTone, CalendarOutlined } from '@ant-design/icons';\r\nimport { STATUS_COLORS } from 'constants/ThemeConstant';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\nimport BookingService from 'services/BookingService';\r\nimport { deleteBooking, hideBookingListMessage, getBookings } from \"redux/actions/Booking\";\r\nimport { motion } from 'framer-motion';\r\nimport { injectIntl } from 'react-intl';\r\nconst ItemAction = injectIntl(({ intl, id, onDeleteBooking }) => {\r\n\treturn <EllipsisDropdown\r\n\t\tmenu={\r\n\t\t\t<Menu>\r\n\r\n\t\t\t\t<Menu.Item key=\"0\"><Link to={`./bookings-list/${id}`}>\r\n\t\t\t\t\t<span>{intl.formatMessage({ id: 'text.view' })}</span></Link>\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t<Menu.Divider />\r\n\t\t\t\t<Menu.Item key=\"2\" onClick={() => onDeleteBooking(id)}>\r\n\t\t\t\t\t<span>{intl.formatMessage({ id: 'text.delete' })}</span>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t</Menu>\r\n\t\t}\r\n\t/>\r\n})\r\n\r\nconst ItemHeader = ({ name, address, ownerName }) => (\r\n\t<div>\r\n\t\t<h4 className=\"mb-0\">{name}</h4>\r\n\t\t<span className=\"text-muted\">{ownerName}</span><br />\r\n\t\t<span className=\"text-muted\">{address}</span>\r\n\t</div>\r\n)\r\n\r\nconst ItemInfo = injectIntl(({ intl, pickupDate, status, address, name, statusColor, selectedHour }) => (\r\n\t<>\r\n\r\n\t\t<Flex alignItems=\"center\" justifyContent=\"between\">\r\n\r\n\t\t\t<div className=\"mr-3 mt-3\">\r\n\t\t\t\t<Tooltip title={intl.formatMessage({ id: 'text.pickupDate2' })}>\r\n\t\t\t\t\t<CalendarOutlined className=\"text-muted font-size-md text-primary\" />\r\n\t\t\t\t\t<span className=\"ml-1 text-muted\">{pickupDate}</span>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Tooltip title={intl.formatMessage({ id: 'text.pickupHours' })}>\r\n\t\t\t\t\t<ClockCircleTwoTone className=\"text-muted font-size-md text-primary\" />\r\n\t\t\t\t\t<span className=\"ml-1 text-muted\">{selectedHour.from} - {selectedHour.to}</span>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mt-3\">\r\n\t\t\t\t<Tag className={statusColor === \"none\" ? 'bg-gray-lightest' : statusColor} >\r\n\r\n\t\t\t\t\t<span className=\"ml-2 font-weight-semibold\">{intl.formatMessage({ id: 'text.' + status })}</span>\r\n\t\t\t\t</Tag>\r\n\t\t\t</div>\r\n\t\t</Flex>\r\n\t</>\r\n))\r\n\r\nconst GridItem = ({ data, removeId, onDeleteBooking }) => (\r\n\t<Card >\r\n\t\t<Flex alignItems=\"center\" justifyContent=\"start\">\r\n\t\t\t<img style={{ width: \"80px\", maxHeight: \"80px\", marginRight: \"10px\", borderRadius: \"10px\" }} src={data.images.length > 0 ? data.images[0] : \"\"} />\r\n\t\t\t<div style={{ flexGrow: 1, padding: \"5px\" }}><Flex alignItems=\"center\" justifyContent=\"between\">\r\n\r\n\t\t\t\t<ItemHeader name={data.pickup.title} ownerName={data.pickup.name} address={data.pickup.location} />\r\n\t\t\t\t<ItemAction id={data.id} removeId={removeId} onDeleteBooking={onDeleteBooking} />\r\n\t\t\t</Flex>\r\n\t\t\t</div>\r\n\t\t</Flex>\r\n\t\t<div className=\"mt-2\">\r\n\t\t\t<ItemInfo\r\n\t\t\t\tpickupDate={data.pickup.pickupDate}\r\n\t\t\t\tselectedHour={data.pickup.selectedHour}\r\n\t\t\t\tstatus={data.status || \"Recieved\"}\r\n\t\t\t\tstatusColor={STATUS_COLORS[\"COLOR_\" + data.status]}\r\n\r\n\t\t\t/>\r\n\t\t</div>\r\n\r\n\t</Card>\r\n)\r\n\r\n\r\nconst ClientBookingList = ({ intl, results: list, deleteBooking, showMessage, success, message, hideBookingListMessage, loading, getBookings, totalResults }) => {\r\n\r\n\tconst [query, setQuery] = useState({ sortBy: \"Submitted\", sortType: \"Desc\" });\r\n\tconst [state, setState] = useState({\r\n\t\tsubmitConfirmVisible: false\r\n\t});\r\n\r\n\r\n\tuseEffect(async () => {\r\n\t\tgetBookings(query);\r\n\t}, [query]);\r\n\r\n\tconst onDeleteBooking = (id) => {\r\n\t\tconst booking = list.find(item => item.id == id);\r\n\t\tsetState({ ...state, selectedBooking: booking, submitConfirmVisible: true });\r\n\t}\r\n\tconst onSubmitConfirm = (value) => {\r\n\t\tif (value == \"ok\") {\r\n\t\t\tdeleteBooking({ id: state.selectedBooking.id });\r\n\t\t}\r\n\t\tsetState({ ...state, submitConfirmVisible: false });\r\n\t}\r\n\tuseEffect(async () => {\r\n\t\tif (showMessage)\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\thideBookingListMessage();\r\n\t\t\t}, 4000);\r\n\t}, [showMessage])\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<Flex justifyContent=\"between\" alignItems=\"center\" className=\"py-4\">\r\n\t\t\t\t\t<h2>{intl.formatMessage({ id: 'text.bookings' })}</h2>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Link to={\"./bookings-create\"}>\r\n\t\t\t\t\t\t\t<Button type=\"primary\" className=\"ml-2\">\r\n\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t<span>{intl.formatMessage({ id: 'text.new' })}</span>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={`my-4 container-fluid`}>\r\n\t\t\t\t{showMessage ?\r\n\t\t\t\t\t<motion.div\r\n\t\t\t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }}\r\n\t\t\t\t\t\tanimate={{\r\n\t\t\t\t\t\t\topacity: showMessage ? 1 : 0,\r\n\t\t\t\t\t\t\tmarginBottom: showMessage ? 20 : 0\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Alert type={success == true ? \"success\" : \"error\"} showIcon message={message}></Alert>\r\n\t\t\t\t\t</motion.div>\r\n\t\t\t\t\t: \"\"}\r\n\t\t\t\t{\r\n\t\t\t\t\t<Row gutter={16}>\r\n\t\t\t\t\t\t{list ?\r\n\t\t\t\t\t\t\tlist.map(elm => (\r\n\t\t\t\t\t\t\t\t<Col xs={24} sm={24} lg={8} xl={8} xxl={6} key={elm.id}>\r\n\t\t\t\t\t\t\t\t\t<GridItem data={elm} onDeleteBooking={onDeleteBooking} />\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t)) : \"\"}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Booking\"\r\n\t\t\t\tvisible={state.submitConfirmVisible}\r\n\t\t\t\tonOk={() => { onSubmitConfirm(\"ok\") }}\r\n\t\t\t\tonCancel={() => { onSubmitConfirm(\"cancel\") }}\r\n\t\t\t\tokText=\"Delete\"\r\n\t\t\t\tcancelText=\"Cancel\"\t\t\t>\r\n\t\t\t\t<p>{intl.formatMessage({ id: 'text.delete' })}?</p>\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ bookingList }) => {\r\n\tconst { loading, success, message, showMessage, results, totalResults } = bookingList;\r\n\treturn {\r\n\t\tloading, success, message, showMessage, results, totalResults\r\n\t}\r\n}\r\n\r\nconst mapActionsToProps = {\r\n\tdeleteBooking, hideBookingListMessage, getBookings\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(injectIntl(ClientBookingList));\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\constants\\ApiConstant.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\googleMapLocation.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\create\\rules.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\services\\FirebaseService.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\bookings\\list\\bookingDetails.js",["928","929","930","931","932"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Table, Tag, Card, Col, Row, Input, Image, Button, Select } from 'antd';\r\nimport moment from 'moment';\r\nimport { injectIntl } from 'react-intl'\r\n\r\nexport const BookingDetails = ({ intl, booking }) => {\r\n    const { pickup, shipping, images } = booking;\r\n    return (\r\n        <Row justify=\"start\" align=\"top\">\r\n            <Col xs={24} md={14} className=\"p-2\"> <PickupDetails intl={intl} details={pickup} images={images} /></Col>\r\n            <Col xs={24} md={10} className=\"p-2\"> <ShippingDetails intl={intl} details={shipping} /></Col>\r\n        </Row>\r\n    )\r\n}\r\nconst PickupDetails = ({ intl, details, images }) => {\r\n    const [visible, setVisible] = useState(false);\r\n    return <Card className=\"p-1 \" >\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <div>\r\n                <h6>\r\n                    {intl.formatMessage({ id: 'text.pickupInformtion' })}\r\n                </h6>\r\n\r\n                <article >\r\n\r\n                    <div >\r\n                        <h5>{details.name}</h5>\r\n                        <h5>{intl.formatMessage({ id: 'text.item' })} : {details.title}</h5>\r\n                        <h5>{intl.formatMessage({ id: 'text.phone' })}: {details.phone}</h5>\r\n                        <h5>{intl.formatMessage({ id: 'text.price' })} : {details.price}</h5>\r\n                        <h5>{intl.formatMessage({ id: 'text.pickupDate' })} : {details.pickupDate} {moment(details.selectedHour, [\"HH\"]).format(\"h:mm A\")}</h5>\r\n                        <p>\r\n                            {details.location}\r\n                        </p>\r\n                    </div>\r\n                </article>\r\n            </div>\r\n            <Image\r\n                preview={{ visible: false }}\r\n                width={200}\r\n                src={images[0]}\r\n                onClick={() => setVisible(true)}\r\n            />\r\n            <div style={{ display: 'none' }}>\r\n                <Image.PreviewGroup preview={{ visible, onVisibleChange: vis => setVisible(vis) }}>\r\n\r\n                    {\r\n                        images.map((item, index) => {\r\n                            return <Image width={150} src={item} key={index} />\r\n                        })\r\n                    }\r\n                </Image.PreviewGroup>\r\n            </div>\r\n        </div>\r\n    </Card>\r\n}\r\n\r\nconst ShippingDetails = ({ intl, details }) => {\r\n    return <Card className=\"p-1 \" >\r\n        <div >\r\n            <h6>\r\n                {intl.formatMessage({ id: 'text.shippingInformtion' })}\r\n            </h6>\r\n        </div>\r\n\r\n        <article >\r\n            <div >\r\n                <h5>{details.name}</h5>\r\n                <h5>{intl.formatMessage({ id: 'text.phone' })}: {details.phone}</h5>\r\n                <p>\r\n                    {details.location}\r\n                </p>\r\n            </div>\r\n        </article>\r\n    </Card>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(BookingDetails))\r\n","E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\constants\\RulesContant.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\views\\app-views\\components\\navigation\\dropdown\\Item.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\auth\\FirebaseAuth.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\components\\shared-components\\EllipsisDropdown\\index.js",[],"E:\\Projects\\citysvc\\source\\citysvc-frontend\\src\\configs\\FirebaseConfig.js",[],{"ruleId":"933","severity":1,"message":"934","line":1,"column":26,"nodeType":"935","messageId":"936","endLine":1,"endColumn":39},{"ruleId":"933","severity":1,"message":"937","line":3,"column":97,"nodeType":"935","messageId":"936","endLine":3,"endColumn":113},{"ruleId":"933","severity":1,"message":"938","line":3,"column":115,"nodeType":"935","messageId":"936","endLine":3,"endColumn":141},{"ruleId":"933","severity":1,"message":"939","line":4,"column":227,"nodeType":"935","messageId":"936","endLine":4,"endColumn":246},{"ruleId":"940","severity":1,"message":"941","line":30,"column":32,"nodeType":"942","messageId":"943","endLine":30,"endColumn":34},{"ruleId":"940","severity":1,"message":"944","line":39,"column":32,"nodeType":"942","messageId":"943","endLine":39,"endColumn":34},{"ruleId":"940","severity":1,"message":"941","line":25,"column":70,"nodeType":"942","messageId":"943","endLine":25,"endColumn":72},{"ruleId":"940","severity":1,"message":"941","line":68,"column":34,"nodeType":"942","messageId":"943","endLine":68,"endColumn":36},{"ruleId":"940","severity":1,"message":"941","line":104,"column":24,"nodeType":"942","messageId":"943","endLine":104,"endColumn":26},{"ruleId":"940","severity":1,"message":"941","line":114,"column":15,"nodeType":"942","messageId":"943","endLine":114,"endColumn":17},{"ruleId":"940","severity":1,"message":"941","line":123,"column":29,"nodeType":"942","messageId":"943","endLine":123,"endColumn":31},{"ruleId":"940","severity":1,"message":"944","line":125,"column":37,"nodeType":"942","messageId":"943","endLine":125,"endColumn":39},{"ruleId":"933","severity":1,"message":"945","line":2,"column":30,"nodeType":"935","messageId":"936","endLine":2,"endColumn":60},{"ruleId":"933","severity":1,"message":"946","line":6,"column":10,"nodeType":"935","messageId":"936","endLine":6,"endColumn":21},{"ruleId":"940","severity":1,"message":"941","line":25,"column":31,"nodeType":"942","messageId":"943","endLine":25,"endColumn":33},{"ruleId":"940","severity":1,"message":"944","line":26,"column":92,"nodeType":"942","messageId":"943","endLine":26,"endColumn":94},{"ruleId":"940","severity":1,"message":"944","line":60,"column":32,"nodeType":"942","messageId":"943","endLine":60,"endColumn":34},{"ruleId":"933","severity":1,"message":"947","line":1,"column":43,"nodeType":"935","messageId":"936","endLine":1,"endColumn":53},{"ruleId":"933","severity":1,"message":"948","line":1,"column":15,"nodeType":"935","messageId":"936","endLine":1,"endColumn":24},{"ruleId":"933","severity":1,"message":"949","line":3,"column":10,"nodeType":"935","messageId":"936","endLine":3,"endColumn":17},{"ruleId":"933","severity":1,"message":"947","line":1,"column":43,"nodeType":"935","messageId":"936","endLine":1,"endColumn":53},{"ruleId":"933","severity":1,"message":"950","line":2,"column":62,"nodeType":"935","messageId":"936","endLine":2,"endColumn":90},{"ruleId":"933","severity":1,"message":"951","line":66,"column":19,"nodeType":"935","messageId":"936","endLine":66,"endColumn":22},{"ruleId":"940","severity":1,"message":"941","line":70,"column":29,"nodeType":"942","messageId":"943","endLine":70,"endColumn":31},{"ruleId":"933","severity":1,"message":"947","line":1,"column":43,"nodeType":"935","messageId":"936","endLine":1,"endColumn":53},{"ruleId":"933","severity":1,"message":"952","line":2,"column":42,"nodeType":"935","messageId":"936","endLine":2,"endColumn":44},{"ruleId":"933","severity":1,"message":"953","line":5,"column":10,"nodeType":"935","messageId":"936","endLine":5,"endColumn":14},{"ruleId":"933","severity":1,"message":"947","line":1,"column":43,"nodeType":"935","messageId":"936","endLine":1,"endColumn":53},{"ruleId":"933","severity":1,"message":"954","line":3,"column":22,"nodeType":"935","messageId":"936","endLine":3,"endColumn":41},{"ruleId":"933","severity":1,"message":"955","line":3,"column":43,"nodeType":"935","messageId":"936","endLine":3,"endColumn":58},{"ruleId":"933","severity":1,"message":"956","line":3,"column":60,"nodeType":"935","messageId":"936","endLine":3,"endColumn":81},{"ruleId":"933","severity":1,"message":"957","line":3,"column":83,"nodeType":"935","messageId":"936","endLine":3,"endColumn":106},{"ruleId":"933","severity":1,"message":"958","line":4,"column":5,"nodeType":"935","messageId":"936","endLine":4,"endColumn":17},{"ruleId":"933","severity":1,"message":"959","line":4,"column":39,"nodeType":"935","messageId":"936","endLine":4,"endColumn":51},{"ruleId":"933","severity":1,"message":"960","line":4,"column":53,"nodeType":"935","messageId":"936","endLine":4,"endColumn":70},{"ruleId":"940","severity":1,"message":"941","line":34,"column":33,"nodeType":"942","messageId":"943","endLine":34,"endColumn":35},{"ruleId":"961","severity":1,"message":"962","line":38,"column":9,"nodeType":"935","messageId":"963","endLine":38,"endColumn":19},{"ruleId":"933","severity":1,"message":"964","line":2,"column":3,"nodeType":"935","messageId":"936","endLine":2,"endColumn":20},{"ruleId":"933","severity":1,"message":"965","line":3,"column":132,"nodeType":"935","messageId":"936","endLine":3,"endColumn":148},{"ruleId":"933","severity":1,"message":"966","line":5,"column":27,"nodeType":"935","messageId":"936","endLine":5,"endColumn":43},{"ruleId":"933","severity":1,"message":"967","line":6,"column":8,"nodeType":"935","messageId":"936","endLine":6,"endColumn":23},{"ruleId":"933","severity":1,"message":"968","line":18,"column":124,"nodeType":"935","messageId":"936","endLine":18,"endColumn":133},{"ruleId":"933","severity":1,"message":"969","line":19,"column":10,"nodeType":"935","messageId":"936","endLine":19,"endColumn":22},{"ruleId":"933","severity":1,"message":"970","line":21,"column":9,"nodeType":"935","messageId":"936","endLine":21,"endColumn":23},{"ruleId":"933","severity":1,"message":"945","line":2,"column":30,"nodeType":"935","messageId":"936","endLine":2,"endColumn":60},{"ruleId":"940","severity":1,"message":"941","line":42,"column":33,"nodeType":"942","messageId":"943","endLine":42,"endColumn":35},{"ruleId":"961","severity":1,"message":"962","line":46,"column":9,"nodeType":"935","messageId":"963","endLine":46,"endColumn":19},{"ruleId":"940","severity":1,"message":"941","line":111,"column":33,"nodeType":"942","messageId":"943","endLine":111,"endColumn":35},{"ruleId":"961","severity":1,"message":"962","line":115,"column":9,"nodeType":"935","messageId":"963","endLine":115,"endColumn":19},{"ruleId":"933","severity":1,"message":"971","line":7,"column":3,"nodeType":"935","messageId":"936","endLine":7,"endColumn":15},{"ruleId":"933","severity":1,"message":"972","line":9,"column":3,"nodeType":"935","messageId":"936","endLine":9,"endColumn":15},{"ruleId":"933","severity":1,"message":"973","line":10,"column":3,"nodeType":"935","messageId":"936","endLine":10,"endColumn":25},{"ruleId":"933","severity":1,"message":"974","line":16,"column":8,"nodeType":"935","messageId":"936","endLine":16,"endColumn":12},{"ruleId":"975","severity":1,"message":"976","line":40,"column":8,"nodeType":"977","endLine":40,"endColumn":21,"suggestions":"978"},{"ruleId":"933","severity":1,"message":"979","line":7,"column":19,"nodeType":"935","messageId":"936","endLine":7,"endColumn":27},{"ruleId":"975","severity":1,"message":"980","line":13,"column":8,"nodeType":"977","endLine":13,"endColumn":21,"suggestions":"981"},{"ruleId":"975","severity":1,"message":"982","line":22,"column":8,"nodeType":"977","endLine":22,"endColumn":10,"suggestions":"983"},{"ruleId":"940","severity":1,"message":"941","line":8,"column":33,"nodeType":"942","messageId":"943","endLine":8,"endColumn":35},{"ruleId":"940","severity":1,"message":"941","line":10,"column":38,"nodeType":"942","messageId":"943","endLine":10,"endColumn":40},{"ruleId":"984","severity":1,"message":"985","line":47,"column":17,"nodeType":"986","endLine":47,"endColumn":163},{"ruleId":"975","severity":1,"message":"987","line":95,"column":15,"nodeType":"988","endLine":98,"endColumn":6},{"ruleId":"975","severity":1,"message":"989","line":98,"column":8,"nodeType":"977","endLine":98,"endColumn":15,"suggestions":"990"},{"ruleId":"933","severity":1,"message":"991","line":156,"column":11,"nodeType":"935","messageId":"936","endLine":156,"endColumn":23},{"ruleId":"933","severity":1,"message":"992","line":2,"column":10,"nodeType":"935","messageId":"936","endLine":2,"endColumn":15},{"ruleId":"933","severity":1,"message":"993","line":2,"column":34,"nodeType":"935","messageId":"936","endLine":2,"endColumn":40},{"ruleId":"933","severity":1,"message":"994","line":2,"column":42,"nodeType":"935","messageId":"936","endLine":2,"endColumn":50},{"ruleId":"933","severity":1,"message":"995","line":2,"column":68,"nodeType":"935","messageId":"936","endLine":2,"endColumn":72},{"ruleId":"933","severity":1,"message":"996","line":4,"column":10,"nodeType":"935","messageId":"936","endLine":4,"endColumn":23},{"ruleId":"933","severity":1,"message":"997","line":4,"column":25,"nodeType":"935","messageId":"936","endLine":4,"endColumn":36},{"ruleId":"933","severity":1,"message":"998","line":10,"column":3,"nodeType":"935","messageId":"936","endLine":10,"endColumn":17},{"ruleId":"933","severity":1,"message":"999","line":11,"column":3,"nodeType":"935","messageId":"936","endLine":11,"endColumn":24},{"ruleId":"933","severity":1,"message":"1000","line":14,"column":3,"nodeType":"935","messageId":"936","endLine":14,"endColumn":14},{"ruleId":"933","severity":1,"message":"1001","line":15,"column":3,"nodeType":"935","messageId":"936","endLine":15,"endColumn":19},{"ruleId":"933","severity":1,"message":"1002","line":16,"column":3,"nodeType":"935","messageId":"936","endLine":16,"endColumn":17},{"ruleId":"933","severity":1,"message":"1003","line":18,"column":8,"nodeType":"935","messageId":"936","endLine":18,"endColumn":13},{"ruleId":"933","severity":1,"message":"1004","line":19,"column":10,"nodeType":"935","messageId":"936","endLine":19,"endColumn":20},{"ruleId":"933","severity":1,"message":"1005","line":20,"column":10,"nodeType":"935","messageId":"936","endLine":20,"endColumn":21},{"ruleId":"933","severity":1,"message":"1006","line":68,"column":18,"nodeType":"935","messageId":"936","endLine":68,"endColumn":27},{"ruleId":"975","severity":1,"message":"987","line":75,"column":13,"nodeType":"988","endLine":79,"endColumn":4},{"ruleId":"975","severity":1,"message":"989","line":79,"column":6,"nodeType":"977","endLine":79,"endColumn":14,"suggestions":"1007"},{"ruleId":"940","severity":1,"message":"941","line":35,"column":61,"nodeType":"942","messageId":"943","endLine":35,"endColumn":63},{"ruleId":"940","severity":1,"message":"941","line":50,"column":18,"nodeType":"942","messageId":"943","endLine":50,"endColumn":20},{"ruleId":"933","severity":1,"message":"1008","line":53,"column":23,"nodeType":"935","messageId":"936","endLine":53,"endColumn":29},{"ruleId":"940","severity":1,"message":"941","line":71,"column":18,"nodeType":"942","messageId":"943","endLine":71,"endColumn":20},{"ruleId":"933","severity":1,"message":"1009","line":148,"column":35,"nodeType":"935","messageId":"936","endLine":148,"endColumn":49},{"ruleId":"940","severity":1,"message":"941","line":208,"column":44,"nodeType":"942","messageId":"943","endLine":208,"endColumn":46},{"ruleId":"1010","severity":1,"message":"1011","line":234,"column":107,"nodeType":"1012","messageId":"1013","endLine":234,"endColumn":119},{"ruleId":"933","severity":1,"message":"1014","line":3,"column":57,"nodeType":"935","messageId":"936","endLine":3,"endColumn":62},{"ruleId":"933","severity":1,"message":"1015","line":5,"column":8,"nodeType":"935","messageId":"936","endLine":5,"endColumn":19},{"ruleId":"933","severity":1,"message":"1016","line":6,"column":50,"nodeType":"935","messageId":"936","endLine":6,"endColumn":62},{"ruleId":"933","severity":1,"message":"1017","line":11,"column":10,"nodeType":"935","messageId":"936","endLine":11,"endColumn":16},{"ruleId":"984","severity":1,"message":"985","line":45,"column":17,"nodeType":"986","endLine":45,"endColumn":163},{"ruleId":"961","severity":1,"message":"1018","line":109,"column":17,"nodeType":"935","messageId":"963","endLine":109,"endColumn":28},{"ruleId":"975","severity":1,"message":"987","line":138,"column":15,"nodeType":"988","endLine":144,"endColumn":6},{"ruleId":"975","severity":1,"message":"1019","line":144,"column":8,"nodeType":"977","endLine":144,"endColumn":14,"suggestions":"1020"},{"ruleId":"975","severity":1,"message":"987","line":146,"column":15,"nodeType":"988","endLine":148,"endColumn":6},{"ruleId":"975","severity":1,"message":"1021","line":148,"column":8,"nodeType":"977","endLine":148,"endColumn":10,"suggestions":"1022"},{"ruleId":"975","severity":1,"message":"987","line":149,"column":15,"nodeType":"988","endLine":152,"endColumn":6},{"ruleId":"975","severity":1,"message":"1023","line":152,"column":8,"nodeType":"977","endLine":152,"endColumn":40,"suggestions":"1024"},{"ruleId":"933","severity":1,"message":"1025","line":4,"column":10,"nodeType":"935","messageId":"936","endLine":4,"endColumn":15},{"ruleId":"933","severity":1,"message":"1026","line":4,"column":33,"nodeType":"935","messageId":"936","endLine":4,"endColumn":41},{"ruleId":"933","severity":1,"message":"1027","line":1,"column":51,"nodeType":"935","messageId":"936","endLine":1,"endColumn":55},{"ruleId":"975","severity":1,"message":"987","line":32,"column":15,"nodeType":"988","endLine":38,"endColumn":6},{"ruleId":"975","severity":1,"message":"1028","line":38,"column":8,"nodeType":"977","endLine":38,"endColumn":23,"suggestions":"1029"},{"ruleId":"940","severity":1,"message":"941","line":51,"column":25,"nodeType":"942","messageId":"943","endLine":51,"endColumn":27},{"ruleId":"940","severity":1,"message":"941","line":70,"column":28,"nodeType":"942","messageId":"943","endLine":70,"endColumn":30},{"ruleId":"940","severity":1,"message":"941","line":75,"column":39,"nodeType":"942","messageId":"943","endLine":75,"endColumn":41},{"ruleId":"940","severity":1,"message":"941","line":82,"column":28,"nodeType":"942","messageId":"943","endLine":82,"endColumn":30},{"ruleId":"940","severity":1,"message":"941","line":87,"column":39,"nodeType":"942","messageId":"943","endLine":87,"endColumn":41},{"ruleId":"933","severity":1,"message":"1030","line":101,"column":15,"nodeType":"935","messageId":"936","endLine":101,"endColumn":16},{"ruleId":"975","severity":1,"message":"1028","line":131,"column":8,"nodeType":"977","endLine":131,"endColumn":23,"suggestions":"1031"},{"ruleId":"933","severity":1,"message":"997","line":8,"column":25,"nodeType":"935","messageId":"936","endLine":8,"endColumn":36},{"ruleId":"933","severity":1,"message":"1032","line":19,"column":15,"nodeType":"935","messageId":"936","endLine":19,"endColumn":16},{"ruleId":"975","severity":1,"message":"987","line":92,"column":15,"nodeType":"988","endLine":94,"endColumn":6},{"ruleId":"975","severity":1,"message":"989","line":94,"column":8,"nodeType":"977","endLine":94,"endColumn":29,"suggestions":"1033"},{"ruleId":"940","severity":1,"message":"941","line":122,"column":26,"nodeType":"942","messageId":"943","endLine":122,"endColumn":28},{"ruleId":"933","severity":1,"message":"1034","line":193,"column":21,"nodeType":"935","messageId":"936","endLine":193,"endColumn":29},{"ruleId":"933","severity":1,"message":"1035","line":2,"column":20,"nodeType":"935","messageId":"936","endLine":2,"endColumn":29},{"ruleId":"933","severity":1,"message":"1036","line":3,"column":10,"nodeType":"935","messageId":"936","endLine":3,"endColumn":30},{"ruleId":"933","severity":1,"message":"1037","line":4,"column":23,"nodeType":"935","messageId":"936","endLine":4,"endColumn":37},{"ruleId":"933","severity":1,"message":"1038","line":4,"column":39,"nodeType":"935","messageId":"936","endLine":4,"endColumn":56},{"ruleId":"933","severity":1,"message":"1039","line":5,"column":8,"nodeType":"935","messageId":"936","endLine":5,"endColumn":14},{"ruleId":"933","severity":1,"message":"1040","line":6,"column":25,"nodeType":"935","messageId":"936","endLine":6,"endColumn":40},{"ruleId":"933","severity":1,"message":"1041","line":7,"column":10,"nodeType":"935","messageId":"936","endLine":7,"endColumn":15},{"ruleId":"933","severity":1,"message":"1042","line":7,"column":17,"nodeType":"935","messageId":"936","endLine":7,"endColumn":20},{"ruleId":"933","severity":1,"message":"1043","line":7,"column":22,"nodeType":"935","messageId":"936","endLine":7,"endColumn":29},{"ruleId":"933","severity":1,"message":"1044","line":7,"column":31,"nodeType":"935","messageId":"936","endLine":7,"endColumn":35},{"ruleId":"933","severity":1,"message":"1025","line":7,"column":47,"nodeType":"935","messageId":"936","endLine":7,"endColumn":52},{"ruleId":"933","severity":1,"message":"1045","line":7,"column":54,"nodeType":"935","messageId":"936","endLine":7,"endColumn":59},{"ruleId":"933","severity":1,"message":"1046","line":7,"column":69,"nodeType":"935","messageId":"936","endLine":7,"endColumn":75},{"ruleId":"933","severity":1,"message":"996","line":8,"column":10,"nodeType":"935","messageId":"936","endLine":8,"endColumn":23},{"ruleId":"933","severity":1,"message":"997","line":8,"column":25,"nodeType":"935","messageId":"936","endLine":8,"endColumn":36},{"ruleId":"933","severity":1,"message":"1047","line":9,"column":10,"nodeType":"935","messageId":"936","endLine":9,"endColumn":23},{"ruleId":"933","severity":1,"message":"1048","line":11,"column":8,"nodeType":"935","messageId":"936","endLine":11,"endColumn":12},{"ruleId":"933","severity":1,"message":"993","line":5,"column":2,"nodeType":"935","messageId":"936","endLine":5,"endColumn":8},{"ruleId":"933","severity":1,"message":"1049","line":5,"column":10,"nodeType":"935","messageId":"936","endLine":5,"endColumn":16},{"ruleId":"933","severity":1,"message":"1050","line":5,"column":18,"nodeType":"935","messageId":"936","endLine":5,"endColumn":25},{"ruleId":"933","severity":1,"message":"1051","line":14,"column":8,"nodeType":"935","messageId":"936","endLine":14,"endColumn":19},{"ruleId":"975","severity":1,"message":"987","line":35,"column":12,"nodeType":"988","endLine":44,"endColumn":3},{"ruleId":"975","severity":1,"message":"1052","line":44,"column":5,"nodeType":"977","endLine":44,"endColumn":7,"suggestions":"1053"},{"ruleId":"975","severity":1,"message":"987","line":46,"column":12,"nodeType":"988","endLine":51,"endColumn":3},{"ruleId":"933","severity":1,"message":"1054","line":28,"column":83,"nodeType":"935","messageId":"936","endLine":28,"endColumn":101},{"ruleId":"940","severity":1,"message":"941","line":55,"column":27,"nodeType":"942","messageId":"943","endLine":55,"endColumn":29},{"ruleId":"940","severity":1,"message":"941","line":62,"column":32,"nodeType":"942","messageId":"943","endLine":62,"endColumn":34},{"ruleId":"940","severity":1,"message":"941","line":70,"column":32,"nodeType":"942","messageId":"943","endLine":70,"endColumn":34},{"ruleId":"940","severity":1,"message":"944","line":71,"column":56,"nodeType":"942","messageId":"943","endLine":71,"endColumn":58},{"ruleId":"940","severity":1,"message":"941","line":79,"column":32,"nodeType":"942","messageId":"943","endLine":79,"endColumn":34},{"ruleId":"940","severity":1,"message":"941","line":87,"column":32,"nodeType":"942","messageId":"943","endLine":87,"endColumn":34},{"ruleId":"940","severity":1,"message":"941","line":100,"column":18,"nodeType":"942","messageId":"943","endLine":100,"endColumn":20},{"ruleId":"940","severity":1,"message":"941","line":102,"column":23,"nodeType":"942","messageId":"943","endLine":102,"endColumn":25},{"ruleId":"940","severity":1,"message":"941","line":108,"column":18,"nodeType":"942","messageId":"943","endLine":108,"endColumn":20},{"ruleId":"975","severity":1,"message":"1055","line":126,"column":8,"nodeType":"977","endLine":126,"endColumn":21,"suggestions":"1056"},{"ruleId":"940","severity":1,"message":"941","line":129,"column":39,"nodeType":"942","messageId":"943","endLine":129,"endColumn":41},{"ruleId":"940","severity":1,"message":"941","line":129,"column":61,"nodeType":"942","messageId":"943","endLine":129,"endColumn":63},{"ruleId":"975","severity":1,"message":"1057","line":137,"column":8,"nodeType":"977","endLine":137,"endColumn":17,"suggestions":"1058"},{"ruleId":"933","severity":1,"message":"993","line":4,"column":5,"nodeType":"935","messageId":"936","endLine":4,"endColumn":11},{"ruleId":"933","severity":1,"message":"1049","line":4,"column":13,"nodeType":"935","messageId":"936","endLine":4,"endColumn":19},{"ruleId":"933","severity":1,"message":"1050","line":4,"column":21,"nodeType":"935","messageId":"936","endLine":4,"endColumn":28},{"ruleId":"975","severity":1,"message":"987","line":29,"column":15,"nodeType":"988","endLine":38,"endColumn":6},{"ruleId":"975","severity":1,"message":"1059","line":38,"column":8,"nodeType":"977","endLine":38,"endColumn":10,"suggestions":"1060"},{"ruleId":"975","severity":1,"message":"987","line":39,"column":15,"nodeType":"988","endLine":44,"endColumn":6},{"ruleId":"940","severity":1,"message":"941","line":51,"column":22,"nodeType":"942","messageId":"943","endLine":51,"endColumn":24},{"ruleId":"940","severity":1,"message":"941","line":55,"column":27,"nodeType":"942","messageId":"943","endLine":55,"endColumn":29},{"ruleId":"933","severity":1,"message":"1061","line":1,"column":10,"nodeType":"935","messageId":"936","endLine":1,"endColumn":19},{"ruleId":"933","severity":1,"message":"992","line":5,"column":10,"nodeType":"935","messageId":"936","endLine":5,"endColumn":15},{"ruleId":"933","severity":1,"message":"1062","line":8,"column":9,"nodeType":"935","messageId":"936","endLine":8,"endColumn":14},{"ruleId":"940","severity":1,"message":"941","line":9,"column":35,"nodeType":"942","messageId":"943","endLine":9,"endColumn":37},{"ruleId":"940","severity":1,"message":"941","line":12,"column":40,"nodeType":"942","messageId":"943","endLine":12,"endColumn":42},{"ruleId":"940","severity":1,"message":"941","line":38,"column":60,"nodeType":"942","messageId":"943","endLine":38,"endColumn":62},{"ruleId":"940","severity":1,"message":"941","line":65,"column":18,"nodeType":"942","messageId":"943","endLine":65,"endColumn":20},{"ruleId":"933","severity":1,"message":"1008","line":68,"column":23,"nodeType":"935","messageId":"936","endLine":68,"endColumn":29},{"ruleId":"933","severity":1,"message":"1063","line":143,"column":33,"nodeType":"935","messageId":"936","endLine":143,"endColumn":51},{"ruleId":"933","severity":1,"message":"1064","line":143,"column":53,"nodeType":"935","messageId":"936","endLine":143,"endColumn":65},{"ruleId":"940","severity":1,"message":"941","line":205,"column":44,"nodeType":"942","messageId":"943","endLine":205,"endColumn":46},{"ruleId":"1010","severity":1,"message":"1011","line":231,"column":107,"nodeType":"1012","messageId":"1013","endLine":231,"endColumn":119},{"ruleId":"933","severity":1,"message":"1065","line":2,"column":5,"nodeType":"935","messageId":"936","endLine":2,"endColumn":10},{"ruleId":"933","severity":1,"message":"1066","line":2,"column":22,"nodeType":"935","messageId":"936","endLine":2,"endColumn":26},{"ruleId":"933","severity":1,"message":"1025","line":2,"column":28,"nodeType":"935","messageId":"936","endLine":2,"endColumn":33},{"ruleId":"933","severity":1,"message":"1045","line":3,"column":29,"nodeType":"935","messageId":"936","endLine":3,"endColumn":34},{"ruleId":"933","severity":1,"message":"1044","line":3,"column":36,"nodeType":"935","messageId":"936","endLine":3,"endColumn":40},{"ruleId":"933","severity":1,"message":"1027","line":3,"column":42,"nodeType":"935","messageId":"936","endLine":3,"endColumn":46},{"ruleId":"933","severity":1,"message":"992","line":3,"column":48,"nodeType":"935","messageId":"936","endLine":3,"endColumn":53},{"ruleId":"933","severity":1,"message":"1067","line":3,"column":55,"nodeType":"935","messageId":"936","endLine":3,"endColumn":60},{"ruleId":"933","severity":1,"message":"1068","line":3,"column":69,"nodeType":"935","messageId":"936","endLine":3,"endColumn":75},{"ruleId":"933","severity":1,"message":"1069","line":6,"column":31,"nodeType":"935","messageId":"936","endLine":6,"endColumn":43},{"ruleId":"933","severity":1,"message":"1035","line":7,"column":20,"nodeType":"935","messageId":"936","endLine":7,"endColumn":29},{"ruleId":"933","severity":1,"message":"1070","line":10,"column":10,"nodeType":"935","messageId":"936","endLine":10,"endColumn":20},{"ruleId":"933","severity":1,"message":"1071","line":13,"column":12,"nodeType":"935","messageId":"936","endLine":13,"endColumn":25},{"ruleId":"933","severity":1,"message":"1072","line":15,"column":11,"nodeType":"935","messageId":"936","endLine":15,"endColumn":22},{"ruleId":"940","severity":1,"message":"941","line":18,"column":44,"nodeType":"942","messageId":"943","endLine":18,"endColumn":46},{"ruleId":"940","severity":1,"message":"941","line":30,"column":45,"nodeType":"942","messageId":"943","endLine":30,"endColumn":47},{"ruleId":"940","severity":1,"message":"941","line":78,"column":30,"nodeType":"942","messageId":"943","endLine":78,"endColumn":32},{"ruleId":"933","severity":1,"message":"1065","line":2,"column":5,"nodeType":"935","messageId":"936","endLine":2,"endColumn":10},{"ruleId":"933","severity":1,"message":"1066","line":2,"column":22,"nodeType":"935","messageId":"936","endLine":2,"endColumn":26},{"ruleId":"933","severity":1,"message":"1025","line":2,"column":28,"nodeType":"935","messageId":"936","endLine":2,"endColumn":33},{"ruleId":"933","severity":1,"message":"1073","line":2,"column":35,"nodeType":"935","messageId":"936","endLine":2,"endColumn":43},{"ruleId":"933","severity":1,"message":"1050","line":3,"column":13,"nodeType":"935","messageId":"936","endLine":3,"endColumn":20},{"ruleId":"933","severity":1,"message":"1045","line":3,"column":29,"nodeType":"935","messageId":"936","endLine":3,"endColumn":34},{"ruleId":"933","severity":1,"message":"1027","line":3,"column":42,"nodeType":"935","messageId":"936","endLine":3,"endColumn":46},{"ruleId":"933","severity":1,"message":"1067","line":3,"column":55,"nodeType":"935","messageId":"936","endLine":3,"endColumn":60},{"ruleId":"933","severity":1,"message":"1074","line":3,"column":62,"nodeType":"935","messageId":"936","endLine":3,"endColumn":67},{"ruleId":"933","severity":1,"message":"1068","line":3,"column":69,"nodeType":"935","messageId":"936","endLine":3,"endColumn":75},{"ruleId":"933","severity":1,"message":"1039","line":7,"column":8,"nodeType":"935","messageId":"936","endLine":7,"endColumn":14},{"ruleId":"933","severity":1,"message":"1027","line":3,"column":12,"nodeType":"935","messageId":"936","endLine":3,"endColumn":16},{"ruleId":"933","severity":1,"message":"1075","line":3,"column":10,"nodeType":"935","messageId":"936","endLine":3,"endColumn":14},{"ruleId":"933","severity":1,"message":"1051","line":4,"column":8,"nodeType":"935","messageId":"936","endLine":4,"endColumn":19},{"ruleId":"933","severity":1,"message":"1076","line":8,"column":10,"nodeType":"935","messageId":"936","endLine":8,"endColumn":25},{"ruleId":"933","severity":1,"message":"1077","line":8,"column":27,"nodeType":"935","messageId":"936","endLine":8,"endColumn":45},{"ruleId":"933","severity":1,"message":"1016","line":8,"column":47,"nodeType":"935","messageId":"936","endLine":8,"endColumn":59},{"ruleId":"933","severity":1,"message":"1078","line":9,"column":22,"nodeType":"935","messageId":"936","endLine":9,"endColumn":27},{"ruleId":"933","severity":1,"message":"1043","line":9,"column":29,"nodeType":"935","messageId":"936","endLine":9,"endColumn":36},{"ruleId":"933","severity":1,"message":"992","line":9,"column":38,"nodeType":"935","messageId":"936","endLine":9,"endColumn":43},{"ruleId":"933","severity":1,"message":"1079","line":9,"column":75,"nodeType":"935","messageId":"936","endLine":9,"endColumn":81},{"ruleId":"933","severity":1,"message":"1080","line":9,"column":83,"nodeType":"935","messageId":"936","endLine":9,"endColumn":88},{"ruleId":"933","severity":1,"message":"1081","line":10,"column":8,"nodeType":"935","messageId":"936","endLine":10,"endColumn":22},{"ruleId":"933","severity":1,"message":"1082","line":11,"column":8,"nodeType":"935","messageId":"936","endLine":11,"endColumn":12},{"ruleId":"933","severity":1,"message":"1083","line":14,"column":10,"nodeType":"935","messageId":"936","endLine":14,"endColumn":22},{"ruleId":"933","severity":1,"message":"1084","line":14,"column":24,"nodeType":"935","messageId":"936","endLine":14,"endColumn":44},{"ruleId":"933","severity":1,"message":"1085","line":14,"column":46,"nodeType":"935","messageId":"936","endLine":14,"endColumn":55},{"ruleId":"933","severity":1,"message":"1086","line":15,"column":10,"nodeType":"935","messageId":"936","endLine":15,"endColumn":18},{"ruleId":"1010","severity":1,"message":"1011","line":66,"column":9,"nodeType":"1012","messageId":"1013","endLine":66,"endColumn":60},{"ruleId":"933","severity":1,"message":"1087","line":79,"column":24,"nodeType":"935","messageId":"936","endLine":79,"endColumn":37},{"ruleId":"975","severity":1,"message":"987","line":93,"column":15,"nodeType":"988","endLine":96,"endColumn":6},{"ruleId":"975","severity":1,"message":"989","line":96,"column":8,"nodeType":"977","endLine":96,"endColumn":15,"suggestions":"1088"},{"ruleId":"933","severity":1,"message":"1035","line":1,"column":20,"nodeType":"935","messageId":"936","endLine":1,"endColumn":29},{"ruleId":"933","severity":1,"message":"1046","line":5,"column":48,"nodeType":"935","messageId":"936","endLine":5,"endColumn":54},{"ruleId":"933","severity":1,"message":"1089","line":6,"column":10,"nodeType":"935","messageId":"936","endLine":6,"endColumn":22},{"ruleId":"933","severity":1,"message":"1090","line":7,"column":8,"nodeType":"935","messageId":"936","endLine":7,"endColumn":19},{"ruleId":"933","severity":1,"message":"1091","line":8,"column":10,"nodeType":"935","messageId":"936","endLine":8,"endColumn":25},{"ruleId":"933","severity":1,"message":"1048","line":9,"column":8,"nodeType":"935","messageId":"936","endLine":9,"endColumn":12},{"ruleId":"933","severity":1,"message":"1092","line":14,"column":12,"nodeType":"935","messageId":"936","endLine":14,"endColumn":16},{"ruleId":"933","severity":1,"message":"1093","line":22,"column":11,"nodeType":"935","messageId":"936","endLine":22,"endColumn":22},{"ruleId":"933","severity":1,"message":"1094","line":27,"column":11,"nodeType":"935","messageId":"936","endLine":27,"endColumn":22},{"ruleId":"933","severity":1,"message":"1035","line":1,"column":20,"nodeType":"935","messageId":"936","endLine":1,"endColumn":29},{"ruleId":"933","severity":1,"message":"1095","line":6,"column":24,"nodeType":"935","messageId":"936","endLine":6,"endColumn":36},{"ruleId":"933","severity":1,"message":"1090","line":7,"column":8,"nodeType":"935","messageId":"936","endLine":7,"endColumn":19},{"ruleId":"933","severity":1,"message":"1091","line":8,"column":10,"nodeType":"935","messageId":"936","endLine":8,"endColumn":25},{"ruleId":"933","severity":1,"message":"1048","line":9,"column":8,"nodeType":"935","messageId":"936","endLine":9,"endColumn":12},{"ruleId":"933","severity":1,"message":"974","line":10,"column":8,"nodeType":"935","messageId":"936","endLine":10,"endColumn":12},{"ruleId":"933","severity":1,"message":"1051","line":11,"column":8,"nodeType":"935","messageId":"936","endLine":11,"endColumn":19},{"ruleId":"933","severity":1,"message":"1092","line":15,"column":12,"nodeType":"935","messageId":"936","endLine":15,"endColumn":16},{"ruleId":"933","severity":1,"message":"1093","line":20,"column":11,"nodeType":"935","messageId":"936","endLine":20,"endColumn":22},{"ruleId":"933","severity":1,"message":"1094","line":25,"column":11,"nodeType":"935","messageId":"936","endLine":25,"endColumn":22},{"ruleId":"933","severity":1,"message":"1045","line":4,"column":5,"nodeType":"935","messageId":"936","endLine":4,"endColumn":10},{"ruleId":"933","severity":1,"message":"1027","line":4,"column":12,"nodeType":"935","messageId":"936","endLine":4,"endColumn":16},{"ruleId":"933","severity":1,"message":"1096","line":10,"column":7,"nodeType":"935","messageId":"936","endLine":10,"endColumn":13},{"ruleId":"933","severity":1,"message":"1069","line":3,"column":31,"nodeType":"935","messageId":"936","endLine":3,"endColumn":43},{"ruleId":"933","severity":1,"message":"1077","line":3,"column":45,"nodeType":"935","messageId":"936","endLine":3,"endColumn":63},{"ruleId":"933","severity":1,"message":"1065","line":6,"column":5,"nodeType":"935","messageId":"936","endLine":6,"endColumn":10},{"ruleId":"933","severity":1,"message":"1066","line":6,"column":22,"nodeType":"935","messageId":"936","endLine":6,"endColumn":26},{"ruleId":"933","severity":1,"message":"1025","line":6,"column":28,"nodeType":"935","messageId":"936","endLine":6,"endColumn":33},{"ruleId":"933","severity":1,"message":"1014","line":7,"column":22,"nodeType":"935","messageId":"936","endLine":7,"endColumn":27},{"ruleId":"933","severity":1,"message":"1045","line":7,"column":29,"nodeType":"935","messageId":"936","endLine":7,"endColumn":34},{"ruleId":"933","severity":1,"message":"1044","line":7,"column":36,"nodeType":"935","messageId":"936","endLine":7,"endColumn":40},{"ruleId":"933","severity":1,"message":"1027","line":7,"column":42,"nodeType":"935","messageId":"936","endLine":7,"endColumn":46},{"ruleId":"933","severity":1,"message":"1067","line":7,"column":55,"nodeType":"935","messageId":"936","endLine":7,"endColumn":60},{"ruleId":"933","severity":1,"message":"1074","line":7,"column":62,"nodeType":"935","messageId":"936","endLine":7,"endColumn":67},{"ruleId":"933","severity":1,"message":"1068","line":7,"column":69,"nodeType":"935","messageId":"936","endLine":7,"endColumn":75},{"ruleId":"933","severity":1,"message":"1017","line":9,"column":10,"nodeType":"935","messageId":"936","endLine":9,"endColumn":16},{"ruleId":"933","severity":1,"message":"1070","line":10,"column":10,"nodeType":"935","messageId":"936","endLine":10,"endColumn":20},{"ruleId":"940","severity":1,"message":"941","line":20,"column":45,"nodeType":"942","messageId":"943","endLine":20,"endColumn":47},{"ruleId":"940","severity":1,"message":"941","line":62,"column":30,"nodeType":"942","messageId":"943","endLine":62,"endColumn":32},{"ruleId":"975","severity":1,"message":"980","line":82,"column":8,"nodeType":"977","endLine":82,"endColumn":10,"suggestions":"1097"},{"ruleId":"975","severity":1,"message":"1098","line":85,"column":8,"nodeType":"977","endLine":85,"endColumn":20,"suggestions":"1099"},{"ruleId":"933","severity":1,"message":"1045","line":4,"column":5,"nodeType":"935","messageId":"936","endLine":4,"endColumn":10},{"ruleId":"933","severity":1,"message":"1027","line":4,"column":12,"nodeType":"935","messageId":"936","endLine":4,"endColumn":16},{"ruleId":"933","severity":1,"message":"1096","line":9,"column":7,"nodeType":"935","messageId":"936","endLine":9,"endColumn":13},{"ruleId":"933","severity":1,"message":"1044","line":6,"column":22,"nodeType":"935","messageId":"936","endLine":6,"endColumn":26},{"ruleId":"933","severity":1,"message":"1045","line":6,"column":45,"nodeType":"935","messageId":"936","endLine":6,"endColumn":50},{"ruleId":"933","severity":1,"message":"1086","line":10,"column":10,"nodeType":"935","messageId":"936","endLine":10,"endColumn":18},{"ruleId":"1010","severity":1,"message":"1011","line":29,"column":9,"nodeType":"1012","messageId":"1013","endLine":29,"endColumn":60},{"ruleId":"975","severity":1,"message":"987","line":117,"column":15,"nodeType":"988","endLine":120,"endColumn":6},{"ruleId":"975","severity":1,"message":"989","line":120,"column":8,"nodeType":"977","endLine":120,"endColumn":15,"suggestions":"1100"},{"ruleId":"975","severity":1,"message":"987","line":121,"column":15,"nodeType":"988","endLine":123,"endColumn":6},{"ruleId":"975","severity":1,"message":"1101","line":123,"column":8,"nodeType":"977","endLine":123,"endColumn":22,"suggestions":"1102"},{"ruleId":"975","severity":1,"message":"987","line":142,"column":15,"nodeType":"988","endLine":147,"endColumn":6},{"ruleId":"940","severity":1,"message":"941","line":163,"column":54,"nodeType":"942","messageId":"943","endLine":163,"endColumn":56},{"ruleId":"940","severity":1,"message":"941","line":167,"column":19,"nodeType":"942","messageId":"943","endLine":167,"endColumn":21},{"ruleId":"940","severity":1,"message":"941","line":174,"column":26,"nodeType":"942","messageId":"943","endLine":174,"endColumn":28},{"ruleId":"933","severity":1,"message":"1081","line":9,"column":8,"nodeType":"935","messageId":"936","endLine":9,"endColumn":22},{"ruleId":"984","severity":1,"message":"985","line":68,"column":4,"nodeType":"986","endLine":68,"endColumn":150},{"ruleId":"933","severity":1,"message":"1103","line":92,"column":16,"nodeType":"935","messageId":"936","endLine":92,"endColumn":24},{"ruleId":"975","severity":1,"message":"987","line":98,"column":12,"nodeType":"988","endLine":100,"endColumn":3},{"ruleId":"975","severity":1,"message":"989","line":100,"column":5,"nodeType":"977","endLine":100,"endColumn":12,"suggestions":"1104"},{"ruleId":"940","severity":1,"message":"941","line":103,"column":45,"nodeType":"942","messageId":"943","endLine":103,"endColumn":47},{"ruleId":"940","severity":1,"message":"941","line":107,"column":13,"nodeType":"942","messageId":"943","endLine":107,"endColumn":15},{"ruleId":"975","severity":1,"message":"987","line":112,"column":12,"nodeType":"988","endLine":117,"endColumn":3},{"ruleId":"975","severity":1,"message":"1105","line":117,"column":5,"nodeType":"977","endLine":117,"endColumn":18,"suggestions":"1106"},{"ruleId":"940","severity":1,"message":"941","line":144,"column":28,"nodeType":"942","messageId":"943","endLine":144,"endColumn":30},{"ruleId":"933","severity":1,"message":"1041","line":3,"column":10,"nodeType":"935","messageId":"936","endLine":3,"endColumn":15},{"ruleId":"933","severity":1,"message":"1042","line":3,"column":17,"nodeType":"935","messageId":"936","endLine":3,"endColumn":20},{"ruleId":"933","severity":1,"message":"1025","line":3,"column":38,"nodeType":"935","messageId":"936","endLine":3,"endColumn":43},{"ruleId":"933","severity":1,"message":"1079","line":3,"column":52,"nodeType":"935","messageId":"936","endLine":3,"endColumn":58},{"ruleId":"933","severity":1,"message":"1046","line":3,"column":60,"nodeType":"935","messageId":"936","endLine":3,"endColumn":66},"no-unused-vars","'NAV_TYPE_SIDE' is defined but never used.","Identifier","unusedVar","'ADD_BOOKING_ITEM' is defined but never used.","'REMOVE_TAG_TO_BOOKING_ITEM' is defined but never used.","'REMOVE_BOOKING_ITEM' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'GET_MY_CALENDAR_BOOKINGS_ERROR' is defined but never used.","'getBookings' is defined but never used.","'takeLatest' is defined but never used.","'takeEvery' is defined but never used.","'getUser' is defined but never used.","'GET_DBA_LISTING_DATA_SUCCESS' is defined but never used.","'res' is assigned a value but never used.","'ON' is defined but never used.","'rest' is defined but never used.","'DESTINATION_SUCCESS' is defined but never used.","'GET_MY_LOCATION' is defined but never used.","'GET_MY_LOCATION_ERROR' is defined but never used.","'GET_MY_LOCATION_SUCCESS' is defined but never used.","'HIDE_MESSAGE' is defined but never used.","'SHOW_MESSAGE' is defined but never used.","'DESTINATION_ERROR' is defined but never used.","no-redeclare","'navigation' is already defined.","redeclared","'DashboardOutlined' is defined but never used.","'CalendarOutlined' is defined but never used.","'AUTH_PREFIX_PATH' is defined but never used.","'NavNotification' is defined but never used.","'direction' is assigned a value but never used.","'searchActive' is assigned a value but never used.","'onSearchActive' is assigned a value but never used.","'EditOutlined' is defined but never used.","'ShopOutlined' is defined but never used.","'QuestionCircleOutlined' is defined but never used.","'user' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCalendarDates'. Either include it or remove the dependency array.","ArrayExpression",["1107"],"'setState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCalendarDates'. Either include it or remove the dependency array. If 'getCalendarDates' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1108"],"React Hook useEffect has a missing dependency: 'rest.location.search'. Either include it or remove the dependency array.",["1109"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getBookings'. Either include it or remove the dependency array. If 'getBookings' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1110"],"'onChangeSort' is assigned a value but never used.","'Empty' is defined but never used.","'Avatar' is defined but never used.","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'statusOptions' is defined but never used.","'sortOptions' is defined but never used.","'NewMembersData' is defined but never used.","'RecentTransactionData' is defined but never used.","'EyeOutlined' is defined but never used.","'EllipsisOutlined' is defined but never used.","'ReloadOutlined' is defined but never used.","'utils' is defined but never used.","'withRouter' is defined but never used.","'useSelector' is defined but never used.","'setLoaded' is assigned a value but never used.",["1111"],"'result' is assigned a value but never used.","'selectedRecord' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Alert' is defined but never used.","'BookingList' is defined but never used.","'PlusOutlined' is defined but never used.","'motion' is defined but never used.","'destination' is already defined.","React Hook useEffect has a missing dependency: 'updateBounds'. Either include it or remove the dependency array.",["1112"],"React Hook useEffect has missing dependencies: 'getRouteData' and 'routeId'. Either include them or remove the dependency array. If 'getRouteData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1113"],"React Hook useEffect has a missing dependency: 'createRoute'. Either include it or remove the dependency array.",["1114"],"'Input' is defined but never used.","'Collapse' is defined but never used.","'Tabs' is defined but never used.","React Hook useEffect has a missing dependency: 'hideMessage'. Either include it or remove the dependency array. If 'hideMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1115"],"'t' is assigned a value but never used.",["1116"],"'x' is assigned a value but never used.",["1117"],"'shipping' is assigned a value but never used.","'useEffect' is defined but never used.","'myCalendarAddBooking' is defined but never used.","'addDestination' is defined but never used.","'addTagBookingItem' is defined but never used.","'moment' is defined but never used.","'ArrowUpOutlined' is defined but never used.","'Table' is defined but never used.","'Tag' is defined but never used.","'Tooltip' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.","'Select' is defined but never used.","'STATUS_COLORS' is defined but never used.","'Item' is defined but never used.","'Drawer' is defined but never used.","'Divider' is defined but never used.","'IntlMessage' is defined but never used.","React Hook useEffect has missing dependencies: 'hideMessage', 'showMessage', and 'userId'. Either include them or remove the dependency array.",["1118"],"'showBookingMessage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hideBookingMessage'. Either include it or remove the dependency array.",["1119"],"React Hook useEffect has missing dependencies: 'hideBookingMessage' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["1120"],"React Hook useEffect has missing dependencies: 'bookingId', 'hideMessage', and 'showMessage'. Either include them or remove the dependency array.",["1121"],"'Component' is defined but never used.","'index' is assigned a value but never used.","'userProfileVisible' is assigned a value but never used.","'selectedUser' is assigned a value but never used.","'Steps' is defined but never used.","'Form' is defined but never used.","'Modal' is defined but never used.","'Result' is defined but never used.","'LinkOutlined' is defined but never used.","'COLOR_GRAY' is defined but never used.","'selectedRange' is assigned a value but never used.","'hourButtons' is assigned a value but never used.","'Calendar' is defined but never used.","'Badge' is defined but never used.","'Link' is defined but never used.","'LoadingOutlined' is defined but never used.","'CheckCircleTwoTone' is defined but never used.","'Space' is defined but never used.","'Button' is defined but never used.","'Radio' is defined but never used.","'BookingService' is defined but never used.","'Flex' is defined but never used.","'debounceTime' is defined but never used.","'distinctUntilChanged' is defined but never used.","'takeUntil' is defined but never used.","'debounce' is defined but never used.","'setTableState' is assigned a value but never used.",["1122"],"'MailOutlined' is defined but never used.","'UserService' is defined but never used.","'hideAuthMessage' is defined but never used.","'form' is assigned a value but never used.","'hideMessage' is assigned a value but never used.","'showMessage' is assigned a value but never used.","'LockOutlined' is defined but never used.","'layout' is assigned a value but never used.",["1123"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["1124"],["1125"],"React Hook useEffect has a missing dependency: 'tableState'. Either include it or remove the dependency array. You can also do a functional update 'setTableState(t => ...)' if you only need 'tableState' in the 'setTableState' call.",["1126"],"'setQuery' is assigned a value but never used.",["1127"],"React Hook useEffect has a missing dependency: 'hideBookingListMessage'. Either include it or remove the dependency array. If 'hideBookingListMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1128"],{"desc":"1129","fix":"1130"},{"desc":"1129","fix":"1131"},{"desc":"1132","fix":"1133"},{"desc":"1134","fix":"1135"},{"desc":"1136","fix":"1137"},{"desc":"1138","fix":"1139"},{"desc":"1140","fix":"1141"},{"desc":"1142","fix":"1143"},{"desc":"1144","fix":"1145"},{"desc":"1144","fix":"1146"},{"desc":"1147","fix":"1148"},{"desc":"1149","fix":"1150"},{"desc":"1151","fix":"1152"},{"desc":"1153","fix":"1154"},{"desc":"1155","fix":"1156"},{"desc":"1134","fix":"1157"},{"desc":"1158","fix":"1159"},{"desc":"1160","fix":"1161"},{"desc":"1134","fix":"1162"},{"desc":"1163","fix":"1164"},{"desc":"1134","fix":"1165"},{"desc":"1166","fix":"1167"},"Update the dependencies array to be: [getCalendarDates, state.dates]",{"range":"1168","text":"1169"},{"range":"1170","text":"1169"},"Update the dependencies array to be: [rest.location.search]",{"range":"1171","text":"1172"},"Update the dependencies array to be: [getBookings, query]",{"range":"1173","text":"1174"},"Update the dependencies array to be: [getBookings, loaded]",{"range":"1175","text":"1176"},"Update the dependencies array to be: [gMap, updateBounds]",{"range":"1177","text":"1178"},"Update the dependencies array to be: [getRouteData, routeId]",{"range":"1179","text":"1180"},"Update the dependencies array to be: [destinations, myLocation, gMap, createRoute]",{"range":"1181","text":"1182"},"Update the dependencies array to be: [hideMessage, isShowMessage]",{"range":"1183","text":"1184"},{"range":"1185","text":"1184"},"Update the dependencies array to be: [query, destinations, getBookings]",{"range":"1186","text":"1187"},"Update the dependencies array to be: [hideMessage, showMessage, userId]",{"range":"1188","text":"1189"},"Update the dependencies array to be: [hideBookingMessage, showMessage]",{"range":"1190","text":"1191"},"Update the dependencies array to be: [hideBookingMessage, state, success]",{"range":"1192","text":"1193"},"Update the dependencies array to be: [bookingId, hideMessage, showMessage]",{"range":"1194","text":"1195"},{"range":"1196","text":"1174"},"Update the dependencies array to be: [getCalendarDates]",{"range":"1197","text":"1198"},"Update the dependencies array to be: [pickupData, state]",{"range":"1199","text":"1200"},{"range":"1201","text":"1174"},"Update the dependencies array to be: [tableState, totalResults]",{"range":"1202","text":"1203"},{"range":"1204","text":"1174"},"Update the dependencies array to be: [hideBookingListMessage, showMessage]",{"range":"1205","text":"1206"},[1382,1395],"[getCalendarDates, state.dates]",[441,454],[754,756],"[rest.location.search]",[4025,4032],"[getBookings, query]",[2083,2091],"[getBookings, loaded]",[5975,5981],"[gMap, updateBounds]",[6055,6057],"[getRouteData, routeId]",[6172,6204],"[destinations, myLocation, gMap, createRoute]",[1458,1473],"[hideMessage, isShowMessage]",[4829,4844],[3404,3425],"[query, destinations, getBookings]",[1285,1287],"[hideMessage, showMessage, userId]",[4316,4329],"[hideBookingMessage, showMessage]",[4619,4628],"[hideBookingMessage, state, success]",[1408,1410],"[bookingId, hideMessage, showMessage]",[2888,2895],[2940,2942],"[getCalendarDates]",[3082,3094],"[pickupData, state]",[4147,4154],[4300,4314],"[tableState, totalResults]",[3610,3617],[4096,4109],"[hideBookingListMessage, showMessage]"]